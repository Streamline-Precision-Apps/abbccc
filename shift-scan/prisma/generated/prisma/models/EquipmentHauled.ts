
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `EquipmentHauled` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model EquipmentHauled
 * 
 */
export type EquipmentHauledModel = runtime.Types.Result.DefaultSelection<Prisma.$EquipmentHauledPayload>

export type AggregateEquipmentHauled = {
  _count: EquipmentHauledCountAggregateOutputType | null
  _avg: EquipmentHauledAvgAggregateOutputType | null
  _sum: EquipmentHauledSumAggregateOutputType | null
  _min: EquipmentHauledMinAggregateOutputType | null
  _max: EquipmentHauledMaxAggregateOutputType | null
}

export type EquipmentHauledAvgAggregateOutputType = {
  startMileage: number | null
  endMileage: number | null
}

export type EquipmentHauledSumAggregateOutputType = {
  startMileage: number | null
  endMileage: number | null
}

export type EquipmentHauledMinAggregateOutputType = {
  id: string | null
  truckingLogId: string | null
  equipmentId: string | null
  source: string | null
  destination: string | null
  startMileage: number | null
  endMileage: number | null
  createdAt: Date | null
}

export type EquipmentHauledMaxAggregateOutputType = {
  id: string | null
  truckingLogId: string | null
  equipmentId: string | null
  source: string | null
  destination: string | null
  startMileage: number | null
  endMileage: number | null
  createdAt: Date | null
}

export type EquipmentHauledCountAggregateOutputType = {
  id: number
  truckingLogId: number
  equipmentId: number
  source: number
  destination: number
  startMileage: number
  endMileage: number
  createdAt: number
  _all: number
}


export type EquipmentHauledAvgAggregateInputType = {
  startMileage?: true
  endMileage?: true
}

export type EquipmentHauledSumAggregateInputType = {
  startMileage?: true
  endMileage?: true
}

export type EquipmentHauledMinAggregateInputType = {
  id?: true
  truckingLogId?: true
  equipmentId?: true
  source?: true
  destination?: true
  startMileage?: true
  endMileage?: true
  createdAt?: true
}

export type EquipmentHauledMaxAggregateInputType = {
  id?: true
  truckingLogId?: true
  equipmentId?: true
  source?: true
  destination?: true
  startMileage?: true
  endMileage?: true
  createdAt?: true
}

export type EquipmentHauledCountAggregateInputType = {
  id?: true
  truckingLogId?: true
  equipmentId?: true
  source?: true
  destination?: true
  startMileage?: true
  endMileage?: true
  createdAt?: true
  _all?: true
}

export type EquipmentHauledAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EquipmentHauled to aggregate.
   */
  where?: Prisma.EquipmentHauledWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EquipmentHauleds to fetch.
   */
  orderBy?: Prisma.EquipmentHauledOrderByWithRelationInput | Prisma.EquipmentHauledOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.EquipmentHauledWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EquipmentHauleds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EquipmentHauleds.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned EquipmentHauleds
  **/
  _count?: true | EquipmentHauledCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: EquipmentHauledAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: EquipmentHauledSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: EquipmentHauledMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: EquipmentHauledMaxAggregateInputType
}

export type GetEquipmentHauledAggregateType<T extends EquipmentHauledAggregateArgs> = {
      [P in keyof T & keyof AggregateEquipmentHauled]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEquipmentHauled[P]>
    : Prisma.GetScalarType<T[P], AggregateEquipmentHauled[P]>
}




export type EquipmentHauledGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EquipmentHauledWhereInput
  orderBy?: Prisma.EquipmentHauledOrderByWithAggregationInput | Prisma.EquipmentHauledOrderByWithAggregationInput[]
  by: Prisma.EquipmentHauledScalarFieldEnum[] | Prisma.EquipmentHauledScalarFieldEnum
  having?: Prisma.EquipmentHauledScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: EquipmentHauledCountAggregateInputType | true
  _avg?: EquipmentHauledAvgAggregateInputType
  _sum?: EquipmentHauledSumAggregateInputType
  _min?: EquipmentHauledMinAggregateInputType
  _max?: EquipmentHauledMaxAggregateInputType
}

export type EquipmentHauledGroupByOutputType = {
  id: string
  truckingLogId: string
  equipmentId: string | null
  source: string | null
  destination: string | null
  startMileage: number | null
  endMileage: number | null
  createdAt: Date
  _count: EquipmentHauledCountAggregateOutputType | null
  _avg: EquipmentHauledAvgAggregateOutputType | null
  _sum: EquipmentHauledSumAggregateOutputType | null
  _min: EquipmentHauledMinAggregateOutputType | null
  _max: EquipmentHauledMaxAggregateOutputType | null
}

type GetEquipmentHauledGroupByPayload<T extends EquipmentHauledGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EquipmentHauledGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof EquipmentHauledGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EquipmentHauledGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EquipmentHauledGroupByOutputType[P]>
      }
    >
  >



export type EquipmentHauledWhereInput = {
  AND?: Prisma.EquipmentHauledWhereInput | Prisma.EquipmentHauledWhereInput[]
  OR?: Prisma.EquipmentHauledWhereInput[]
  NOT?: Prisma.EquipmentHauledWhereInput | Prisma.EquipmentHauledWhereInput[]
  id?: Prisma.StringFilter<"EquipmentHauled"> | string
  truckingLogId?: Prisma.StringFilter<"EquipmentHauled"> | string
  equipmentId?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  source?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  destination?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  startMileage?: Prisma.IntNullableFilter<"EquipmentHauled"> | number | null
  endMileage?: Prisma.IntNullableFilter<"EquipmentHauled"> | number | null
  createdAt?: Prisma.DateTimeFilter<"EquipmentHauled"> | Date | string
  Equipment?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  TruckingLog?: Prisma.XOR<Prisma.TruckingLogScalarRelationFilter, Prisma.TruckingLogWhereInput>
}

export type EquipmentHauledOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrderInput | Prisma.SortOrder
  source?: Prisma.SortOrderInput | Prisma.SortOrder
  destination?: Prisma.SortOrderInput | Prisma.SortOrder
  startMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  endMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  Equipment?: Prisma.EquipmentOrderByWithRelationInput
  TruckingLog?: Prisma.TruckingLogOrderByWithRelationInput
}

export type EquipmentHauledWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.EquipmentHauledWhereInput | Prisma.EquipmentHauledWhereInput[]
  OR?: Prisma.EquipmentHauledWhereInput[]
  NOT?: Prisma.EquipmentHauledWhereInput | Prisma.EquipmentHauledWhereInput[]
  truckingLogId?: Prisma.StringFilter<"EquipmentHauled"> | string
  equipmentId?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  source?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  destination?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  startMileage?: Prisma.IntNullableFilter<"EquipmentHauled"> | number | null
  endMileage?: Prisma.IntNullableFilter<"EquipmentHauled"> | number | null
  createdAt?: Prisma.DateTimeFilter<"EquipmentHauled"> | Date | string
  Equipment?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  TruckingLog?: Prisma.XOR<Prisma.TruckingLogScalarRelationFilter, Prisma.TruckingLogWhereInput>
}, "id">

export type EquipmentHauledOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrderInput | Prisma.SortOrder
  source?: Prisma.SortOrderInput | Prisma.SortOrder
  destination?: Prisma.SortOrderInput | Prisma.SortOrder
  startMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  endMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.EquipmentHauledCountOrderByAggregateInput
  _avg?: Prisma.EquipmentHauledAvgOrderByAggregateInput
  _max?: Prisma.EquipmentHauledMaxOrderByAggregateInput
  _min?: Prisma.EquipmentHauledMinOrderByAggregateInput
  _sum?: Prisma.EquipmentHauledSumOrderByAggregateInput
}

export type EquipmentHauledScalarWhereWithAggregatesInput = {
  AND?: Prisma.EquipmentHauledScalarWhereWithAggregatesInput | Prisma.EquipmentHauledScalarWhereWithAggregatesInput[]
  OR?: Prisma.EquipmentHauledScalarWhereWithAggregatesInput[]
  NOT?: Prisma.EquipmentHauledScalarWhereWithAggregatesInput | Prisma.EquipmentHauledScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"EquipmentHauled"> | string
  truckingLogId?: Prisma.StringWithAggregatesFilter<"EquipmentHauled"> | string
  equipmentId?: Prisma.StringNullableWithAggregatesFilter<"EquipmentHauled"> | string | null
  source?: Prisma.StringNullableWithAggregatesFilter<"EquipmentHauled"> | string | null
  destination?: Prisma.StringNullableWithAggregatesFilter<"EquipmentHauled"> | string | null
  startMileage?: Prisma.IntNullableWithAggregatesFilter<"EquipmentHauled"> | number | null
  endMileage?: Prisma.IntNullableWithAggregatesFilter<"EquipmentHauled"> | number | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"EquipmentHauled"> | Date | string
}

export type EquipmentHauledCreateInput = {
  id?: string
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutEquipmentHauledInput
  TruckingLog: Prisma.TruckingLogCreateNestedOneWithoutEquipmentHauledInput
}

export type EquipmentHauledUncheckedCreateInput = {
  id?: string
  truckingLogId: string
  equipmentId?: string | null
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
}

export type EquipmentHauledUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Equipment?: Prisma.EquipmentUpdateOneWithoutEquipmentHauledNestedInput
  TruckingLog?: Prisma.TruckingLogUpdateOneRequiredWithoutEquipmentHauledNestedInput
}

export type EquipmentHauledUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  truckingLogId?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipmentHauledCreateManyInput = {
  id?: string
  truckingLogId: string
  equipmentId?: string | null
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
}

export type EquipmentHauledUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipmentHauledUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  truckingLogId?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipmentHauledListRelationFilter = {
  every?: Prisma.EquipmentHauledWhereInput
  some?: Prisma.EquipmentHauledWhereInput
  none?: Prisma.EquipmentHauledWhereInput
}

export type EquipmentHauledOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EquipmentHauledCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  source?: Prisma.SortOrder
  destination?: Prisma.SortOrder
  startMileage?: Prisma.SortOrder
  endMileage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type EquipmentHauledAvgOrderByAggregateInput = {
  startMileage?: Prisma.SortOrder
  endMileage?: Prisma.SortOrder
}

export type EquipmentHauledMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  source?: Prisma.SortOrder
  destination?: Prisma.SortOrder
  startMileage?: Prisma.SortOrder
  endMileage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type EquipmentHauledMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  source?: Prisma.SortOrder
  destination?: Prisma.SortOrder
  startMileage?: Prisma.SortOrder
  endMileage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type EquipmentHauledSumOrderByAggregateInput = {
  startMileage?: Prisma.SortOrder
  endMileage?: Prisma.SortOrder
}

export type EquipmentHauledCreateNestedManyWithoutEquipmentInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput> | Prisma.EquipmentHauledCreateWithoutEquipmentInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput | Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput[]
  createMany?: Prisma.EquipmentHauledCreateManyEquipmentInputEnvelope
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
}

export type EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput> | Prisma.EquipmentHauledCreateWithoutEquipmentInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput | Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput[]
  createMany?: Prisma.EquipmentHauledCreateManyEquipmentInputEnvelope
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
}

export type EquipmentHauledUpdateManyWithoutEquipmentNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput> | Prisma.EquipmentHauledCreateWithoutEquipmentInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput | Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput[]
  upsert?: Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutEquipmentInput | Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutEquipmentInput[]
  createMany?: Prisma.EquipmentHauledCreateManyEquipmentInputEnvelope
  set?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  disconnect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  delete?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  update?: Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutEquipmentInput | Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutEquipmentInput[]
  updateMany?: Prisma.EquipmentHauledUpdateManyWithWhereWithoutEquipmentInput | Prisma.EquipmentHauledUpdateManyWithWhereWithoutEquipmentInput[]
  deleteMany?: Prisma.EquipmentHauledScalarWhereInput | Prisma.EquipmentHauledScalarWhereInput[]
}

export type EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput> | Prisma.EquipmentHauledCreateWithoutEquipmentInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput | Prisma.EquipmentHauledCreateOrConnectWithoutEquipmentInput[]
  upsert?: Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutEquipmentInput | Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutEquipmentInput[]
  createMany?: Prisma.EquipmentHauledCreateManyEquipmentInputEnvelope
  set?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  disconnect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  delete?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  update?: Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutEquipmentInput | Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutEquipmentInput[]
  updateMany?: Prisma.EquipmentHauledUpdateManyWithWhereWithoutEquipmentInput | Prisma.EquipmentHauledUpdateManyWithWhereWithoutEquipmentInput[]
  deleteMany?: Prisma.EquipmentHauledScalarWhereInput | Prisma.EquipmentHauledScalarWhereInput[]
}

export type EquipmentHauledCreateNestedManyWithoutTruckingLogInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput> | Prisma.EquipmentHauledCreateWithoutTruckingLogInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput | Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput[]
  createMany?: Prisma.EquipmentHauledCreateManyTruckingLogInputEnvelope
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
}

export type EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput> | Prisma.EquipmentHauledCreateWithoutTruckingLogInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput | Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput[]
  createMany?: Prisma.EquipmentHauledCreateManyTruckingLogInputEnvelope
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
}

export type EquipmentHauledUpdateManyWithoutTruckingLogNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput> | Prisma.EquipmentHauledCreateWithoutTruckingLogInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput | Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput[]
  upsert?: Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutTruckingLogInput | Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutTruckingLogInput[]
  createMany?: Prisma.EquipmentHauledCreateManyTruckingLogInputEnvelope
  set?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  disconnect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  delete?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  update?: Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutTruckingLogInput | Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutTruckingLogInput[]
  updateMany?: Prisma.EquipmentHauledUpdateManyWithWhereWithoutTruckingLogInput | Prisma.EquipmentHauledUpdateManyWithWhereWithoutTruckingLogInput[]
  deleteMany?: Prisma.EquipmentHauledScalarWhereInput | Prisma.EquipmentHauledScalarWhereInput[]
}

export type EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput> | Prisma.EquipmentHauledCreateWithoutTruckingLogInput[] | Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput | Prisma.EquipmentHauledCreateOrConnectWithoutTruckingLogInput[]
  upsert?: Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutTruckingLogInput | Prisma.EquipmentHauledUpsertWithWhereUniqueWithoutTruckingLogInput[]
  createMany?: Prisma.EquipmentHauledCreateManyTruckingLogInputEnvelope
  set?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  disconnect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  delete?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  connect?: Prisma.EquipmentHauledWhereUniqueInput | Prisma.EquipmentHauledWhereUniqueInput[]
  update?: Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutTruckingLogInput | Prisma.EquipmentHauledUpdateWithWhereUniqueWithoutTruckingLogInput[]
  updateMany?: Prisma.EquipmentHauledUpdateManyWithWhereWithoutTruckingLogInput | Prisma.EquipmentHauledUpdateManyWithWhereWithoutTruckingLogInput[]
  deleteMany?: Prisma.EquipmentHauledScalarWhereInput | Prisma.EquipmentHauledScalarWhereInput[]
}

export type EquipmentHauledCreateWithoutEquipmentInput = {
  id?: string
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
  TruckingLog: Prisma.TruckingLogCreateNestedOneWithoutEquipmentHauledInput
}

export type EquipmentHauledUncheckedCreateWithoutEquipmentInput = {
  id?: string
  truckingLogId: string
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
}

export type EquipmentHauledCreateOrConnectWithoutEquipmentInput = {
  where: Prisma.EquipmentHauledWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput>
}

export type EquipmentHauledCreateManyEquipmentInputEnvelope = {
  data: Prisma.EquipmentHauledCreateManyEquipmentInput | Prisma.EquipmentHauledCreateManyEquipmentInput[]
  skipDuplicates?: boolean
}

export type EquipmentHauledUpsertWithWhereUniqueWithoutEquipmentInput = {
  where: Prisma.EquipmentHauledWhereUniqueInput
  update: Prisma.XOR<Prisma.EquipmentHauledUpdateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedUpdateWithoutEquipmentInput>
  create: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedCreateWithoutEquipmentInput>
}

export type EquipmentHauledUpdateWithWhereUniqueWithoutEquipmentInput = {
  where: Prisma.EquipmentHauledWhereUniqueInput
  data: Prisma.XOR<Prisma.EquipmentHauledUpdateWithoutEquipmentInput, Prisma.EquipmentHauledUncheckedUpdateWithoutEquipmentInput>
}

export type EquipmentHauledUpdateManyWithWhereWithoutEquipmentInput = {
  where: Prisma.EquipmentHauledScalarWhereInput
  data: Prisma.XOR<Prisma.EquipmentHauledUpdateManyMutationInput, Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentInput>
}

export type EquipmentHauledScalarWhereInput = {
  AND?: Prisma.EquipmentHauledScalarWhereInput | Prisma.EquipmentHauledScalarWhereInput[]
  OR?: Prisma.EquipmentHauledScalarWhereInput[]
  NOT?: Prisma.EquipmentHauledScalarWhereInput | Prisma.EquipmentHauledScalarWhereInput[]
  id?: Prisma.StringFilter<"EquipmentHauled"> | string
  truckingLogId?: Prisma.StringFilter<"EquipmentHauled"> | string
  equipmentId?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  source?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  destination?: Prisma.StringNullableFilter<"EquipmentHauled"> | string | null
  startMileage?: Prisma.IntNullableFilter<"EquipmentHauled"> | number | null
  endMileage?: Prisma.IntNullableFilter<"EquipmentHauled"> | number | null
  createdAt?: Prisma.DateTimeFilter<"EquipmentHauled"> | Date | string
}

export type EquipmentHauledCreateWithoutTruckingLogInput = {
  id?: string
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutEquipmentHauledInput
}

export type EquipmentHauledUncheckedCreateWithoutTruckingLogInput = {
  id?: string
  equipmentId?: string | null
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
}

export type EquipmentHauledCreateOrConnectWithoutTruckingLogInput = {
  where: Prisma.EquipmentHauledWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput>
}

export type EquipmentHauledCreateManyTruckingLogInputEnvelope = {
  data: Prisma.EquipmentHauledCreateManyTruckingLogInput | Prisma.EquipmentHauledCreateManyTruckingLogInput[]
  skipDuplicates?: boolean
}

export type EquipmentHauledUpsertWithWhereUniqueWithoutTruckingLogInput = {
  where: Prisma.EquipmentHauledWhereUniqueInput
  update: Prisma.XOR<Prisma.EquipmentHauledUpdateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedUpdateWithoutTruckingLogInput>
  create: Prisma.XOR<Prisma.EquipmentHauledCreateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedCreateWithoutTruckingLogInput>
}

export type EquipmentHauledUpdateWithWhereUniqueWithoutTruckingLogInput = {
  where: Prisma.EquipmentHauledWhereUniqueInput
  data: Prisma.XOR<Prisma.EquipmentHauledUpdateWithoutTruckingLogInput, Prisma.EquipmentHauledUncheckedUpdateWithoutTruckingLogInput>
}

export type EquipmentHauledUpdateManyWithWhereWithoutTruckingLogInput = {
  where: Prisma.EquipmentHauledScalarWhereInput
  data: Prisma.XOR<Prisma.EquipmentHauledUpdateManyMutationInput, Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogInput>
}

export type EquipmentHauledCreateManyEquipmentInput = {
  id?: string
  truckingLogId: string
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
}

export type EquipmentHauledUpdateWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  TruckingLog?: Prisma.TruckingLogUpdateOneRequiredWithoutEquipmentHauledNestedInput
}

export type EquipmentHauledUncheckedUpdateWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  truckingLogId?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipmentHauledUncheckedUpdateManyWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  truckingLogId?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipmentHauledCreateManyTruckingLogInput = {
  id?: string
  equipmentId?: string | null
  source?: string | null
  destination?: string | null
  startMileage?: number | null
  endMileage?: number | null
  createdAt?: Date | string
}

export type EquipmentHauledUpdateWithoutTruckingLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Equipment?: Prisma.EquipmentUpdateOneWithoutEquipmentHauledNestedInput
}

export type EquipmentHauledUncheckedUpdateWithoutTruckingLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipmentHauledUncheckedUpdateManyWithoutTruckingLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  source?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  destination?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type EquipmentHauledSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  truckingLogId?: boolean
  equipmentId?: boolean
  source?: boolean
  destination?: boolean
  startMileage?: boolean
  endMileage?: boolean
  createdAt?: boolean
  Equipment?: boolean | Prisma.EquipmentHauled$EquipmentArgs<ExtArgs>
  TruckingLog?: boolean | Prisma.TruckingLogDefaultArgs<ExtArgs>
}, ExtArgs["result"]["equipmentHauled"]>

export type EquipmentHauledSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  truckingLogId?: boolean
  equipmentId?: boolean
  source?: boolean
  destination?: boolean
  startMileage?: boolean
  endMileage?: boolean
  createdAt?: boolean
  Equipment?: boolean | Prisma.EquipmentHauled$EquipmentArgs<ExtArgs>
  TruckingLog?: boolean | Prisma.TruckingLogDefaultArgs<ExtArgs>
}, ExtArgs["result"]["equipmentHauled"]>

export type EquipmentHauledSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  truckingLogId?: boolean
  equipmentId?: boolean
  source?: boolean
  destination?: boolean
  startMileage?: boolean
  endMileage?: boolean
  createdAt?: boolean
  Equipment?: boolean | Prisma.EquipmentHauled$EquipmentArgs<ExtArgs>
  TruckingLog?: boolean | Prisma.TruckingLogDefaultArgs<ExtArgs>
}, ExtArgs["result"]["equipmentHauled"]>

export type EquipmentHauledSelectScalar = {
  id?: boolean
  truckingLogId?: boolean
  equipmentId?: boolean
  source?: boolean
  destination?: boolean
  startMileage?: boolean
  endMileage?: boolean
  createdAt?: boolean
}

export type EquipmentHauledOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "truckingLogId" | "equipmentId" | "source" | "destination" | "startMileage" | "endMileage" | "createdAt", ExtArgs["result"]["equipmentHauled"]>
export type EquipmentHauledInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Equipment?: boolean | Prisma.EquipmentHauled$EquipmentArgs<ExtArgs>
  TruckingLog?: boolean | Prisma.TruckingLogDefaultArgs<ExtArgs>
}
export type EquipmentHauledIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Equipment?: boolean | Prisma.EquipmentHauled$EquipmentArgs<ExtArgs>
  TruckingLog?: boolean | Prisma.TruckingLogDefaultArgs<ExtArgs>
}
export type EquipmentHauledIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Equipment?: boolean | Prisma.EquipmentHauled$EquipmentArgs<ExtArgs>
  TruckingLog?: boolean | Prisma.TruckingLogDefaultArgs<ExtArgs>
}

export type $EquipmentHauledPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "EquipmentHauled"
  objects: {
    Equipment: Prisma.$EquipmentPayload<ExtArgs> | null
    TruckingLog: Prisma.$TruckingLogPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    truckingLogId: string
    equipmentId: string | null
    source: string | null
    destination: string | null
    startMileage: number | null
    endMileage: number | null
    createdAt: Date
  }, ExtArgs["result"]["equipmentHauled"]>
  composites: {}
}

export type EquipmentHauledGetPayload<S extends boolean | null | undefined | EquipmentHauledDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload, S>

export type EquipmentHauledCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<EquipmentHauledFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: EquipmentHauledCountAggregateInputType | true
  }

export interface EquipmentHauledDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipmentHauled'], meta: { name: 'EquipmentHauled' } }
  /**
   * Find zero or one EquipmentHauled that matches the filter.
   * @param {EquipmentHauledFindUniqueArgs} args - Arguments to find a EquipmentHauled
   * @example
   * // Get one EquipmentHauled
   * const equipmentHauled = await prisma.equipmentHauled.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EquipmentHauledFindUniqueArgs>(args: Prisma.SelectSubset<T, EquipmentHauledFindUniqueArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one EquipmentHauled that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EquipmentHauledFindUniqueOrThrowArgs} args - Arguments to find a EquipmentHauled
   * @example
   * // Get one EquipmentHauled
   * const equipmentHauled = await prisma.equipmentHauled.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EquipmentHauledFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, EquipmentHauledFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EquipmentHauled that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentHauledFindFirstArgs} args - Arguments to find a EquipmentHauled
   * @example
   * // Get one EquipmentHauled
   * const equipmentHauled = await prisma.equipmentHauled.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EquipmentHauledFindFirstArgs>(args?: Prisma.SelectSubset<T, EquipmentHauledFindFirstArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EquipmentHauled that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentHauledFindFirstOrThrowArgs} args - Arguments to find a EquipmentHauled
   * @example
   * // Get one EquipmentHauled
   * const equipmentHauled = await prisma.equipmentHauled.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EquipmentHauledFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, EquipmentHauledFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more EquipmentHauleds that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentHauledFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EquipmentHauleds
   * const equipmentHauleds = await prisma.equipmentHauled.findMany()
   * 
   * // Get first 10 EquipmentHauleds
   * const equipmentHauleds = await prisma.equipmentHauled.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const equipmentHauledWithIdOnly = await prisma.equipmentHauled.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends EquipmentHauledFindManyArgs>(args?: Prisma.SelectSubset<T, EquipmentHauledFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a EquipmentHauled.
   * @param {EquipmentHauledCreateArgs} args - Arguments to create a EquipmentHauled.
   * @example
   * // Create one EquipmentHauled
   * const EquipmentHauled = await prisma.equipmentHauled.create({
   *   data: {
   *     // ... data to create a EquipmentHauled
   *   }
   * })
   * 
   */
  create<T extends EquipmentHauledCreateArgs>(args: Prisma.SelectSubset<T, EquipmentHauledCreateArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many EquipmentHauleds.
   * @param {EquipmentHauledCreateManyArgs} args - Arguments to create many EquipmentHauleds.
   * @example
   * // Create many EquipmentHauleds
   * const equipmentHauled = await prisma.equipmentHauled.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends EquipmentHauledCreateManyArgs>(args?: Prisma.SelectSubset<T, EquipmentHauledCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many EquipmentHauleds and returns the data saved in the database.
   * @param {EquipmentHauledCreateManyAndReturnArgs} args - Arguments to create many EquipmentHauleds.
   * @example
   * // Create many EquipmentHauleds
   * const equipmentHauled = await prisma.equipmentHauled.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many EquipmentHauleds and only return the `id`
   * const equipmentHauledWithIdOnly = await prisma.equipmentHauled.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends EquipmentHauledCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, EquipmentHauledCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a EquipmentHauled.
   * @param {EquipmentHauledDeleteArgs} args - Arguments to delete one EquipmentHauled.
   * @example
   * // Delete one EquipmentHauled
   * const EquipmentHauled = await prisma.equipmentHauled.delete({
   *   where: {
   *     // ... filter to delete one EquipmentHauled
   *   }
   * })
   * 
   */
  delete<T extends EquipmentHauledDeleteArgs>(args: Prisma.SelectSubset<T, EquipmentHauledDeleteArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one EquipmentHauled.
   * @param {EquipmentHauledUpdateArgs} args - Arguments to update one EquipmentHauled.
   * @example
   * // Update one EquipmentHauled
   * const equipmentHauled = await prisma.equipmentHauled.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends EquipmentHauledUpdateArgs>(args: Prisma.SelectSubset<T, EquipmentHauledUpdateArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more EquipmentHauleds.
   * @param {EquipmentHauledDeleteManyArgs} args - Arguments to filter EquipmentHauleds to delete.
   * @example
   * // Delete a few EquipmentHauleds
   * const { count } = await prisma.equipmentHauled.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends EquipmentHauledDeleteManyArgs>(args?: Prisma.SelectSubset<T, EquipmentHauledDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EquipmentHauleds.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentHauledUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EquipmentHauleds
   * const equipmentHauled = await prisma.equipmentHauled.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends EquipmentHauledUpdateManyArgs>(args: Prisma.SelectSubset<T, EquipmentHauledUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EquipmentHauleds and returns the data updated in the database.
   * @param {EquipmentHauledUpdateManyAndReturnArgs} args - Arguments to update many EquipmentHauleds.
   * @example
   * // Update many EquipmentHauleds
   * const equipmentHauled = await prisma.equipmentHauled.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more EquipmentHauleds and only return the `id`
   * const equipmentHauledWithIdOnly = await prisma.equipmentHauled.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends EquipmentHauledUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, EquipmentHauledUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one EquipmentHauled.
   * @param {EquipmentHauledUpsertArgs} args - Arguments to update or create a EquipmentHauled.
   * @example
   * // Update or create a EquipmentHauled
   * const equipmentHauled = await prisma.equipmentHauled.upsert({
   *   create: {
   *     // ... data to create a EquipmentHauled
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EquipmentHauled we want to update
   *   }
   * })
   */
  upsert<T extends EquipmentHauledUpsertArgs>(args: Prisma.SelectSubset<T, EquipmentHauledUpsertArgs<ExtArgs>>): Prisma.Prisma__EquipmentHauledClient<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of EquipmentHauleds.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentHauledCountArgs} args - Arguments to filter EquipmentHauleds to count.
   * @example
   * // Count the number of EquipmentHauleds
   * const count = await prisma.equipmentHauled.count({
   *   where: {
   *     // ... the filter for the EquipmentHauleds we want to count
   *   }
   * })
  **/
  count<T extends EquipmentHauledCountArgs>(
    args?: Prisma.Subset<T, EquipmentHauledCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EquipmentHauledCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a EquipmentHauled.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentHauledAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends EquipmentHauledAggregateArgs>(args: Prisma.Subset<T, EquipmentHauledAggregateArgs>): Prisma.PrismaPromise<GetEquipmentHauledAggregateType<T>>

  /**
   * Group by EquipmentHauled.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentHauledGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends EquipmentHauledGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EquipmentHauledGroupByArgs['orderBy'] }
      : { orderBy?: EquipmentHauledGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, EquipmentHauledGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipmentHauledGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the EquipmentHauled model
 */
readonly fields: EquipmentHauledFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EquipmentHauled.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EquipmentHauledClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Equipment<T extends Prisma.EquipmentHauled$EquipmentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EquipmentHauled$EquipmentArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  TruckingLog<T extends Prisma.TruckingLogDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLogDefaultArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the EquipmentHauled model
 */
export interface EquipmentHauledFieldRefs {
  readonly id: Prisma.FieldRef<"EquipmentHauled", 'String'>
  readonly truckingLogId: Prisma.FieldRef<"EquipmentHauled", 'String'>
  readonly equipmentId: Prisma.FieldRef<"EquipmentHauled", 'String'>
  readonly source: Prisma.FieldRef<"EquipmentHauled", 'String'>
  readonly destination: Prisma.FieldRef<"EquipmentHauled", 'String'>
  readonly startMileage: Prisma.FieldRef<"EquipmentHauled", 'Int'>
  readonly endMileage: Prisma.FieldRef<"EquipmentHauled", 'Int'>
  readonly createdAt: Prisma.FieldRef<"EquipmentHauled", 'DateTime'>
}
    

// Custom InputTypes
/**
 * EquipmentHauled findUnique
 */
export type EquipmentHauledFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * Filter, which EquipmentHauled to fetch.
   */
  where: Prisma.EquipmentHauledWhereUniqueInput
}

/**
 * EquipmentHauled findUniqueOrThrow
 */
export type EquipmentHauledFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * Filter, which EquipmentHauled to fetch.
   */
  where: Prisma.EquipmentHauledWhereUniqueInput
}

/**
 * EquipmentHauled findFirst
 */
export type EquipmentHauledFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * Filter, which EquipmentHauled to fetch.
   */
  where?: Prisma.EquipmentHauledWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EquipmentHauleds to fetch.
   */
  orderBy?: Prisma.EquipmentHauledOrderByWithRelationInput | Prisma.EquipmentHauledOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EquipmentHauleds.
   */
  cursor?: Prisma.EquipmentHauledWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EquipmentHauleds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EquipmentHauleds.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EquipmentHauleds.
   */
  distinct?: Prisma.EquipmentHauledScalarFieldEnum | Prisma.EquipmentHauledScalarFieldEnum[]
}

/**
 * EquipmentHauled findFirstOrThrow
 */
export type EquipmentHauledFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * Filter, which EquipmentHauled to fetch.
   */
  where?: Prisma.EquipmentHauledWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EquipmentHauleds to fetch.
   */
  orderBy?: Prisma.EquipmentHauledOrderByWithRelationInput | Prisma.EquipmentHauledOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EquipmentHauleds.
   */
  cursor?: Prisma.EquipmentHauledWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EquipmentHauleds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EquipmentHauleds.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EquipmentHauleds.
   */
  distinct?: Prisma.EquipmentHauledScalarFieldEnum | Prisma.EquipmentHauledScalarFieldEnum[]
}

/**
 * EquipmentHauled findMany
 */
export type EquipmentHauledFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * Filter, which EquipmentHauleds to fetch.
   */
  where?: Prisma.EquipmentHauledWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EquipmentHauleds to fetch.
   */
  orderBy?: Prisma.EquipmentHauledOrderByWithRelationInput | Prisma.EquipmentHauledOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing EquipmentHauleds.
   */
  cursor?: Prisma.EquipmentHauledWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EquipmentHauleds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EquipmentHauleds.
   */
  skip?: number
  distinct?: Prisma.EquipmentHauledScalarFieldEnum | Prisma.EquipmentHauledScalarFieldEnum[]
}

/**
 * EquipmentHauled create
 */
export type EquipmentHauledCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * The data needed to create a EquipmentHauled.
   */
  data: Prisma.XOR<Prisma.EquipmentHauledCreateInput, Prisma.EquipmentHauledUncheckedCreateInput>
}

/**
 * EquipmentHauled createMany
 */
export type EquipmentHauledCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many EquipmentHauleds.
   */
  data: Prisma.EquipmentHauledCreateManyInput | Prisma.EquipmentHauledCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * EquipmentHauled createManyAndReturn
 */
export type EquipmentHauledCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * The data used to create many EquipmentHauleds.
   */
  data: Prisma.EquipmentHauledCreateManyInput | Prisma.EquipmentHauledCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * EquipmentHauled update
 */
export type EquipmentHauledUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * The data needed to update a EquipmentHauled.
   */
  data: Prisma.XOR<Prisma.EquipmentHauledUpdateInput, Prisma.EquipmentHauledUncheckedUpdateInput>
  /**
   * Choose, which EquipmentHauled to update.
   */
  where: Prisma.EquipmentHauledWhereUniqueInput
}

/**
 * EquipmentHauled updateMany
 */
export type EquipmentHauledUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update EquipmentHauleds.
   */
  data: Prisma.XOR<Prisma.EquipmentHauledUpdateManyMutationInput, Prisma.EquipmentHauledUncheckedUpdateManyInput>
  /**
   * Filter which EquipmentHauleds to update
   */
  where?: Prisma.EquipmentHauledWhereInput
  /**
   * Limit how many EquipmentHauleds to update.
   */
  limit?: number
}

/**
 * EquipmentHauled updateManyAndReturn
 */
export type EquipmentHauledUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * The data used to update EquipmentHauleds.
   */
  data: Prisma.XOR<Prisma.EquipmentHauledUpdateManyMutationInput, Prisma.EquipmentHauledUncheckedUpdateManyInput>
  /**
   * Filter which EquipmentHauleds to update
   */
  where?: Prisma.EquipmentHauledWhereInput
  /**
   * Limit how many EquipmentHauleds to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * EquipmentHauled upsert
 */
export type EquipmentHauledUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * The filter to search for the EquipmentHauled to update in case it exists.
   */
  where: Prisma.EquipmentHauledWhereUniqueInput
  /**
   * In case the EquipmentHauled found by the `where` argument doesn't exist, create a new EquipmentHauled with this data.
   */
  create: Prisma.XOR<Prisma.EquipmentHauledCreateInput, Prisma.EquipmentHauledUncheckedCreateInput>
  /**
   * In case the EquipmentHauled was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EquipmentHauledUpdateInput, Prisma.EquipmentHauledUncheckedUpdateInput>
}

/**
 * EquipmentHauled delete
 */
export type EquipmentHauledDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  /**
   * Filter which EquipmentHauled to delete.
   */
  where: Prisma.EquipmentHauledWhereUniqueInput
}

/**
 * EquipmentHauled deleteMany
 */
export type EquipmentHauledDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EquipmentHauleds to delete
   */
  where?: Prisma.EquipmentHauledWhereInput
  /**
   * Limit how many EquipmentHauleds to delete.
   */
  limit?: number
}

/**
 * EquipmentHauled.Equipment
 */
export type EquipmentHauled$EquipmentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  where?: Prisma.EquipmentWhereInput
}

/**
 * EquipmentHauled without action
 */
export type EquipmentHauledDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
}
