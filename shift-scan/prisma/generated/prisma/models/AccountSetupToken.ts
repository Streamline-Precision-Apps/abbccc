
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `AccountSetupToken` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model AccountSetupToken
 * 
 */
export type AccountSetupTokenModel = runtime.Types.Result.DefaultSelection<Prisma.$AccountSetupTokenPayload>

export type AggregateAccountSetupToken = {
  _count: AccountSetupTokenCountAggregateOutputType | null
  _min: AccountSetupTokenMinAggregateOutputType | null
  _max: AccountSetupTokenMaxAggregateOutputType | null
}

export type AccountSetupTokenMinAggregateOutputType = {
  id: string | null
  code: string | null
  userId: string | null
  expiresAt: Date | null
  used: boolean | null
}

export type AccountSetupTokenMaxAggregateOutputType = {
  id: string | null
  code: string | null
  userId: string | null
  expiresAt: Date | null
  used: boolean | null
}

export type AccountSetupTokenCountAggregateOutputType = {
  id: number
  code: number
  userId: number
  expiresAt: number
  used: number
  _all: number
}


export type AccountSetupTokenMinAggregateInputType = {
  id?: true
  code?: true
  userId?: true
  expiresAt?: true
  used?: true
}

export type AccountSetupTokenMaxAggregateInputType = {
  id?: true
  code?: true
  userId?: true
  expiresAt?: true
  used?: true
}

export type AccountSetupTokenCountAggregateInputType = {
  id?: true
  code?: true
  userId?: true
  expiresAt?: true
  used?: true
  _all?: true
}

export type AccountSetupTokenAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AccountSetupToken to aggregate.
   */
  where?: Prisma.AccountSetupTokenWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountSetupTokens to fetch.
   */
  orderBy?: Prisma.AccountSetupTokenOrderByWithRelationInput | Prisma.AccountSetupTokenOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AccountSetupTokenWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountSetupTokens from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountSetupTokens.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned AccountSetupTokens
  **/
  _count?: true | AccountSetupTokenCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AccountSetupTokenMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AccountSetupTokenMaxAggregateInputType
}

export type GetAccountSetupTokenAggregateType<T extends AccountSetupTokenAggregateArgs> = {
      [P in keyof T & keyof AggregateAccountSetupToken]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAccountSetupToken[P]>
    : Prisma.GetScalarType<T[P], AggregateAccountSetupToken[P]>
}




export type AccountSetupTokenGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AccountSetupTokenWhereInput
  orderBy?: Prisma.AccountSetupTokenOrderByWithAggregationInput | Prisma.AccountSetupTokenOrderByWithAggregationInput[]
  by: Prisma.AccountSetupTokenScalarFieldEnum[] | Prisma.AccountSetupTokenScalarFieldEnum
  having?: Prisma.AccountSetupTokenScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AccountSetupTokenCountAggregateInputType | true
  _min?: AccountSetupTokenMinAggregateInputType
  _max?: AccountSetupTokenMaxAggregateInputType
}

export type AccountSetupTokenGroupByOutputType = {
  id: string
  code: string
  userId: string
  expiresAt: Date
  used: boolean
  _count: AccountSetupTokenCountAggregateOutputType | null
  _min: AccountSetupTokenMinAggregateOutputType | null
  _max: AccountSetupTokenMaxAggregateOutputType | null
}

type GetAccountSetupTokenGroupByPayload<T extends AccountSetupTokenGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AccountSetupTokenGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AccountSetupTokenGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AccountSetupTokenGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AccountSetupTokenGroupByOutputType[P]>
      }
    >
  >



export type AccountSetupTokenWhereInput = {
  AND?: Prisma.AccountSetupTokenWhereInput | Prisma.AccountSetupTokenWhereInput[]
  OR?: Prisma.AccountSetupTokenWhereInput[]
  NOT?: Prisma.AccountSetupTokenWhereInput | Prisma.AccountSetupTokenWhereInput[]
  id?: Prisma.StringFilter<"AccountSetupToken"> | string
  code?: Prisma.StringFilter<"AccountSetupToken"> | string
  userId?: Prisma.StringFilter<"AccountSetupToken"> | string
  expiresAt?: Prisma.DateTimeFilter<"AccountSetupToken"> | Date | string
  used?: Prisma.BoolFilter<"AccountSetupToken"> | boolean
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type AccountSetupTokenOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  code?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  used?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type AccountSetupTokenWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  userId?: string
  AND?: Prisma.AccountSetupTokenWhereInput | Prisma.AccountSetupTokenWhereInput[]
  OR?: Prisma.AccountSetupTokenWhereInput[]
  NOT?: Prisma.AccountSetupTokenWhereInput | Prisma.AccountSetupTokenWhereInput[]
  code?: Prisma.StringFilter<"AccountSetupToken"> | string
  expiresAt?: Prisma.DateTimeFilter<"AccountSetupToken"> | Date | string
  used?: Prisma.BoolFilter<"AccountSetupToken"> | boolean
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id" | "userId">

export type AccountSetupTokenOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  code?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  used?: Prisma.SortOrder
  _count?: Prisma.AccountSetupTokenCountOrderByAggregateInput
  _max?: Prisma.AccountSetupTokenMaxOrderByAggregateInput
  _min?: Prisma.AccountSetupTokenMinOrderByAggregateInput
}

export type AccountSetupTokenScalarWhereWithAggregatesInput = {
  AND?: Prisma.AccountSetupTokenScalarWhereWithAggregatesInput | Prisma.AccountSetupTokenScalarWhereWithAggregatesInput[]
  OR?: Prisma.AccountSetupTokenScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AccountSetupTokenScalarWhereWithAggregatesInput | Prisma.AccountSetupTokenScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"AccountSetupToken"> | string
  code?: Prisma.StringWithAggregatesFilter<"AccountSetupToken"> | string
  userId?: Prisma.StringWithAggregatesFilter<"AccountSetupToken"> | string
  expiresAt?: Prisma.DateTimeWithAggregatesFilter<"AccountSetupToken"> | Date | string
  used?: Prisma.BoolWithAggregatesFilter<"AccountSetupToken"> | boolean
}

export type AccountSetupTokenCreateInput = {
  id?: string
  code: string
  expiresAt: Date | string
  used?: boolean
  user: Prisma.UserCreateNestedOneWithoutAccountSetupTokenInput
}

export type AccountSetupTokenUncheckedCreateInput = {
  id?: string
  code: string
  userId: string
  expiresAt: Date | string
  used?: boolean
}

export type AccountSetupTokenUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  code?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  used?: Prisma.BoolFieldUpdateOperationsInput | boolean
  user?: Prisma.UserUpdateOneRequiredWithoutAccountSetupTokenNestedInput
}

export type AccountSetupTokenUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  code?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  used?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type AccountSetupTokenCreateManyInput = {
  id?: string
  code: string
  userId: string
  expiresAt: Date | string
  used?: boolean
}

export type AccountSetupTokenUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  code?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  used?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type AccountSetupTokenUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  code?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  used?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type AccountSetupTokenNullableScalarRelationFilter = {
  is?: Prisma.AccountSetupTokenWhereInput | null
  isNot?: Prisma.AccountSetupTokenWhereInput | null
}

export type AccountSetupTokenCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  code?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  used?: Prisma.SortOrder
}

export type AccountSetupTokenMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  code?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  used?: Prisma.SortOrder
}

export type AccountSetupTokenMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  code?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  used?: Prisma.SortOrder
}

export type AccountSetupTokenCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<Prisma.AccountSetupTokenCreateWithoutUserInput, Prisma.AccountSetupTokenUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.AccountSetupTokenCreateOrConnectWithoutUserInput
  connect?: Prisma.AccountSetupTokenWhereUniqueInput
}

export type AccountSetupTokenUncheckedCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<Prisma.AccountSetupTokenCreateWithoutUserInput, Prisma.AccountSetupTokenUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.AccountSetupTokenCreateOrConnectWithoutUserInput
  connect?: Prisma.AccountSetupTokenWhereUniqueInput
}

export type AccountSetupTokenUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.AccountSetupTokenCreateWithoutUserInput, Prisma.AccountSetupTokenUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.AccountSetupTokenCreateOrConnectWithoutUserInput
  upsert?: Prisma.AccountSetupTokenUpsertWithoutUserInput
  disconnect?: Prisma.AccountSetupTokenWhereInput | boolean
  delete?: Prisma.AccountSetupTokenWhereInput | boolean
  connect?: Prisma.AccountSetupTokenWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.AccountSetupTokenUpdateToOneWithWhereWithoutUserInput, Prisma.AccountSetupTokenUpdateWithoutUserInput>, Prisma.AccountSetupTokenUncheckedUpdateWithoutUserInput>
}

export type AccountSetupTokenUncheckedUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.AccountSetupTokenCreateWithoutUserInput, Prisma.AccountSetupTokenUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.AccountSetupTokenCreateOrConnectWithoutUserInput
  upsert?: Prisma.AccountSetupTokenUpsertWithoutUserInput
  disconnect?: Prisma.AccountSetupTokenWhereInput | boolean
  delete?: Prisma.AccountSetupTokenWhereInput | boolean
  connect?: Prisma.AccountSetupTokenWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.AccountSetupTokenUpdateToOneWithWhereWithoutUserInput, Prisma.AccountSetupTokenUpdateWithoutUserInput>, Prisma.AccountSetupTokenUncheckedUpdateWithoutUserInput>
}

export type AccountSetupTokenCreateWithoutUserInput = {
  id?: string
  code: string
  expiresAt: Date | string
  used?: boolean
}

export type AccountSetupTokenUncheckedCreateWithoutUserInput = {
  id?: string
  code: string
  expiresAt: Date | string
  used?: boolean
}

export type AccountSetupTokenCreateOrConnectWithoutUserInput = {
  where: Prisma.AccountSetupTokenWhereUniqueInput
  create: Prisma.XOR<Prisma.AccountSetupTokenCreateWithoutUserInput, Prisma.AccountSetupTokenUncheckedCreateWithoutUserInput>
}

export type AccountSetupTokenUpsertWithoutUserInput = {
  update: Prisma.XOR<Prisma.AccountSetupTokenUpdateWithoutUserInput, Prisma.AccountSetupTokenUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.AccountSetupTokenCreateWithoutUserInput, Prisma.AccountSetupTokenUncheckedCreateWithoutUserInput>
  where?: Prisma.AccountSetupTokenWhereInput
}

export type AccountSetupTokenUpdateToOneWithWhereWithoutUserInput = {
  where?: Prisma.AccountSetupTokenWhereInput
  data: Prisma.XOR<Prisma.AccountSetupTokenUpdateWithoutUserInput, Prisma.AccountSetupTokenUncheckedUpdateWithoutUserInput>
}

export type AccountSetupTokenUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  code?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  used?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type AccountSetupTokenUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  code?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  used?: Prisma.BoolFieldUpdateOperationsInput | boolean
}



export type AccountSetupTokenSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  code?: boolean
  userId?: boolean
  expiresAt?: boolean
  used?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["accountSetupToken"]>

export type AccountSetupTokenSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  code?: boolean
  userId?: boolean
  expiresAt?: boolean
  used?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["accountSetupToken"]>

export type AccountSetupTokenSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  code?: boolean
  userId?: boolean
  expiresAt?: boolean
  used?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["accountSetupToken"]>

export type AccountSetupTokenSelectScalar = {
  id?: boolean
  code?: boolean
  userId?: boolean
  expiresAt?: boolean
  used?: boolean
}

export type AccountSetupTokenOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "code" | "userId" | "expiresAt" | "used", ExtArgs["result"]["accountSetupToken"]>
export type AccountSetupTokenInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type AccountSetupTokenIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type AccountSetupTokenIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $AccountSetupTokenPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "AccountSetupToken"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    code: string
    userId: string
    expiresAt: Date
    used: boolean
  }, ExtArgs["result"]["accountSetupToken"]>
  composites: {}
}

export type AccountSetupTokenGetPayload<S extends boolean | null | undefined | AccountSetupTokenDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload, S>

export type AccountSetupTokenCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AccountSetupTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AccountSetupTokenCountAggregateInputType | true
  }

export interface AccountSetupTokenDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AccountSetupToken'], meta: { name: 'AccountSetupToken' } }
  /**
   * Find zero or one AccountSetupToken that matches the filter.
   * @param {AccountSetupTokenFindUniqueArgs} args - Arguments to find a AccountSetupToken
   * @example
   * // Get one AccountSetupToken
   * const accountSetupToken = await prisma.accountSetupToken.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AccountSetupTokenFindUniqueArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one AccountSetupToken that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AccountSetupTokenFindUniqueOrThrowArgs} args - Arguments to find a AccountSetupToken
   * @example
   * // Get one AccountSetupToken
   * const accountSetupToken = await prisma.accountSetupToken.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AccountSetupTokenFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AccountSetupToken that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountSetupTokenFindFirstArgs} args - Arguments to find a AccountSetupToken
   * @example
   * // Get one AccountSetupToken
   * const accountSetupToken = await prisma.accountSetupToken.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AccountSetupTokenFindFirstArgs>(args?: Prisma.SelectSubset<T, AccountSetupTokenFindFirstArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AccountSetupToken that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountSetupTokenFindFirstOrThrowArgs} args - Arguments to find a AccountSetupToken
   * @example
   * // Get one AccountSetupToken
   * const accountSetupToken = await prisma.accountSetupToken.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AccountSetupTokenFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AccountSetupTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more AccountSetupTokens that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountSetupTokenFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AccountSetupTokens
   * const accountSetupTokens = await prisma.accountSetupToken.findMany()
   * 
   * // Get first 10 AccountSetupTokens
   * const accountSetupTokens = await prisma.accountSetupToken.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const accountSetupTokenWithIdOnly = await prisma.accountSetupToken.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AccountSetupTokenFindManyArgs>(args?: Prisma.SelectSubset<T, AccountSetupTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a AccountSetupToken.
   * @param {AccountSetupTokenCreateArgs} args - Arguments to create a AccountSetupToken.
   * @example
   * // Create one AccountSetupToken
   * const AccountSetupToken = await prisma.accountSetupToken.create({
   *   data: {
   *     // ... data to create a AccountSetupToken
   *   }
   * })
   * 
   */
  create<T extends AccountSetupTokenCreateArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenCreateArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many AccountSetupTokens.
   * @param {AccountSetupTokenCreateManyArgs} args - Arguments to create many AccountSetupTokens.
   * @example
   * // Create many AccountSetupTokens
   * const accountSetupToken = await prisma.accountSetupToken.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AccountSetupTokenCreateManyArgs>(args?: Prisma.SelectSubset<T, AccountSetupTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many AccountSetupTokens and returns the data saved in the database.
   * @param {AccountSetupTokenCreateManyAndReturnArgs} args - Arguments to create many AccountSetupTokens.
   * @example
   * // Create many AccountSetupTokens
   * const accountSetupToken = await prisma.accountSetupToken.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many AccountSetupTokens and only return the `id`
   * const accountSetupTokenWithIdOnly = await prisma.accountSetupToken.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AccountSetupTokenCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AccountSetupTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a AccountSetupToken.
   * @param {AccountSetupTokenDeleteArgs} args - Arguments to delete one AccountSetupToken.
   * @example
   * // Delete one AccountSetupToken
   * const AccountSetupToken = await prisma.accountSetupToken.delete({
   *   where: {
   *     // ... filter to delete one AccountSetupToken
   *   }
   * })
   * 
   */
  delete<T extends AccountSetupTokenDeleteArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenDeleteArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one AccountSetupToken.
   * @param {AccountSetupTokenUpdateArgs} args - Arguments to update one AccountSetupToken.
   * @example
   * // Update one AccountSetupToken
   * const accountSetupToken = await prisma.accountSetupToken.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AccountSetupTokenUpdateArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenUpdateArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more AccountSetupTokens.
   * @param {AccountSetupTokenDeleteManyArgs} args - Arguments to filter AccountSetupTokens to delete.
   * @example
   * // Delete a few AccountSetupTokens
   * const { count } = await prisma.accountSetupToken.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AccountSetupTokenDeleteManyArgs>(args?: Prisma.SelectSubset<T, AccountSetupTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AccountSetupTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountSetupTokenUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AccountSetupTokens
   * const accountSetupToken = await prisma.accountSetupToken.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AccountSetupTokenUpdateManyArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AccountSetupTokens and returns the data updated in the database.
   * @param {AccountSetupTokenUpdateManyAndReturnArgs} args - Arguments to update many AccountSetupTokens.
   * @example
   * // Update many AccountSetupTokens
   * const accountSetupToken = await prisma.accountSetupToken.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more AccountSetupTokens and only return the `id`
   * const accountSetupTokenWithIdOnly = await prisma.accountSetupToken.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AccountSetupTokenUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one AccountSetupToken.
   * @param {AccountSetupTokenUpsertArgs} args - Arguments to update or create a AccountSetupToken.
   * @example
   * // Update or create a AccountSetupToken
   * const accountSetupToken = await prisma.accountSetupToken.upsert({
   *   create: {
   *     // ... data to create a AccountSetupToken
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AccountSetupToken we want to update
   *   }
   * })
   */
  upsert<T extends AccountSetupTokenUpsertArgs>(args: Prisma.SelectSubset<T, AccountSetupTokenUpsertArgs<ExtArgs>>): Prisma.Prisma__AccountSetupTokenClient<runtime.Types.Result.GetResult<Prisma.$AccountSetupTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of AccountSetupTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountSetupTokenCountArgs} args - Arguments to filter AccountSetupTokens to count.
   * @example
   * // Count the number of AccountSetupTokens
   * const count = await prisma.accountSetupToken.count({
   *   where: {
   *     // ... the filter for the AccountSetupTokens we want to count
   *   }
   * })
  **/
  count<T extends AccountSetupTokenCountArgs>(
    args?: Prisma.Subset<T, AccountSetupTokenCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AccountSetupTokenCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a AccountSetupToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountSetupTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AccountSetupTokenAggregateArgs>(args: Prisma.Subset<T, AccountSetupTokenAggregateArgs>): Prisma.PrismaPromise<GetAccountSetupTokenAggregateType<T>>

  /**
   * Group by AccountSetupToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountSetupTokenGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AccountSetupTokenGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AccountSetupTokenGroupByArgs['orderBy'] }
      : { orderBy?: AccountSetupTokenGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AccountSetupTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountSetupTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the AccountSetupToken model
 */
readonly fields: AccountSetupTokenFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AccountSetupToken.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AccountSetupTokenClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the AccountSetupToken model
 */
export interface AccountSetupTokenFieldRefs {
  readonly id: Prisma.FieldRef<"AccountSetupToken", 'String'>
  readonly code: Prisma.FieldRef<"AccountSetupToken", 'String'>
  readonly userId: Prisma.FieldRef<"AccountSetupToken", 'String'>
  readonly expiresAt: Prisma.FieldRef<"AccountSetupToken", 'DateTime'>
  readonly used: Prisma.FieldRef<"AccountSetupToken", 'Boolean'>
}
    

// Custom InputTypes
/**
 * AccountSetupToken findUnique
 */
export type AccountSetupTokenFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * Filter, which AccountSetupToken to fetch.
   */
  where: Prisma.AccountSetupTokenWhereUniqueInput
}

/**
 * AccountSetupToken findUniqueOrThrow
 */
export type AccountSetupTokenFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * Filter, which AccountSetupToken to fetch.
   */
  where: Prisma.AccountSetupTokenWhereUniqueInput
}

/**
 * AccountSetupToken findFirst
 */
export type AccountSetupTokenFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * Filter, which AccountSetupToken to fetch.
   */
  where?: Prisma.AccountSetupTokenWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountSetupTokens to fetch.
   */
  orderBy?: Prisma.AccountSetupTokenOrderByWithRelationInput | Prisma.AccountSetupTokenOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AccountSetupTokens.
   */
  cursor?: Prisma.AccountSetupTokenWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountSetupTokens from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountSetupTokens.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AccountSetupTokens.
   */
  distinct?: Prisma.AccountSetupTokenScalarFieldEnum | Prisma.AccountSetupTokenScalarFieldEnum[]
}

/**
 * AccountSetupToken findFirstOrThrow
 */
export type AccountSetupTokenFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * Filter, which AccountSetupToken to fetch.
   */
  where?: Prisma.AccountSetupTokenWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountSetupTokens to fetch.
   */
  orderBy?: Prisma.AccountSetupTokenOrderByWithRelationInput | Prisma.AccountSetupTokenOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AccountSetupTokens.
   */
  cursor?: Prisma.AccountSetupTokenWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountSetupTokens from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountSetupTokens.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AccountSetupTokens.
   */
  distinct?: Prisma.AccountSetupTokenScalarFieldEnum | Prisma.AccountSetupTokenScalarFieldEnum[]
}

/**
 * AccountSetupToken findMany
 */
export type AccountSetupTokenFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * Filter, which AccountSetupTokens to fetch.
   */
  where?: Prisma.AccountSetupTokenWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountSetupTokens to fetch.
   */
  orderBy?: Prisma.AccountSetupTokenOrderByWithRelationInput | Prisma.AccountSetupTokenOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing AccountSetupTokens.
   */
  cursor?: Prisma.AccountSetupTokenWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountSetupTokens from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountSetupTokens.
   */
  skip?: number
  distinct?: Prisma.AccountSetupTokenScalarFieldEnum | Prisma.AccountSetupTokenScalarFieldEnum[]
}

/**
 * AccountSetupToken create
 */
export type AccountSetupTokenCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * The data needed to create a AccountSetupToken.
   */
  data: Prisma.XOR<Prisma.AccountSetupTokenCreateInput, Prisma.AccountSetupTokenUncheckedCreateInput>
}

/**
 * AccountSetupToken createMany
 */
export type AccountSetupTokenCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many AccountSetupTokens.
   */
  data: Prisma.AccountSetupTokenCreateManyInput | Prisma.AccountSetupTokenCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * AccountSetupToken createManyAndReturn
 */
export type AccountSetupTokenCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * The data used to create many AccountSetupTokens.
   */
  data: Prisma.AccountSetupTokenCreateManyInput | Prisma.AccountSetupTokenCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * AccountSetupToken update
 */
export type AccountSetupTokenUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * The data needed to update a AccountSetupToken.
   */
  data: Prisma.XOR<Prisma.AccountSetupTokenUpdateInput, Prisma.AccountSetupTokenUncheckedUpdateInput>
  /**
   * Choose, which AccountSetupToken to update.
   */
  where: Prisma.AccountSetupTokenWhereUniqueInput
}

/**
 * AccountSetupToken updateMany
 */
export type AccountSetupTokenUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update AccountSetupTokens.
   */
  data: Prisma.XOR<Prisma.AccountSetupTokenUpdateManyMutationInput, Prisma.AccountSetupTokenUncheckedUpdateManyInput>
  /**
   * Filter which AccountSetupTokens to update
   */
  where?: Prisma.AccountSetupTokenWhereInput
  /**
   * Limit how many AccountSetupTokens to update.
   */
  limit?: number
}

/**
 * AccountSetupToken updateManyAndReturn
 */
export type AccountSetupTokenUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * The data used to update AccountSetupTokens.
   */
  data: Prisma.XOR<Prisma.AccountSetupTokenUpdateManyMutationInput, Prisma.AccountSetupTokenUncheckedUpdateManyInput>
  /**
   * Filter which AccountSetupTokens to update
   */
  where?: Prisma.AccountSetupTokenWhereInput
  /**
   * Limit how many AccountSetupTokens to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * AccountSetupToken upsert
 */
export type AccountSetupTokenUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * The filter to search for the AccountSetupToken to update in case it exists.
   */
  where: Prisma.AccountSetupTokenWhereUniqueInput
  /**
   * In case the AccountSetupToken found by the `where` argument doesn't exist, create a new AccountSetupToken with this data.
   */
  create: Prisma.XOR<Prisma.AccountSetupTokenCreateInput, Prisma.AccountSetupTokenUncheckedCreateInput>
  /**
   * In case the AccountSetupToken was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AccountSetupTokenUpdateInput, Prisma.AccountSetupTokenUncheckedUpdateInput>
}

/**
 * AccountSetupToken delete
 */
export type AccountSetupTokenDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
  /**
   * Filter which AccountSetupToken to delete.
   */
  where: Prisma.AccountSetupTokenWhereUniqueInput
}

/**
 * AccountSetupToken deleteMany
 */
export type AccountSetupTokenDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AccountSetupTokens to delete
   */
  where?: Prisma.AccountSetupTokenWhereInput
  /**
   * Limit how many AccountSetupTokens to delete.
   */
  limit?: number
}

/**
 * AccountSetupToken without action
 */
export type AccountSetupTokenDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountSetupToken
   */
  select?: Prisma.AccountSetupTokenSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountSetupToken
   */
  omit?: Prisma.AccountSetupTokenOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountSetupTokenInclude<ExtArgs> | null
}
