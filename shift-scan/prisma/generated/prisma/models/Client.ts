
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Client` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Client
 * 
 */
export type ClientModel = runtime.Types.Result.DefaultSelection<Prisma.$ClientPayload>

export type AggregateClient = {
  _count: ClientCountAggregateOutputType | null
  _min: ClientMinAggregateOutputType | null
  _max: ClientMaxAggregateOutputType | null
}

export type ClientMinAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  creationReason: string | null
  approvalStatus: $Enums.ApprovalStatus | null
  contactPerson: string | null
  contactEmail: string | null
  contactPhone: string | null
  hasProject: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  companyId: string | null
  createdById: string | null
  createdVia: $Enums.CreatedVia | null
  jobsiteId: string | null
  addressId: string | null
}

export type ClientMaxAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  creationReason: string | null
  approvalStatus: $Enums.ApprovalStatus | null
  contactPerson: string | null
  contactEmail: string | null
  contactPhone: string | null
  hasProject: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  companyId: string | null
  createdById: string | null
  createdVia: $Enums.CreatedVia | null
  jobsiteId: string | null
  addressId: string | null
}

export type ClientCountAggregateOutputType = {
  id: number
  name: number
  description: number
  creationReason: number
  approvalStatus: number
  contactPerson: number
  contactEmail: number
  contactPhone: number
  hasProject: number
  createdAt: number
  updatedAt: number
  companyId: number
  createdById: number
  createdVia: number
  jobsiteId: number
  addressId: number
  _all: number
}


export type ClientMinAggregateInputType = {
  id?: true
  name?: true
  description?: true
  creationReason?: true
  approvalStatus?: true
  contactPerson?: true
  contactEmail?: true
  contactPhone?: true
  hasProject?: true
  createdAt?: true
  updatedAt?: true
  companyId?: true
  createdById?: true
  createdVia?: true
  jobsiteId?: true
  addressId?: true
}

export type ClientMaxAggregateInputType = {
  id?: true
  name?: true
  description?: true
  creationReason?: true
  approvalStatus?: true
  contactPerson?: true
  contactEmail?: true
  contactPhone?: true
  hasProject?: true
  createdAt?: true
  updatedAt?: true
  companyId?: true
  createdById?: true
  createdVia?: true
  jobsiteId?: true
  addressId?: true
}

export type ClientCountAggregateInputType = {
  id?: true
  name?: true
  description?: true
  creationReason?: true
  approvalStatus?: true
  contactPerson?: true
  contactEmail?: true
  contactPhone?: true
  hasProject?: true
  createdAt?: true
  updatedAt?: true
  companyId?: true
  createdById?: true
  createdVia?: true
  jobsiteId?: true
  addressId?: true
  _all?: true
}

export type ClientAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Client to aggregate.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Clients
  **/
  _count?: true | ClientCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ClientMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ClientMaxAggregateInputType
}

export type GetClientAggregateType<T extends ClientAggregateArgs> = {
      [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateClient[P]>
    : Prisma.GetScalarType<T[P], AggregateClient[P]>
}




export type ClientGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ClientWhereInput
  orderBy?: Prisma.ClientOrderByWithAggregationInput | Prisma.ClientOrderByWithAggregationInput[]
  by: Prisma.ClientScalarFieldEnum[] | Prisma.ClientScalarFieldEnum
  having?: Prisma.ClientScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ClientCountAggregateInputType | true
  _min?: ClientMinAggregateInputType
  _max?: ClientMaxAggregateInputType
}

export type ClientGroupByOutputType = {
  id: string
  name: string
  description: string | null
  creationReason: string | null
  approvalStatus: $Enums.ApprovalStatus
  contactPerson: string | null
  contactEmail: string | null
  contactPhone: string | null
  hasProject: boolean
  createdAt: Date
  updatedAt: Date
  companyId: string
  createdById: string | null
  createdVia: $Enums.CreatedVia
  jobsiteId: string | null
  addressId: string | null
  _count: ClientCountAggregateOutputType | null
  _min: ClientMinAggregateOutputType | null
  _max: ClientMaxAggregateOutputType | null
}

type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ClientGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ClientGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ClientGroupByOutputType[P]>
      }
    >
  >



export type ClientWhereInput = {
  AND?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  OR?: Prisma.ClientWhereInput[]
  NOT?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  id?: Prisma.StringFilter<"Client"> | string
  name?: Prisma.StringFilter<"Client"> | string
  description?: Prisma.StringNullableFilter<"Client"> | string | null
  creationReason?: Prisma.StringNullableFilter<"Client"> | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFilter<"Client"> | $Enums.ApprovalStatus
  contactPerson?: Prisma.StringNullableFilter<"Client"> | string | null
  contactEmail?: Prisma.StringNullableFilter<"Client"> | string | null
  contactPhone?: Prisma.StringNullableFilter<"Client"> | string | null
  hasProject?: Prisma.BoolFilter<"Client"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  companyId?: Prisma.StringFilter<"Client"> | string
  createdById?: Prisma.StringNullableFilter<"Client"> | string | null
  createdVia?: Prisma.EnumCreatedViaFilter<"Client"> | $Enums.CreatedVia
  jobsiteId?: Prisma.StringNullableFilter<"Client"> | string | null
  addressId?: Prisma.StringNullableFilter<"Client"> | string | null
  Address?: Prisma.XOR<Prisma.AddressNullableScalarRelationFilter, Prisma.AddressWhereInput> | null
  Company?: Prisma.XOR<Prisma.CompanyScalarRelationFilter, Prisma.CompanyWhereInput>
  createdBy?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  Jobsites?: Prisma.JobsiteListRelationFilter
}

export type ClientOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  creationReason?: Prisma.SortOrderInput | Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  contactPerson?: Prisma.SortOrderInput | Prisma.SortOrder
  contactEmail?: Prisma.SortOrderInput | Prisma.SortOrder
  contactPhone?: Prisma.SortOrderInput | Prisma.SortOrder
  hasProject?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  companyId?: Prisma.SortOrder
  createdById?: Prisma.SortOrderInput | Prisma.SortOrder
  createdVia?: Prisma.SortOrder
  jobsiteId?: Prisma.SortOrderInput | Prisma.SortOrder
  addressId?: Prisma.SortOrderInput | Prisma.SortOrder
  Address?: Prisma.AddressOrderByWithRelationInput
  Company?: Prisma.CompanyOrderByWithRelationInput
  createdBy?: Prisma.UserOrderByWithRelationInput
  Jobsites?: Prisma.JobsiteOrderByRelationAggregateInput
}

export type ClientWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  name?: string
  AND?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  OR?: Prisma.ClientWhereInput[]
  NOT?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  description?: Prisma.StringNullableFilter<"Client"> | string | null
  creationReason?: Prisma.StringNullableFilter<"Client"> | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFilter<"Client"> | $Enums.ApprovalStatus
  contactPerson?: Prisma.StringNullableFilter<"Client"> | string | null
  contactEmail?: Prisma.StringNullableFilter<"Client"> | string | null
  contactPhone?: Prisma.StringNullableFilter<"Client"> | string | null
  hasProject?: Prisma.BoolFilter<"Client"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  companyId?: Prisma.StringFilter<"Client"> | string
  createdById?: Prisma.StringNullableFilter<"Client"> | string | null
  createdVia?: Prisma.EnumCreatedViaFilter<"Client"> | $Enums.CreatedVia
  jobsiteId?: Prisma.StringNullableFilter<"Client"> | string | null
  addressId?: Prisma.StringNullableFilter<"Client"> | string | null
  Address?: Prisma.XOR<Prisma.AddressNullableScalarRelationFilter, Prisma.AddressWhereInput> | null
  Company?: Prisma.XOR<Prisma.CompanyScalarRelationFilter, Prisma.CompanyWhereInput>
  createdBy?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  Jobsites?: Prisma.JobsiteListRelationFilter
}, "id" | "name">

export type ClientOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  creationReason?: Prisma.SortOrderInput | Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  contactPerson?: Prisma.SortOrderInput | Prisma.SortOrder
  contactEmail?: Prisma.SortOrderInput | Prisma.SortOrder
  contactPhone?: Prisma.SortOrderInput | Prisma.SortOrder
  hasProject?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  companyId?: Prisma.SortOrder
  createdById?: Prisma.SortOrderInput | Prisma.SortOrder
  createdVia?: Prisma.SortOrder
  jobsiteId?: Prisma.SortOrderInput | Prisma.SortOrder
  addressId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ClientCountOrderByAggregateInput
  _max?: Prisma.ClientMaxOrderByAggregateInput
  _min?: Prisma.ClientMinOrderByAggregateInput
}

export type ClientScalarWhereWithAggregatesInput = {
  AND?: Prisma.ClientScalarWhereWithAggregatesInput | Prisma.ClientScalarWhereWithAggregatesInput[]
  OR?: Prisma.ClientScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ClientScalarWhereWithAggregatesInput | Prisma.ClientScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Client"> | string
  name?: Prisma.StringWithAggregatesFilter<"Client"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  creationReason?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  approvalStatus?: Prisma.EnumApprovalStatusWithAggregatesFilter<"Client"> | $Enums.ApprovalStatus
  contactPerson?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  contactEmail?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  contactPhone?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  hasProject?: Prisma.BoolWithAggregatesFilter<"Client"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Client"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Client"> | Date | string
  companyId?: Prisma.StringWithAggregatesFilter<"Client"> | string
  createdById?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  createdVia?: Prisma.EnumCreatedViaWithAggregatesFilter<"Client"> | $Enums.CreatedVia
  jobsiteId?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  addressId?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
}

export type ClientCreateInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  Address?: Prisma.AddressCreateNestedOneWithoutClientInput
  Company: Prisma.CompanyCreateNestedOneWithoutClientsInput
  createdBy?: Prisma.UserCreateNestedOneWithoutClientInput
  Jobsites?: Prisma.JobsiteCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  companyId: string
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  addressId?: string | null
  Jobsites?: Prisma.JobsiteUncheckedCreateNestedManyWithoutClientInput
}

export type ClientUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Address?: Prisma.AddressUpdateOneWithoutClientNestedInput
  Company?: Prisma.CompanyUpdateOneRequiredWithoutClientsNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutClientNestedInput
  Jobsites?: Prisma.JobsiteUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  companyId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Jobsites?: Prisma.JobsiteUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateManyInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  companyId: string
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  addressId?: string | null
}

export type ClientUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ClientUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  companyId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ClientCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  contactPerson?: Prisma.SortOrder
  contactEmail?: Prisma.SortOrder
  contactPhone?: Prisma.SortOrder
  hasProject?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  companyId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdVia?: Prisma.SortOrder
  jobsiteId?: Prisma.SortOrder
  addressId?: Prisma.SortOrder
}

export type ClientMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  contactPerson?: Prisma.SortOrder
  contactEmail?: Prisma.SortOrder
  contactPhone?: Prisma.SortOrder
  hasProject?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  companyId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdVia?: Prisma.SortOrder
  jobsiteId?: Prisma.SortOrder
  addressId?: Prisma.SortOrder
}

export type ClientMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  contactPerson?: Prisma.SortOrder
  contactEmail?: Prisma.SortOrder
  contactPhone?: Prisma.SortOrder
  hasProject?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  companyId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdVia?: Prisma.SortOrder
  jobsiteId?: Prisma.SortOrder
  addressId?: Prisma.SortOrder
}

export type ClientListRelationFilter = {
  every?: Prisma.ClientWhereInput
  some?: Prisma.ClientWhereInput
  none?: Prisma.ClientWhereInput
}

export type ClientOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ClientNullableScalarRelationFilter = {
  is?: Prisma.ClientWhereInput | null
  isNot?: Prisma.ClientWhereInput | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type EnumApprovalStatusFieldUpdateOperationsInput = {
  set?: $Enums.ApprovalStatus
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type EnumCreatedViaFieldUpdateOperationsInput = {
  set?: $Enums.CreatedVia
}

export type ClientCreateNestedManyWithoutCompanyInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCompanyInput, Prisma.ClientUncheckedCreateWithoutCompanyInput> | Prisma.ClientCreateWithoutCompanyInput[] | Prisma.ClientUncheckedCreateWithoutCompanyInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCompanyInput | Prisma.ClientCreateOrConnectWithoutCompanyInput[]
  createMany?: Prisma.ClientCreateManyCompanyInputEnvelope
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
}

export type ClientUncheckedCreateNestedManyWithoutCompanyInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCompanyInput, Prisma.ClientUncheckedCreateWithoutCompanyInput> | Prisma.ClientCreateWithoutCompanyInput[] | Prisma.ClientUncheckedCreateWithoutCompanyInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCompanyInput | Prisma.ClientCreateOrConnectWithoutCompanyInput[]
  createMany?: Prisma.ClientCreateManyCompanyInputEnvelope
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
}

export type ClientUpdateManyWithoutCompanyNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCompanyInput, Prisma.ClientUncheckedCreateWithoutCompanyInput> | Prisma.ClientCreateWithoutCompanyInput[] | Prisma.ClientUncheckedCreateWithoutCompanyInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCompanyInput | Prisma.ClientCreateOrConnectWithoutCompanyInput[]
  upsert?: Prisma.ClientUpsertWithWhereUniqueWithoutCompanyInput | Prisma.ClientUpsertWithWhereUniqueWithoutCompanyInput[]
  createMany?: Prisma.ClientCreateManyCompanyInputEnvelope
  set?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  disconnect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  delete?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  update?: Prisma.ClientUpdateWithWhereUniqueWithoutCompanyInput | Prisma.ClientUpdateWithWhereUniqueWithoutCompanyInput[]
  updateMany?: Prisma.ClientUpdateManyWithWhereWithoutCompanyInput | Prisma.ClientUpdateManyWithWhereWithoutCompanyInput[]
  deleteMany?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
}

export type ClientUncheckedUpdateManyWithoutCompanyNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCompanyInput, Prisma.ClientUncheckedCreateWithoutCompanyInput> | Prisma.ClientCreateWithoutCompanyInput[] | Prisma.ClientUncheckedCreateWithoutCompanyInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCompanyInput | Prisma.ClientCreateOrConnectWithoutCompanyInput[]
  upsert?: Prisma.ClientUpsertWithWhereUniqueWithoutCompanyInput | Prisma.ClientUpsertWithWhereUniqueWithoutCompanyInput[]
  createMany?: Prisma.ClientCreateManyCompanyInputEnvelope
  set?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  disconnect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  delete?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  update?: Prisma.ClientUpdateWithWhereUniqueWithoutCompanyInput | Prisma.ClientUpdateWithWhereUniqueWithoutCompanyInput[]
  updateMany?: Prisma.ClientUpdateManyWithWhereWithoutCompanyInput | Prisma.ClientUpdateManyWithWhereWithoutCompanyInput[]
  deleteMany?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
}

export type ClientCreateNestedOneWithoutJobsitesInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutJobsitesInput, Prisma.ClientUncheckedCreateWithoutJobsitesInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutJobsitesInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneWithoutJobsitesNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutJobsitesInput, Prisma.ClientUncheckedCreateWithoutJobsitesInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutJobsitesInput
  upsert?: Prisma.ClientUpsertWithoutJobsitesInput
  disconnect?: Prisma.ClientWhereInput | boolean
  delete?: Prisma.ClientWhereInput | boolean
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutJobsitesInput, Prisma.ClientUpdateWithoutJobsitesInput>, Prisma.ClientUncheckedUpdateWithoutJobsitesInput>
}

export type ClientCreateNestedManyWithoutCreatedByInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCreatedByInput, Prisma.ClientUncheckedCreateWithoutCreatedByInput> | Prisma.ClientCreateWithoutCreatedByInput[] | Prisma.ClientUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCreatedByInput | Prisma.ClientCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.ClientCreateManyCreatedByInputEnvelope
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
}

export type ClientUncheckedCreateNestedManyWithoutCreatedByInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCreatedByInput, Prisma.ClientUncheckedCreateWithoutCreatedByInput> | Prisma.ClientCreateWithoutCreatedByInput[] | Prisma.ClientUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCreatedByInput | Prisma.ClientCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.ClientCreateManyCreatedByInputEnvelope
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
}

export type ClientUpdateManyWithoutCreatedByNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCreatedByInput, Prisma.ClientUncheckedCreateWithoutCreatedByInput> | Prisma.ClientCreateWithoutCreatedByInput[] | Prisma.ClientUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCreatedByInput | Prisma.ClientCreateOrConnectWithoutCreatedByInput[]
  upsert?: Prisma.ClientUpsertWithWhereUniqueWithoutCreatedByInput | Prisma.ClientUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.ClientCreateManyCreatedByInputEnvelope
  set?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  disconnect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  delete?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  update?: Prisma.ClientUpdateWithWhereUniqueWithoutCreatedByInput | Prisma.ClientUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?: Prisma.ClientUpdateManyWithWhereWithoutCreatedByInput | Prisma.ClientUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
}

export type ClientUncheckedUpdateManyWithoutCreatedByNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutCreatedByInput, Prisma.ClientUncheckedCreateWithoutCreatedByInput> | Prisma.ClientCreateWithoutCreatedByInput[] | Prisma.ClientUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutCreatedByInput | Prisma.ClientCreateOrConnectWithoutCreatedByInput[]
  upsert?: Prisma.ClientUpsertWithWhereUniqueWithoutCreatedByInput | Prisma.ClientUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.ClientCreateManyCreatedByInputEnvelope
  set?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  disconnect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  delete?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  update?: Prisma.ClientUpdateWithWhereUniqueWithoutCreatedByInput | Prisma.ClientUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?: Prisma.ClientUpdateManyWithWhereWithoutCreatedByInput | Prisma.ClientUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
}

export type ClientCreateNestedManyWithoutAddressInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutAddressInput, Prisma.ClientUncheckedCreateWithoutAddressInput> | Prisma.ClientCreateWithoutAddressInput[] | Prisma.ClientUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutAddressInput | Prisma.ClientCreateOrConnectWithoutAddressInput[]
  createMany?: Prisma.ClientCreateManyAddressInputEnvelope
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
}

export type ClientUncheckedCreateNestedManyWithoutAddressInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutAddressInput, Prisma.ClientUncheckedCreateWithoutAddressInput> | Prisma.ClientCreateWithoutAddressInput[] | Prisma.ClientUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutAddressInput | Prisma.ClientCreateOrConnectWithoutAddressInput[]
  createMany?: Prisma.ClientCreateManyAddressInputEnvelope
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
}

export type ClientUpdateManyWithoutAddressNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutAddressInput, Prisma.ClientUncheckedCreateWithoutAddressInput> | Prisma.ClientCreateWithoutAddressInput[] | Prisma.ClientUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutAddressInput | Prisma.ClientCreateOrConnectWithoutAddressInput[]
  upsert?: Prisma.ClientUpsertWithWhereUniqueWithoutAddressInput | Prisma.ClientUpsertWithWhereUniqueWithoutAddressInput[]
  createMany?: Prisma.ClientCreateManyAddressInputEnvelope
  set?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  disconnect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  delete?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  update?: Prisma.ClientUpdateWithWhereUniqueWithoutAddressInput | Prisma.ClientUpdateWithWhereUniqueWithoutAddressInput[]
  updateMany?: Prisma.ClientUpdateManyWithWhereWithoutAddressInput | Prisma.ClientUpdateManyWithWhereWithoutAddressInput[]
  deleteMany?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
}

export type ClientUncheckedUpdateManyWithoutAddressNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutAddressInput, Prisma.ClientUncheckedCreateWithoutAddressInput> | Prisma.ClientCreateWithoutAddressInput[] | Prisma.ClientUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutAddressInput | Prisma.ClientCreateOrConnectWithoutAddressInput[]
  upsert?: Prisma.ClientUpsertWithWhereUniqueWithoutAddressInput | Prisma.ClientUpsertWithWhereUniqueWithoutAddressInput[]
  createMany?: Prisma.ClientCreateManyAddressInputEnvelope
  set?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  disconnect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  delete?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  connect?: Prisma.ClientWhereUniqueInput | Prisma.ClientWhereUniqueInput[]
  update?: Prisma.ClientUpdateWithWhereUniqueWithoutAddressInput | Prisma.ClientUpdateWithWhereUniqueWithoutAddressInput[]
  updateMany?: Prisma.ClientUpdateManyWithWhereWithoutAddressInput | Prisma.ClientUpdateManyWithWhereWithoutAddressInput[]
  deleteMany?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
}

export type ClientCreateWithoutCompanyInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  Address?: Prisma.AddressCreateNestedOneWithoutClientInput
  createdBy?: Prisma.UserCreateNestedOneWithoutClientInput
  Jobsites?: Prisma.JobsiteCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutCompanyInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  addressId?: string | null
  Jobsites?: Prisma.JobsiteUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutCompanyInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutCompanyInput, Prisma.ClientUncheckedCreateWithoutCompanyInput>
}

export type ClientCreateManyCompanyInputEnvelope = {
  data: Prisma.ClientCreateManyCompanyInput | Prisma.ClientCreateManyCompanyInput[]
  skipDuplicates?: boolean
}

export type ClientUpsertWithWhereUniqueWithoutCompanyInput = {
  where: Prisma.ClientWhereUniqueInput
  update: Prisma.XOR<Prisma.ClientUpdateWithoutCompanyInput, Prisma.ClientUncheckedUpdateWithoutCompanyInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutCompanyInput, Prisma.ClientUncheckedCreateWithoutCompanyInput>
}

export type ClientUpdateWithWhereUniqueWithoutCompanyInput = {
  where: Prisma.ClientWhereUniqueInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutCompanyInput, Prisma.ClientUncheckedUpdateWithoutCompanyInput>
}

export type ClientUpdateManyWithWhereWithoutCompanyInput = {
  where: Prisma.ClientScalarWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateManyMutationInput, Prisma.ClientUncheckedUpdateManyWithoutCompanyInput>
}

export type ClientScalarWhereInput = {
  AND?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
  OR?: Prisma.ClientScalarWhereInput[]
  NOT?: Prisma.ClientScalarWhereInput | Prisma.ClientScalarWhereInput[]
  id?: Prisma.StringFilter<"Client"> | string
  name?: Prisma.StringFilter<"Client"> | string
  description?: Prisma.StringNullableFilter<"Client"> | string | null
  creationReason?: Prisma.StringNullableFilter<"Client"> | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFilter<"Client"> | $Enums.ApprovalStatus
  contactPerson?: Prisma.StringNullableFilter<"Client"> | string | null
  contactEmail?: Prisma.StringNullableFilter<"Client"> | string | null
  contactPhone?: Prisma.StringNullableFilter<"Client"> | string | null
  hasProject?: Prisma.BoolFilter<"Client"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  companyId?: Prisma.StringFilter<"Client"> | string
  createdById?: Prisma.StringNullableFilter<"Client"> | string | null
  createdVia?: Prisma.EnumCreatedViaFilter<"Client"> | $Enums.CreatedVia
  jobsiteId?: Prisma.StringNullableFilter<"Client"> | string | null
  addressId?: Prisma.StringNullableFilter<"Client"> | string | null
}

export type ClientCreateWithoutJobsitesInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  Address?: Prisma.AddressCreateNestedOneWithoutClientInput
  Company: Prisma.CompanyCreateNestedOneWithoutClientsInput
  createdBy?: Prisma.UserCreateNestedOneWithoutClientInput
}

export type ClientUncheckedCreateWithoutJobsitesInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  companyId: string
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  addressId?: string | null
}

export type ClientCreateOrConnectWithoutJobsitesInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutJobsitesInput, Prisma.ClientUncheckedCreateWithoutJobsitesInput>
}

export type ClientUpsertWithoutJobsitesInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutJobsitesInput, Prisma.ClientUncheckedUpdateWithoutJobsitesInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutJobsitesInput, Prisma.ClientUncheckedCreateWithoutJobsitesInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutJobsitesInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutJobsitesInput, Prisma.ClientUncheckedUpdateWithoutJobsitesInput>
}

export type ClientUpdateWithoutJobsitesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Address?: Prisma.AddressUpdateOneWithoutClientNestedInput
  Company?: Prisma.CompanyUpdateOneRequiredWithoutClientsNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutJobsitesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  companyId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ClientCreateWithoutCreatedByInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  Address?: Prisma.AddressCreateNestedOneWithoutClientInput
  Company: Prisma.CompanyCreateNestedOneWithoutClientsInput
  Jobsites?: Prisma.JobsiteCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutCreatedByInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  companyId: string
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  addressId?: string | null
  Jobsites?: Prisma.JobsiteUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutCreatedByInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutCreatedByInput, Prisma.ClientUncheckedCreateWithoutCreatedByInput>
}

export type ClientCreateManyCreatedByInputEnvelope = {
  data: Prisma.ClientCreateManyCreatedByInput | Prisma.ClientCreateManyCreatedByInput[]
  skipDuplicates?: boolean
}

export type ClientUpsertWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.ClientWhereUniqueInput
  update: Prisma.XOR<Prisma.ClientUpdateWithoutCreatedByInput, Prisma.ClientUncheckedUpdateWithoutCreatedByInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutCreatedByInput, Prisma.ClientUncheckedCreateWithoutCreatedByInput>
}

export type ClientUpdateWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.ClientWhereUniqueInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutCreatedByInput, Prisma.ClientUncheckedUpdateWithoutCreatedByInput>
}

export type ClientUpdateManyWithWhereWithoutCreatedByInput = {
  where: Prisma.ClientScalarWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateManyMutationInput, Prisma.ClientUncheckedUpdateManyWithoutCreatedByInput>
}

export type ClientCreateWithoutAddressInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  Company: Prisma.CompanyCreateNestedOneWithoutClientsInput
  createdBy?: Prisma.UserCreateNestedOneWithoutClientInput
  Jobsites?: Prisma.JobsiteCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutAddressInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  companyId: string
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  Jobsites?: Prisma.JobsiteUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutAddressInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutAddressInput, Prisma.ClientUncheckedCreateWithoutAddressInput>
}

export type ClientCreateManyAddressInputEnvelope = {
  data: Prisma.ClientCreateManyAddressInput | Prisma.ClientCreateManyAddressInput[]
  skipDuplicates?: boolean
}

export type ClientUpsertWithWhereUniqueWithoutAddressInput = {
  where: Prisma.ClientWhereUniqueInput
  update: Prisma.XOR<Prisma.ClientUpdateWithoutAddressInput, Prisma.ClientUncheckedUpdateWithoutAddressInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutAddressInput, Prisma.ClientUncheckedCreateWithoutAddressInput>
}

export type ClientUpdateWithWhereUniqueWithoutAddressInput = {
  where: Prisma.ClientWhereUniqueInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutAddressInput, Prisma.ClientUncheckedUpdateWithoutAddressInput>
}

export type ClientUpdateManyWithWhereWithoutAddressInput = {
  where: Prisma.ClientScalarWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateManyMutationInput, Prisma.ClientUncheckedUpdateManyWithoutAddressInput>
}

export type ClientCreateManyCompanyInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  addressId?: string | null
}

export type ClientUpdateWithoutCompanyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Address?: Prisma.AddressUpdateOneWithoutClientNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutClientNestedInput
  Jobsites?: Prisma.JobsiteUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutCompanyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Jobsites?: Prisma.JobsiteUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateManyWithoutCompanyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ClientCreateManyCreatedByInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  companyId: string
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
  addressId?: string | null
}

export type ClientUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Address?: Prisma.AddressUpdateOneWithoutClientNestedInput
  Company?: Prisma.CompanyUpdateOneRequiredWithoutClientsNestedInput
  Jobsites?: Prisma.JobsiteUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  companyId?: Prisma.StringFieldUpdateOperationsInput | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Jobsites?: Prisma.JobsiteUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateManyWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  companyId?: Prisma.StringFieldUpdateOperationsInput | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ClientCreateManyAddressInput = {
  id?: string
  name: string
  description?: string | null
  creationReason?: string | null
  approvalStatus?: $Enums.ApprovalStatus
  contactPerson?: string | null
  contactEmail?: string | null
  contactPhone?: string | null
  hasProject?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  companyId: string
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  jobsiteId?: string | null
}

export type ClientUpdateWithoutAddressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Company?: Prisma.CompanyUpdateOneRequiredWithoutClientsNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutClientNestedInput
  Jobsites?: Prisma.JobsiteUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutAddressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  companyId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Jobsites?: Prisma.JobsiteUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateManyWithoutAddressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  contactPerson?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  contactPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasProject?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  companyId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  jobsiteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type ClientCountOutputType
 */

export type ClientCountOutputType = {
  Jobsites: number
}

export type ClientCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Jobsites?: boolean | ClientCountOutputTypeCountJobsitesArgs
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientCountOutputType
   */
  select?: Prisma.ClientCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountJobsitesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.JobsiteWhereInput
}


export type ClientSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  approvalStatus?: boolean
  contactPerson?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  hasProject?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  companyId?: boolean
  createdById?: boolean
  createdVia?: boolean
  jobsiteId?: boolean
  addressId?: boolean
  Address?: boolean | Prisma.Client$AddressArgs<ExtArgs>
  Company?: boolean | Prisma.CompanyDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.Client$createdByArgs<ExtArgs>
  Jobsites?: boolean | Prisma.Client$JobsitesArgs<ExtArgs>
  _count?: boolean | Prisma.ClientCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["client"]>

export type ClientSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  approvalStatus?: boolean
  contactPerson?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  hasProject?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  companyId?: boolean
  createdById?: boolean
  createdVia?: boolean
  jobsiteId?: boolean
  addressId?: boolean
  Address?: boolean | Prisma.Client$AddressArgs<ExtArgs>
  Company?: boolean | Prisma.CompanyDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.Client$createdByArgs<ExtArgs>
}, ExtArgs["result"]["client"]>

export type ClientSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  approvalStatus?: boolean
  contactPerson?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  hasProject?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  companyId?: boolean
  createdById?: boolean
  createdVia?: boolean
  jobsiteId?: boolean
  addressId?: boolean
  Address?: boolean | Prisma.Client$AddressArgs<ExtArgs>
  Company?: boolean | Prisma.CompanyDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.Client$createdByArgs<ExtArgs>
}, ExtArgs["result"]["client"]>

export type ClientSelectScalar = {
  id?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  approvalStatus?: boolean
  contactPerson?: boolean
  contactEmail?: boolean
  contactPhone?: boolean
  hasProject?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  companyId?: boolean
  createdById?: boolean
  createdVia?: boolean
  jobsiteId?: boolean
  addressId?: boolean
}

export type ClientOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "description" | "creationReason" | "approvalStatus" | "contactPerson" | "contactEmail" | "contactPhone" | "hasProject" | "createdAt" | "updatedAt" | "companyId" | "createdById" | "createdVia" | "jobsiteId" | "addressId", ExtArgs["result"]["client"]>
export type ClientInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Address?: boolean | Prisma.Client$AddressArgs<ExtArgs>
  Company?: boolean | Prisma.CompanyDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.Client$createdByArgs<ExtArgs>
  Jobsites?: boolean | Prisma.Client$JobsitesArgs<ExtArgs>
  _count?: boolean | Prisma.ClientCountOutputTypeDefaultArgs<ExtArgs>
}
export type ClientIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Address?: boolean | Prisma.Client$AddressArgs<ExtArgs>
  Company?: boolean | Prisma.CompanyDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.Client$createdByArgs<ExtArgs>
}
export type ClientIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Address?: boolean | Prisma.Client$AddressArgs<ExtArgs>
  Company?: boolean | Prisma.CompanyDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.Client$createdByArgs<ExtArgs>
}

export type $ClientPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Client"
  objects: {
    Address: Prisma.$AddressPayload<ExtArgs> | null
    Company: Prisma.$CompanyPayload<ExtArgs>
    createdBy: Prisma.$UserPayload<ExtArgs> | null
    Jobsites: Prisma.$JobsitePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    description: string | null
    creationReason: string | null
    approvalStatus: $Enums.ApprovalStatus
    contactPerson: string | null
    contactEmail: string | null
    contactPhone: string | null
    hasProject: boolean
    createdAt: Date
    updatedAt: Date
    companyId: string
    createdById: string | null
    createdVia: $Enums.CreatedVia
    jobsiteId: string | null
    addressId: string | null
  }, ExtArgs["result"]["client"]>
  composites: {}
}

export type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ClientPayload, S>

export type ClientCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ClientCountAggregateInputType | true
  }

export interface ClientDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
  /**
   * Find zero or one Client that matches the filter.
   * @param {ClientFindUniqueArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ClientFindUniqueArgs>(args: Prisma.SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Client that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Client that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientFindFirstArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ClientFindFirstArgs>(args?: Prisma.SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Client that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Clients that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clients
   * const clients = await prisma.client.findMany()
   * 
   * // Get first 10 Clients
   * const clients = await prisma.client.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ClientFindManyArgs>(args?: Prisma.SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Client.
   * @param {ClientCreateArgs} args - Arguments to create a Client.
   * @example
   * // Create one Client
   * const Client = await prisma.client.create({
   *   data: {
   *     // ... data to create a Client
   *   }
   * })
   * 
   */
  create<T extends ClientCreateArgs>(args: Prisma.SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Clients.
   * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
   * @example
   * // Create many Clients
   * const client = await prisma.client.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ClientCreateManyArgs>(args?: Prisma.SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Clients and returns the data saved in the database.
   * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
   * @example
   * // Create many Clients
   * const client = await prisma.client.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Clients and only return the `id`
   * const clientWithIdOnly = await prisma.client.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Client.
   * @param {ClientDeleteArgs} args - Arguments to delete one Client.
   * @example
   * // Delete one Client
   * const Client = await prisma.client.delete({
   *   where: {
   *     // ... filter to delete one Client
   *   }
   * })
   * 
   */
  delete<T extends ClientDeleteArgs>(args: Prisma.SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Client.
   * @param {ClientUpdateArgs} args - Arguments to update one Client.
   * @example
   * // Update one Client
   * const client = await prisma.client.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ClientUpdateArgs>(args: Prisma.SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Clients.
   * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
   * @example
   * // Delete a few Clients
   * const { count } = await prisma.client.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ClientDeleteManyArgs>(args?: Prisma.SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Clients.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clients
   * const client = await prisma.client.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ClientUpdateManyArgs>(args: Prisma.SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Clients and returns the data updated in the database.
   * @param {ClientUpdateManyAndReturnArgs} args - Arguments to update many Clients.
   * @example
   * // Update many Clients
   * const client = await prisma.client.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Clients and only return the `id`
   * const clientWithIdOnly = await prisma.client.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ClientUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ClientUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Client.
   * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
   * @example
   * // Update or create a Client
   * const client = await prisma.client.upsert({
   *   create: {
   *     // ... data to create a Client
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Client we want to update
   *   }
   * })
   */
  upsert<T extends ClientUpsertArgs>(args: Prisma.SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Clients.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientCountArgs} args - Arguments to filter Clients to count.
   * @example
   * // Count the number of Clients
   * const count = await prisma.client.count({
   *   where: {
   *     // ... the filter for the Clients we want to count
   *   }
   * })
  **/
  count<T extends ClientCountArgs>(
    args?: Prisma.Subset<T, ClientCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ClientCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Client.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ClientAggregateArgs>(args: Prisma.Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

  /**
   * Group by Client.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ClientGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ClientGroupByArgs['orderBy'] }
      : { orderBy?: ClientGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Client model
 */
readonly fields: ClientFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Client.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ClientClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Address<T extends Prisma.Client$AddressArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$AddressArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Company<T extends Prisma.CompanyDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.CompanyDefaultArgs<ExtArgs>>): Prisma.Prisma__CompanyClient<runtime.Types.Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  createdBy<T extends Prisma.Client$createdByArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$createdByArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Jobsites<T extends Prisma.Client$JobsitesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$JobsitesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$JobsitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Client model
 */
export interface ClientFieldRefs {
  readonly id: Prisma.FieldRef<"Client", 'String'>
  readonly name: Prisma.FieldRef<"Client", 'String'>
  readonly description: Prisma.FieldRef<"Client", 'String'>
  readonly creationReason: Prisma.FieldRef<"Client", 'String'>
  readonly approvalStatus: Prisma.FieldRef<"Client", 'ApprovalStatus'>
  readonly contactPerson: Prisma.FieldRef<"Client", 'String'>
  readonly contactEmail: Prisma.FieldRef<"Client", 'String'>
  readonly contactPhone: Prisma.FieldRef<"Client", 'String'>
  readonly hasProject: Prisma.FieldRef<"Client", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Client", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Client", 'DateTime'>
  readonly companyId: Prisma.FieldRef<"Client", 'String'>
  readonly createdById: Prisma.FieldRef<"Client", 'String'>
  readonly createdVia: Prisma.FieldRef<"Client", 'CreatedVia'>
  readonly jobsiteId: Prisma.FieldRef<"Client", 'String'>
  readonly addressId: Prisma.FieldRef<"Client", 'String'>
}
    

// Custom InputTypes
/**
 * Client findUnique
 */
export type ClientFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client findUniqueOrThrow
 */
export type ClientFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client findFirst
 */
export type ClientFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Clients.
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Clients.
   */
  distinct?: Prisma.ClientScalarFieldEnum | Prisma.ClientScalarFieldEnum[]
}

/**
 * Client findFirstOrThrow
 */
export type ClientFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Clients.
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Clients.
   */
  distinct?: Prisma.ClientScalarFieldEnum | Prisma.ClientScalarFieldEnum[]
}

/**
 * Client findMany
 */
export type ClientFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Clients to fetch.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Clients.
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  distinct?: Prisma.ClientScalarFieldEnum | Prisma.ClientScalarFieldEnum[]
}

/**
 * Client create
 */
export type ClientCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * The data needed to create a Client.
   */
  data: Prisma.XOR<Prisma.ClientCreateInput, Prisma.ClientUncheckedCreateInput>
}

/**
 * Client createMany
 */
export type ClientCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Clients.
   */
  data: Prisma.ClientCreateManyInput | Prisma.ClientCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Client createManyAndReturn
 */
export type ClientCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * The data used to create many Clients.
   */
  data: Prisma.ClientCreateManyInput | Prisma.ClientCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Client update
 */
export type ClientUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * The data needed to update a Client.
   */
  data: Prisma.XOR<Prisma.ClientUpdateInput, Prisma.ClientUncheckedUpdateInput>
  /**
   * Choose, which Client to update.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client updateMany
 */
export type ClientUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Clients.
   */
  data: Prisma.XOR<Prisma.ClientUpdateManyMutationInput, Prisma.ClientUncheckedUpdateManyInput>
  /**
   * Filter which Clients to update
   */
  where?: Prisma.ClientWhereInput
  /**
   * Limit how many Clients to update.
   */
  limit?: number
}

/**
 * Client updateManyAndReturn
 */
export type ClientUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * The data used to update Clients.
   */
  data: Prisma.XOR<Prisma.ClientUpdateManyMutationInput, Prisma.ClientUncheckedUpdateManyInput>
  /**
   * Filter which Clients to update
   */
  where?: Prisma.ClientWhereInput
  /**
   * Limit how many Clients to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Client upsert
 */
export type ClientUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * The filter to search for the Client to update in case it exists.
   */
  where: Prisma.ClientWhereUniqueInput
  /**
   * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
   */
  create: Prisma.XOR<Prisma.ClientCreateInput, Prisma.ClientUncheckedCreateInput>
  /**
   * In case the Client was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ClientUpdateInput, Prisma.ClientUncheckedUpdateInput>
}

/**
 * Client delete
 */
export type ClientDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter which Client to delete.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client deleteMany
 */
export type ClientDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Clients to delete
   */
  where?: Prisma.ClientWhereInput
  /**
   * Limit how many Clients to delete.
   */
  limit?: number
}

/**
 * Client.Address
 */
export type Client$AddressArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  where?: Prisma.AddressWhereInput
}

/**
 * Client.createdBy
 */
export type Client$createdByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * Client.Jobsites
 */
export type Client$JobsitesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Jobsite
   */
  select?: Prisma.JobsiteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Jobsite
   */
  omit?: Prisma.JobsiteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobsiteInclude<ExtArgs> | null
  where?: Prisma.JobsiteWhereInput
  orderBy?: Prisma.JobsiteOrderByWithRelationInput | Prisma.JobsiteOrderByWithRelationInput[]
  cursor?: Prisma.JobsiteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.JobsiteScalarFieldEnum | Prisma.JobsiteScalarFieldEnum[]
}

/**
 * Client without action
 */
export type ClientDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
}
