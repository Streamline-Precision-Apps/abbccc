
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Equipment` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Equipment
 * 
 */
export type EquipmentModel = runtime.Types.Result.DefaultSelection<Prisma.$EquipmentPayload>

export type AggregateEquipment = {
  _count: EquipmentCountAggregateOutputType | null
  _avg: EquipmentAvgAggregateOutputType | null
  _sum: EquipmentSumAggregateOutputType | null
  _min: EquipmentMinAggregateOutputType | null
  _max: EquipmentMaxAggregateOutputType | null
}

export type EquipmentAvgAggregateOutputType = {
  currentWeight: number | null
}

export type EquipmentSumAggregateOutputType = {
  currentWeight: number | null
}

export type EquipmentMinAggregateOutputType = {
  id: string | null
  qrId: string | null
  name: string | null
  description: string | null
  creationReason: string | null
  equipmentTag: $Enums.EquipmentTags | null
  state: $Enums.EquipmentState | null
  isDisabledByAdmin: boolean | null
  approvalStatus: $Enums.ApprovalStatus | null
  createdAt: Date | null
  updatedAt: Date | null
  overWeight: boolean | null
  currentWeight: number | null
  createdById: string | null
  createdVia: $Enums.CreatedVia | null
}

export type EquipmentMaxAggregateOutputType = {
  id: string | null
  qrId: string | null
  name: string | null
  description: string | null
  creationReason: string | null
  equipmentTag: $Enums.EquipmentTags | null
  state: $Enums.EquipmentState | null
  isDisabledByAdmin: boolean | null
  approvalStatus: $Enums.ApprovalStatus | null
  createdAt: Date | null
  updatedAt: Date | null
  overWeight: boolean | null
  currentWeight: number | null
  createdById: string | null
  createdVia: $Enums.CreatedVia | null
}

export type EquipmentCountAggregateOutputType = {
  id: number
  qrId: number
  name: number
  description: number
  creationReason: number
  equipmentTag: number
  state: number
  isDisabledByAdmin: number
  approvalStatus: number
  createdAt: number
  updatedAt: number
  overWeight: number
  currentWeight: number
  createdById: number
  createdVia: number
  _all: number
}


export type EquipmentAvgAggregateInputType = {
  currentWeight?: true
}

export type EquipmentSumAggregateInputType = {
  currentWeight?: true
}

export type EquipmentMinAggregateInputType = {
  id?: true
  qrId?: true
  name?: true
  description?: true
  creationReason?: true
  equipmentTag?: true
  state?: true
  isDisabledByAdmin?: true
  approvalStatus?: true
  createdAt?: true
  updatedAt?: true
  overWeight?: true
  currentWeight?: true
  createdById?: true
  createdVia?: true
}

export type EquipmentMaxAggregateInputType = {
  id?: true
  qrId?: true
  name?: true
  description?: true
  creationReason?: true
  equipmentTag?: true
  state?: true
  isDisabledByAdmin?: true
  approvalStatus?: true
  createdAt?: true
  updatedAt?: true
  overWeight?: true
  currentWeight?: true
  createdById?: true
  createdVia?: true
}

export type EquipmentCountAggregateInputType = {
  id?: true
  qrId?: true
  name?: true
  description?: true
  creationReason?: true
  equipmentTag?: true
  state?: true
  isDisabledByAdmin?: true
  approvalStatus?: true
  createdAt?: true
  updatedAt?: true
  overWeight?: true
  currentWeight?: true
  createdById?: true
  createdVia?: true
  _all?: true
}

export type EquipmentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Equipment to aggregate.
   */
  where?: Prisma.EquipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipment to fetch.
   */
  orderBy?: Prisma.EquipmentOrderByWithRelationInput | Prisma.EquipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.EquipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipment from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipment.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Equipment
  **/
  _count?: true | EquipmentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: EquipmentAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: EquipmentSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: EquipmentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: EquipmentMaxAggregateInputType
}

export type GetEquipmentAggregateType<T extends EquipmentAggregateArgs> = {
      [P in keyof T & keyof AggregateEquipment]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEquipment[P]>
    : Prisma.GetScalarType<T[P], AggregateEquipment[P]>
}




export type EquipmentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EquipmentWhereInput
  orderBy?: Prisma.EquipmentOrderByWithAggregationInput | Prisma.EquipmentOrderByWithAggregationInput[]
  by: Prisma.EquipmentScalarFieldEnum[] | Prisma.EquipmentScalarFieldEnum
  having?: Prisma.EquipmentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: EquipmentCountAggregateInputType | true
  _avg?: EquipmentAvgAggregateInputType
  _sum?: EquipmentSumAggregateInputType
  _min?: EquipmentMinAggregateInputType
  _max?: EquipmentMaxAggregateInputType
}

export type EquipmentGroupByOutputType = {
  id: string
  qrId: string
  name: string
  description: string
  creationReason: string | null
  equipmentTag: $Enums.EquipmentTags
  state: $Enums.EquipmentState
  isDisabledByAdmin: boolean
  approvalStatus: $Enums.ApprovalStatus
  createdAt: Date
  updatedAt: Date
  overWeight: boolean | null
  currentWeight: number | null
  createdById: string | null
  createdVia: $Enums.CreatedVia
  _count: EquipmentCountAggregateOutputType | null
  _avg: EquipmentAvgAggregateOutputType | null
  _sum: EquipmentSumAggregateOutputType | null
  _min: EquipmentMinAggregateOutputType | null
  _max: EquipmentMaxAggregateOutputType | null
}

type GetEquipmentGroupByPayload<T extends EquipmentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EquipmentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof EquipmentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EquipmentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EquipmentGroupByOutputType[P]>
      }
    >
  >



export type EquipmentWhereInput = {
  AND?: Prisma.EquipmentWhereInput | Prisma.EquipmentWhereInput[]
  OR?: Prisma.EquipmentWhereInput[]
  NOT?: Prisma.EquipmentWhereInput | Prisma.EquipmentWhereInput[]
  id?: Prisma.StringFilter<"Equipment"> | string
  qrId?: Prisma.StringFilter<"Equipment"> | string
  name?: Prisma.StringFilter<"Equipment"> | string
  description?: Prisma.StringFilter<"Equipment"> | string
  creationReason?: Prisma.StringNullableFilter<"Equipment"> | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFilter<"Equipment"> | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFilter<"Equipment"> | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFilter<"Equipment"> | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFilter<"Equipment"> | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFilter<"Equipment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Equipment"> | Date | string
  overWeight?: Prisma.BoolNullableFilter<"Equipment"> | boolean | null
  currentWeight?: Prisma.FloatNullableFilter<"Equipment"> | number | null
  createdById?: Prisma.StringNullableFilter<"Equipment"> | string | null
  createdVia?: Prisma.EnumCreatedViaFilter<"Equipment"> | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogListRelationFilter
  createdBy?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  EquipmentHauled?: Prisma.EquipmentHauledListRelationFilter
  equipmentVehicleInfo?: Prisma.XOR<Prisma.EquipmentVehicleInfoNullableScalarRelationFilter, Prisma.EquipmentVehicleInfoWhereInput> | null
  Maintenances?: Prisma.MaintenanceListRelationFilter
  TascoLogs?: Prisma.TascoLogListRelationFilter
  HauledInLogs?: Prisma.TruckingLogListRelationFilter
  UsedAsTruck?: Prisma.TruckingLogListRelationFilter
  UsedAsTrailer?: Prisma.TruckingLogListRelationFilter
  DocumentTags?: Prisma.DocumentTagListRelationFilter
}

export type EquipmentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  qrId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrderInput | Prisma.SortOrder
  equipmentTag?: Prisma.SortOrder
  state?: Prisma.SortOrder
  isDisabledByAdmin?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  overWeight?: Prisma.SortOrderInput | Prisma.SortOrder
  currentWeight?: Prisma.SortOrderInput | Prisma.SortOrder
  createdById?: Prisma.SortOrderInput | Prisma.SortOrder
  createdVia?: Prisma.SortOrder
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogOrderByRelationAggregateInput
  createdBy?: Prisma.UserOrderByWithRelationInput
  EquipmentHauled?: Prisma.EquipmentHauledOrderByRelationAggregateInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoOrderByWithRelationInput
  Maintenances?: Prisma.MaintenanceOrderByRelationAggregateInput
  TascoLogs?: Prisma.TascoLogOrderByRelationAggregateInput
  HauledInLogs?: Prisma.TruckingLogOrderByRelationAggregateInput
  UsedAsTruck?: Prisma.TruckingLogOrderByRelationAggregateInput
  UsedAsTrailer?: Prisma.TruckingLogOrderByRelationAggregateInput
  DocumentTags?: Prisma.DocumentTagOrderByRelationAggregateInput
}

export type EquipmentWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  qrId?: string
  AND?: Prisma.EquipmentWhereInput | Prisma.EquipmentWhereInput[]
  OR?: Prisma.EquipmentWhereInput[]
  NOT?: Prisma.EquipmentWhereInput | Prisma.EquipmentWhereInput[]
  name?: Prisma.StringFilter<"Equipment"> | string
  description?: Prisma.StringFilter<"Equipment"> | string
  creationReason?: Prisma.StringNullableFilter<"Equipment"> | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFilter<"Equipment"> | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFilter<"Equipment"> | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFilter<"Equipment"> | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFilter<"Equipment"> | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFilter<"Equipment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Equipment"> | Date | string
  overWeight?: Prisma.BoolNullableFilter<"Equipment"> | boolean | null
  currentWeight?: Prisma.FloatNullableFilter<"Equipment"> | number | null
  createdById?: Prisma.StringNullableFilter<"Equipment"> | string | null
  createdVia?: Prisma.EnumCreatedViaFilter<"Equipment"> | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogListRelationFilter
  createdBy?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  EquipmentHauled?: Prisma.EquipmentHauledListRelationFilter
  equipmentVehicleInfo?: Prisma.XOR<Prisma.EquipmentVehicleInfoNullableScalarRelationFilter, Prisma.EquipmentVehicleInfoWhereInput> | null
  Maintenances?: Prisma.MaintenanceListRelationFilter
  TascoLogs?: Prisma.TascoLogListRelationFilter
  HauledInLogs?: Prisma.TruckingLogListRelationFilter
  UsedAsTruck?: Prisma.TruckingLogListRelationFilter
  UsedAsTrailer?: Prisma.TruckingLogListRelationFilter
  DocumentTags?: Prisma.DocumentTagListRelationFilter
}, "id" | "qrId">

export type EquipmentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  qrId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrderInput | Prisma.SortOrder
  equipmentTag?: Prisma.SortOrder
  state?: Prisma.SortOrder
  isDisabledByAdmin?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  overWeight?: Prisma.SortOrderInput | Prisma.SortOrder
  currentWeight?: Prisma.SortOrderInput | Prisma.SortOrder
  createdById?: Prisma.SortOrderInput | Prisma.SortOrder
  createdVia?: Prisma.SortOrder
  _count?: Prisma.EquipmentCountOrderByAggregateInput
  _avg?: Prisma.EquipmentAvgOrderByAggregateInput
  _max?: Prisma.EquipmentMaxOrderByAggregateInput
  _min?: Prisma.EquipmentMinOrderByAggregateInput
  _sum?: Prisma.EquipmentSumOrderByAggregateInput
}

export type EquipmentScalarWhereWithAggregatesInput = {
  AND?: Prisma.EquipmentScalarWhereWithAggregatesInput | Prisma.EquipmentScalarWhereWithAggregatesInput[]
  OR?: Prisma.EquipmentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.EquipmentScalarWhereWithAggregatesInput | Prisma.EquipmentScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Equipment"> | string
  qrId?: Prisma.StringWithAggregatesFilter<"Equipment"> | string
  name?: Prisma.StringWithAggregatesFilter<"Equipment"> | string
  description?: Prisma.StringWithAggregatesFilter<"Equipment"> | string
  creationReason?: Prisma.StringNullableWithAggregatesFilter<"Equipment"> | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsWithAggregatesFilter<"Equipment"> | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateWithAggregatesFilter<"Equipment"> | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolWithAggregatesFilter<"Equipment"> | boolean
  approvalStatus?: Prisma.EnumApprovalStatusWithAggregatesFilter<"Equipment"> | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Equipment"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Equipment"> | Date | string
  overWeight?: Prisma.BoolNullableWithAggregatesFilter<"Equipment"> | boolean | null
  currentWeight?: Prisma.FloatNullableWithAggregatesFilter<"Equipment"> | number | null
  createdById?: Prisma.StringNullableWithAggregatesFilter<"Equipment"> | string | null
  createdVia?: Prisma.EnumCreatedViaWithAggregatesFilter<"Equipment"> | $Enums.CreatedVia
}

export type EquipmentCreateInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentCreateManyInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
}

export type EquipmentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
}

export type EquipmentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
}

export type EquipmentListRelationFilter = {
  every?: Prisma.EquipmentWhereInput
  some?: Prisma.EquipmentWhereInput
  none?: Prisma.EquipmentWhereInput
}

export type EquipmentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EquipmentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  qrId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrder
  equipmentTag?: Prisma.SortOrder
  state?: Prisma.SortOrder
  isDisabledByAdmin?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  overWeight?: Prisma.SortOrder
  currentWeight?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdVia?: Prisma.SortOrder
}

export type EquipmentAvgOrderByAggregateInput = {
  currentWeight?: Prisma.SortOrder
}

export type EquipmentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  qrId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrder
  equipmentTag?: Prisma.SortOrder
  state?: Prisma.SortOrder
  isDisabledByAdmin?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  overWeight?: Prisma.SortOrder
  currentWeight?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdVia?: Prisma.SortOrder
}

export type EquipmentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  qrId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  creationReason?: Prisma.SortOrder
  equipmentTag?: Prisma.SortOrder
  state?: Prisma.SortOrder
  isDisabledByAdmin?: Prisma.SortOrder
  approvalStatus?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  overWeight?: Prisma.SortOrder
  currentWeight?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdVia?: Prisma.SortOrder
}

export type EquipmentSumOrderByAggregateInput = {
  currentWeight?: Prisma.SortOrder
}

export type EquipmentScalarRelationFilter = {
  is?: Prisma.EquipmentWhereInput
  isNot?: Prisma.EquipmentWhereInput
}

export type EquipmentNullableScalarRelationFilter = {
  is?: Prisma.EquipmentWhereInput | null
  isNot?: Prisma.EquipmentWhereInput | null
}

export type EquipmentCreateNestedManyWithoutDocumentTagsInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput> | Prisma.EquipmentCreateWithoutDocumentTagsInput[] | Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput | Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput[]
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
}

export type EquipmentUncheckedCreateNestedManyWithoutDocumentTagsInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput> | Prisma.EquipmentCreateWithoutDocumentTagsInput[] | Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput | Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput[]
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
}

export type EquipmentUpdateManyWithoutDocumentTagsNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput> | Prisma.EquipmentCreateWithoutDocumentTagsInput[] | Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput | Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput[]
  upsert?: Prisma.EquipmentUpsertWithWhereUniqueWithoutDocumentTagsInput | Prisma.EquipmentUpsertWithWhereUniqueWithoutDocumentTagsInput[]
  set?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  disconnect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  delete?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  update?: Prisma.EquipmentUpdateWithWhereUniqueWithoutDocumentTagsInput | Prisma.EquipmentUpdateWithWhereUniqueWithoutDocumentTagsInput[]
  updateMany?: Prisma.EquipmentUpdateManyWithWhereWithoutDocumentTagsInput | Prisma.EquipmentUpdateManyWithWhereWithoutDocumentTagsInput[]
  deleteMany?: Prisma.EquipmentScalarWhereInput | Prisma.EquipmentScalarWhereInput[]
}

export type EquipmentUncheckedUpdateManyWithoutDocumentTagsNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput> | Prisma.EquipmentCreateWithoutDocumentTagsInput[] | Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput | Prisma.EquipmentCreateOrConnectWithoutDocumentTagsInput[]
  upsert?: Prisma.EquipmentUpsertWithWhereUniqueWithoutDocumentTagsInput | Prisma.EquipmentUpsertWithWhereUniqueWithoutDocumentTagsInput[]
  set?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  disconnect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  delete?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  update?: Prisma.EquipmentUpdateWithWhereUniqueWithoutDocumentTagsInput | Prisma.EquipmentUpdateWithWhereUniqueWithoutDocumentTagsInput[]
  updateMany?: Prisma.EquipmentUpdateManyWithWhereWithoutDocumentTagsInput | Prisma.EquipmentUpdateManyWithWhereWithoutDocumentTagsInput[]
  deleteMany?: Prisma.EquipmentScalarWhereInput | Prisma.EquipmentScalarWhereInput[]
}

export type EnumEquipmentTagsFieldUpdateOperationsInput = {
  set?: $Enums.EquipmentTags
}

export type EnumEquipmentStateFieldUpdateOperationsInput = {
  set?: $Enums.EquipmentState
}

export type NullableBoolFieldUpdateOperationsInput = {
  set?: boolean | null
}

export type NullableFloatFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EquipmentCreateNestedOneWithoutEquipmentVehicleInfoInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentVehicleInfoInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentVehicleInfoInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutEquipmentVehicleInfoInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentUpdateOneRequiredWithoutEquipmentVehicleInfoNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentVehicleInfoInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentVehicleInfoInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutEquipmentVehicleInfoInput
  upsert?: Prisma.EquipmentUpsertWithoutEquipmentVehicleInfoInput
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutEquipmentVehicleInfoInput, Prisma.EquipmentUpdateWithoutEquipmentVehicleInfoInput>, Prisma.EquipmentUncheckedUpdateWithoutEquipmentVehicleInfoInput>
}

export type EquipmentCreateNestedOneWithoutEmployeeEquipmentLogsInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutEmployeeEquipmentLogsInput, Prisma.EquipmentUncheckedCreateWithoutEmployeeEquipmentLogsInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutEmployeeEquipmentLogsInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentUpdateOneWithoutEmployeeEquipmentLogsNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutEmployeeEquipmentLogsInput, Prisma.EquipmentUncheckedCreateWithoutEmployeeEquipmentLogsInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutEmployeeEquipmentLogsInput
  upsert?: Prisma.EquipmentUpsertWithoutEmployeeEquipmentLogsInput
  disconnect?: Prisma.EquipmentWhereInput | boolean
  delete?: Prisma.EquipmentWhereInput | boolean
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutEmployeeEquipmentLogsInput, Prisma.EquipmentUpdateWithoutEmployeeEquipmentLogsInput>, Prisma.EquipmentUncheckedUpdateWithoutEmployeeEquipmentLogsInput>
}

export type EquipmentCreateNestedOneWithoutMaintenancesInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutMaintenancesInput, Prisma.EquipmentUncheckedCreateWithoutMaintenancesInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutMaintenancesInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentUpdateOneRequiredWithoutMaintenancesNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutMaintenancesInput, Prisma.EquipmentUncheckedCreateWithoutMaintenancesInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutMaintenancesInput
  upsert?: Prisma.EquipmentUpsertWithoutMaintenancesInput
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutMaintenancesInput, Prisma.EquipmentUpdateWithoutMaintenancesInput>, Prisma.EquipmentUncheckedUpdateWithoutMaintenancesInput>
}

export type EquipmentCreateNestedOneWithoutTascoLogsInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutTascoLogsInput, Prisma.EquipmentUncheckedCreateWithoutTascoLogsInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutTascoLogsInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentUpdateOneWithoutTascoLogsNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutTascoLogsInput, Prisma.EquipmentUncheckedCreateWithoutTascoLogsInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutTascoLogsInput
  upsert?: Prisma.EquipmentUpsertWithoutTascoLogsInput
  disconnect?: Prisma.EquipmentWhereInput | boolean
  delete?: Prisma.EquipmentWhereInput | boolean
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutTascoLogsInput, Prisma.EquipmentUpdateWithoutTascoLogsInput>, Prisma.EquipmentUncheckedUpdateWithoutTascoLogsInput>
}

export type EquipmentCreateNestedOneWithoutHauledInLogsInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutHauledInLogsInput, Prisma.EquipmentUncheckedCreateWithoutHauledInLogsInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutHauledInLogsInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentCreateNestedOneWithoutUsedAsTruckInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTruckInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTruckInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutUsedAsTruckInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentCreateNestedOneWithoutUsedAsTrailerInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTrailerInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTrailerInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutUsedAsTrailerInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentUpdateOneWithoutHauledInLogsNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutHauledInLogsInput, Prisma.EquipmentUncheckedCreateWithoutHauledInLogsInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutHauledInLogsInput
  upsert?: Prisma.EquipmentUpsertWithoutHauledInLogsInput
  disconnect?: Prisma.EquipmentWhereInput | boolean
  delete?: Prisma.EquipmentWhereInput | boolean
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutHauledInLogsInput, Prisma.EquipmentUpdateWithoutHauledInLogsInput>, Prisma.EquipmentUncheckedUpdateWithoutHauledInLogsInput>
}

export type EquipmentUpdateOneWithoutUsedAsTruckNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTruckInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTruckInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutUsedAsTruckInput
  upsert?: Prisma.EquipmentUpsertWithoutUsedAsTruckInput
  disconnect?: Prisma.EquipmentWhereInput | boolean
  delete?: Prisma.EquipmentWhereInput | boolean
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutUsedAsTruckInput, Prisma.EquipmentUpdateWithoutUsedAsTruckInput>, Prisma.EquipmentUncheckedUpdateWithoutUsedAsTruckInput>
}

export type EquipmentUpdateOneWithoutUsedAsTrailerNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTrailerInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTrailerInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutUsedAsTrailerInput
  upsert?: Prisma.EquipmentUpsertWithoutUsedAsTrailerInput
  disconnect?: Prisma.EquipmentWhereInput | boolean
  delete?: Prisma.EquipmentWhereInput | boolean
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutUsedAsTrailerInput, Prisma.EquipmentUpdateWithoutUsedAsTrailerInput>, Prisma.EquipmentUncheckedUpdateWithoutUsedAsTrailerInput>
}

export type EquipmentCreateNestedOneWithoutEquipmentHauledInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentHauledInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentHauledInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutEquipmentHauledInput
  connect?: Prisma.EquipmentWhereUniqueInput
}

export type EquipmentUpdateOneWithoutEquipmentHauledNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentHauledInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentHauledInput>
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutEquipmentHauledInput
  upsert?: Prisma.EquipmentUpsertWithoutEquipmentHauledInput
  disconnect?: Prisma.EquipmentWhereInput | boolean
  delete?: Prisma.EquipmentWhereInput | boolean
  connect?: Prisma.EquipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EquipmentUpdateToOneWithWhereWithoutEquipmentHauledInput, Prisma.EquipmentUpdateWithoutEquipmentHauledInput>, Prisma.EquipmentUncheckedUpdateWithoutEquipmentHauledInput>
}

export type EquipmentCreateNestedManyWithoutCreatedByInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutCreatedByInput, Prisma.EquipmentUncheckedCreateWithoutCreatedByInput> | Prisma.EquipmentCreateWithoutCreatedByInput[] | Prisma.EquipmentUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutCreatedByInput | Prisma.EquipmentCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.EquipmentCreateManyCreatedByInputEnvelope
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
}

export type EquipmentUncheckedCreateNestedManyWithoutCreatedByInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutCreatedByInput, Prisma.EquipmentUncheckedCreateWithoutCreatedByInput> | Prisma.EquipmentCreateWithoutCreatedByInput[] | Prisma.EquipmentUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutCreatedByInput | Prisma.EquipmentCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.EquipmentCreateManyCreatedByInputEnvelope
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
}

export type EquipmentUpdateManyWithoutCreatedByNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutCreatedByInput, Prisma.EquipmentUncheckedCreateWithoutCreatedByInput> | Prisma.EquipmentCreateWithoutCreatedByInput[] | Prisma.EquipmentUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutCreatedByInput | Prisma.EquipmentCreateOrConnectWithoutCreatedByInput[]
  upsert?: Prisma.EquipmentUpsertWithWhereUniqueWithoutCreatedByInput | Prisma.EquipmentUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.EquipmentCreateManyCreatedByInputEnvelope
  set?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  disconnect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  delete?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  update?: Prisma.EquipmentUpdateWithWhereUniqueWithoutCreatedByInput | Prisma.EquipmentUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?: Prisma.EquipmentUpdateManyWithWhereWithoutCreatedByInput | Prisma.EquipmentUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.EquipmentScalarWhereInput | Prisma.EquipmentScalarWhereInput[]
}

export type EquipmentUncheckedUpdateManyWithoutCreatedByNestedInput = {
  create?: Prisma.XOR<Prisma.EquipmentCreateWithoutCreatedByInput, Prisma.EquipmentUncheckedCreateWithoutCreatedByInput> | Prisma.EquipmentCreateWithoutCreatedByInput[] | Prisma.EquipmentUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.EquipmentCreateOrConnectWithoutCreatedByInput | Prisma.EquipmentCreateOrConnectWithoutCreatedByInput[]
  upsert?: Prisma.EquipmentUpsertWithWhereUniqueWithoutCreatedByInput | Prisma.EquipmentUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.EquipmentCreateManyCreatedByInputEnvelope
  set?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  disconnect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  delete?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  connect?: Prisma.EquipmentWhereUniqueInput | Prisma.EquipmentWhereUniqueInput[]
  update?: Prisma.EquipmentUpdateWithWhereUniqueWithoutCreatedByInput | Prisma.EquipmentUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?: Prisma.EquipmentUpdateManyWithWhereWithoutCreatedByInput | Prisma.EquipmentUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.EquipmentScalarWhereInput | Prisma.EquipmentScalarWhereInput[]
}

export type EquipmentCreateWithoutDocumentTagsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
}

export type EquipmentUncheckedCreateWithoutDocumentTagsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
}

export type EquipmentCreateOrConnectWithoutDocumentTagsInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput>
}

export type EquipmentUpsertWithWhereUniqueWithoutDocumentTagsInput = {
  where: Prisma.EquipmentWhereUniqueInput
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedUpdateWithoutDocumentTagsInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedCreateWithoutDocumentTagsInput>
}

export type EquipmentUpdateWithWhereUniqueWithoutDocumentTagsInput = {
  where: Prisma.EquipmentWhereUniqueInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutDocumentTagsInput, Prisma.EquipmentUncheckedUpdateWithoutDocumentTagsInput>
}

export type EquipmentUpdateManyWithWhereWithoutDocumentTagsInput = {
  where: Prisma.EquipmentScalarWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateManyMutationInput, Prisma.EquipmentUncheckedUpdateManyWithoutDocumentTagsInput>
}

export type EquipmentScalarWhereInput = {
  AND?: Prisma.EquipmentScalarWhereInput | Prisma.EquipmentScalarWhereInput[]
  OR?: Prisma.EquipmentScalarWhereInput[]
  NOT?: Prisma.EquipmentScalarWhereInput | Prisma.EquipmentScalarWhereInput[]
  id?: Prisma.StringFilter<"Equipment"> | string
  qrId?: Prisma.StringFilter<"Equipment"> | string
  name?: Prisma.StringFilter<"Equipment"> | string
  description?: Prisma.StringFilter<"Equipment"> | string
  creationReason?: Prisma.StringNullableFilter<"Equipment"> | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFilter<"Equipment"> | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFilter<"Equipment"> | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFilter<"Equipment"> | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFilter<"Equipment"> | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFilter<"Equipment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Equipment"> | Date | string
  overWeight?: Prisma.BoolNullableFilter<"Equipment"> | boolean | null
  currentWeight?: Prisma.FloatNullableFilter<"Equipment"> | number | null
  createdById?: Prisma.StringNullableFilter<"Equipment"> | string | null
  createdVia?: Prisma.EnumCreatedViaFilter<"Equipment"> | $Enums.CreatedVia
}

export type EquipmentCreateWithoutEquipmentVehicleInfoInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutEquipmentVehicleInfoInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutEquipmentVehicleInfoInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentVehicleInfoInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentVehicleInfoInput>
}

export type EquipmentUpsertWithoutEquipmentVehicleInfoInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutEquipmentVehicleInfoInput, Prisma.EquipmentUncheckedUpdateWithoutEquipmentVehicleInfoInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentVehicleInfoInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentVehicleInfoInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutEquipmentVehicleInfoInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutEquipmentVehicleInfoInput, Prisma.EquipmentUncheckedUpdateWithoutEquipmentVehicleInfoInput>
}

export type EquipmentUpdateWithoutEquipmentVehicleInfoInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutEquipmentVehicleInfoInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentCreateWithoutEmployeeEquipmentLogsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutEmployeeEquipmentLogsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutEmployeeEquipmentLogsInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutEmployeeEquipmentLogsInput, Prisma.EquipmentUncheckedCreateWithoutEmployeeEquipmentLogsInput>
}

export type EquipmentUpsertWithoutEmployeeEquipmentLogsInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutEmployeeEquipmentLogsInput, Prisma.EquipmentUncheckedUpdateWithoutEmployeeEquipmentLogsInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutEmployeeEquipmentLogsInput, Prisma.EquipmentUncheckedCreateWithoutEmployeeEquipmentLogsInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutEmployeeEquipmentLogsInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutEmployeeEquipmentLogsInput, Prisma.EquipmentUncheckedUpdateWithoutEmployeeEquipmentLogsInput>
}

export type EquipmentUpdateWithoutEmployeeEquipmentLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutEmployeeEquipmentLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentCreateWithoutMaintenancesInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutMaintenancesInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutMaintenancesInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutMaintenancesInput, Prisma.EquipmentUncheckedCreateWithoutMaintenancesInput>
}

export type EquipmentUpsertWithoutMaintenancesInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutMaintenancesInput, Prisma.EquipmentUncheckedUpdateWithoutMaintenancesInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutMaintenancesInput, Prisma.EquipmentUncheckedCreateWithoutMaintenancesInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutMaintenancesInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutMaintenancesInput, Prisma.EquipmentUncheckedUpdateWithoutMaintenancesInput>
}

export type EquipmentUpdateWithoutMaintenancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutMaintenancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentCreateWithoutTascoLogsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutTascoLogsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutTascoLogsInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutTascoLogsInput, Prisma.EquipmentUncheckedCreateWithoutTascoLogsInput>
}

export type EquipmentUpsertWithoutTascoLogsInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutTascoLogsInput, Prisma.EquipmentUncheckedUpdateWithoutTascoLogsInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutTascoLogsInput, Prisma.EquipmentUncheckedCreateWithoutTascoLogsInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutTascoLogsInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutTascoLogsInput, Prisma.EquipmentUncheckedUpdateWithoutTascoLogsInput>
}

export type EquipmentUpdateWithoutTascoLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutTascoLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentCreateWithoutHauledInLogsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutHauledInLogsInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutHauledInLogsInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutHauledInLogsInput, Prisma.EquipmentUncheckedCreateWithoutHauledInLogsInput>
}

export type EquipmentCreateWithoutUsedAsTruckInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutUsedAsTruckInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutUsedAsTruckInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTruckInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTruckInput>
}

export type EquipmentCreateWithoutUsedAsTrailerInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutUsedAsTrailerInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutUsedAsTrailerInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTrailerInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTrailerInput>
}

export type EquipmentUpsertWithoutHauledInLogsInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutHauledInLogsInput, Prisma.EquipmentUncheckedUpdateWithoutHauledInLogsInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutHauledInLogsInput, Prisma.EquipmentUncheckedCreateWithoutHauledInLogsInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutHauledInLogsInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutHauledInLogsInput, Prisma.EquipmentUncheckedUpdateWithoutHauledInLogsInput>
}

export type EquipmentUpdateWithoutHauledInLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutHauledInLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUpsertWithoutUsedAsTruckInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutUsedAsTruckInput, Prisma.EquipmentUncheckedUpdateWithoutUsedAsTruckInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTruckInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTruckInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutUsedAsTruckInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutUsedAsTruckInput, Prisma.EquipmentUncheckedUpdateWithoutUsedAsTruckInput>
}

export type EquipmentUpdateWithoutUsedAsTruckInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutUsedAsTruckInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUpsertWithoutUsedAsTrailerInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutUsedAsTrailerInput, Prisma.EquipmentUncheckedUpdateWithoutUsedAsTrailerInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutUsedAsTrailerInput, Prisma.EquipmentUncheckedCreateWithoutUsedAsTrailerInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutUsedAsTrailerInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutUsedAsTrailerInput, Prisma.EquipmentUncheckedUpdateWithoutUsedAsTrailerInput>
}

export type EquipmentUpdateWithoutUsedAsTrailerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutUsedAsTrailerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentCreateWithoutEquipmentHauledInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  createdBy?: Prisma.UserCreateNestedOneWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutEquipmentHauledInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdById?: string | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutEquipmentHauledInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentHauledInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentHauledInput>
}

export type EquipmentUpsertWithoutEquipmentHauledInput = {
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutEquipmentHauledInput, Prisma.EquipmentUncheckedUpdateWithoutEquipmentHauledInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutEquipmentHauledInput, Prisma.EquipmentUncheckedCreateWithoutEquipmentHauledInput>
  where?: Prisma.EquipmentWhereInput
}

export type EquipmentUpdateToOneWithWhereWithoutEquipmentHauledInput = {
  where?: Prisma.EquipmentWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutEquipmentHauledInput, Prisma.EquipmentUncheckedUpdateWithoutEquipmentHauledInput>
}

export type EquipmentUpdateWithoutEquipmentHauledInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutEquipmentHauledInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentCreateWithoutCreatedByInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagCreateNestedManyWithoutEquipmentInput
}

export type EquipmentUncheckedCreateWithoutCreatedByInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutEquipmentInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutEquipmentInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedCreateNestedOneWithoutEquipmentInput
  Maintenances?: Prisma.MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput
  TascoLogs?: Prisma.TascoLogUncheckedCreateNestedManyWithoutEquipmentInput
  HauledInLogs?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTruckInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedCreateNestedManyWithoutTrailerInput
  DocumentTags?: Prisma.DocumentTagUncheckedCreateNestedManyWithoutEquipmentInput
}

export type EquipmentCreateOrConnectWithoutCreatedByInput = {
  where: Prisma.EquipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutCreatedByInput, Prisma.EquipmentUncheckedCreateWithoutCreatedByInput>
}

export type EquipmentCreateManyCreatedByInputEnvelope = {
  data: Prisma.EquipmentCreateManyCreatedByInput | Prisma.EquipmentCreateManyCreatedByInput[]
  skipDuplicates?: boolean
}

export type EquipmentUpsertWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.EquipmentWhereUniqueInput
  update: Prisma.XOR<Prisma.EquipmentUpdateWithoutCreatedByInput, Prisma.EquipmentUncheckedUpdateWithoutCreatedByInput>
  create: Prisma.XOR<Prisma.EquipmentCreateWithoutCreatedByInput, Prisma.EquipmentUncheckedCreateWithoutCreatedByInput>
}

export type EquipmentUpdateWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.EquipmentWhereUniqueInput
  data: Prisma.XOR<Prisma.EquipmentUpdateWithoutCreatedByInput, Prisma.EquipmentUncheckedUpdateWithoutCreatedByInput>
}

export type EquipmentUpdateManyWithWhereWithoutCreatedByInput = {
  where: Prisma.EquipmentScalarWhereInput
  data: Prisma.XOR<Prisma.EquipmentUpdateManyMutationInput, Prisma.EquipmentUncheckedUpdateManyWithoutCreatedByInput>
}

export type EquipmentUpdateWithoutDocumentTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  createdBy?: Prisma.UserUpdateOneWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
}

export type EquipmentUncheckedUpdateWithoutDocumentTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
}

export type EquipmentUncheckedUpdateManyWithoutDocumentTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
}

export type EquipmentCreateManyCreatedByInput = {
  id?: string
  qrId: string
  name: string
  description: string
  creationReason?: string | null
  equipmentTag?: $Enums.EquipmentTags
  state?: $Enums.EquipmentState
  isDisabledByAdmin?: boolean
  approvalStatus?: $Enums.ApprovalStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  overWeight?: boolean | null
  currentWeight?: number | null
  createdVia?: $Enums.CreatedVia
}

export type EquipmentUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
  EmployeeEquipmentLogs?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutEquipmentNestedInput
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutEquipmentNestedInput
  equipmentVehicleInfo?: Prisma.EquipmentVehicleInfoUncheckedUpdateOneWithoutEquipmentNestedInput
  Maintenances?: Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput
  TascoLogs?: Prisma.TascoLogUncheckedUpdateManyWithoutEquipmentNestedInput
  HauledInLogs?: Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput
  UsedAsTruck?: Prisma.TruckingLogUncheckedUpdateManyWithoutTruckNestedInput
  UsedAsTrailer?: Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput
  DocumentTags?: Prisma.DocumentTagUncheckedUpdateManyWithoutEquipmentNestedInput
}

export type EquipmentUncheckedUpdateManyWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  qrId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  creationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentTag?: Prisma.EnumEquipmentTagsFieldUpdateOperationsInput | $Enums.EquipmentTags
  state?: Prisma.EnumEquipmentStateFieldUpdateOperationsInput | $Enums.EquipmentState
  isDisabledByAdmin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  approvalStatus?: Prisma.EnumApprovalStatusFieldUpdateOperationsInput | $Enums.ApprovalStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  overWeight?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  currentWeight?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdVia?: Prisma.EnumCreatedViaFieldUpdateOperationsInput | $Enums.CreatedVia
}


/**
 * Count Type EquipmentCountOutputType
 */

export type EquipmentCountOutputType = {
  EmployeeEquipmentLogs: number
  EquipmentHauled: number
  Maintenances: number
  TascoLogs: number
  HauledInLogs: number
  UsedAsTruck: number
  UsedAsTrailer: number
  DocumentTags: number
}

export type EquipmentCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EmployeeEquipmentLogs?: boolean | EquipmentCountOutputTypeCountEmployeeEquipmentLogsArgs
  EquipmentHauled?: boolean | EquipmentCountOutputTypeCountEquipmentHauledArgs
  Maintenances?: boolean | EquipmentCountOutputTypeCountMaintenancesArgs
  TascoLogs?: boolean | EquipmentCountOutputTypeCountTascoLogsArgs
  HauledInLogs?: boolean | EquipmentCountOutputTypeCountHauledInLogsArgs
  UsedAsTruck?: boolean | EquipmentCountOutputTypeCountUsedAsTruckArgs
  UsedAsTrailer?: boolean | EquipmentCountOutputTypeCountUsedAsTrailerArgs
  DocumentTags?: boolean | EquipmentCountOutputTypeCountDocumentTagsArgs
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentCountOutputType
   */
  select?: Prisma.EquipmentCountOutputTypeSelect<ExtArgs> | null
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountEmployeeEquipmentLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EmployeeEquipmentLogWhereInput
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountEquipmentHauledArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EquipmentHauledWhereInput
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountMaintenancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MaintenanceWhereInput
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountTascoLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TascoLogWhereInput
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountHauledInLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TruckingLogWhereInput
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountUsedAsTruckArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TruckingLogWhereInput
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountUsedAsTrailerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TruckingLogWhereInput
}

/**
 * EquipmentCountOutputType without action
 */
export type EquipmentCountOutputTypeCountDocumentTagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DocumentTagWhereInput
}


export type EquipmentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  qrId?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  equipmentTag?: boolean
  state?: boolean
  isDisabledByAdmin?: boolean
  approvalStatus?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  overWeight?: boolean
  currentWeight?: boolean
  createdById?: boolean
  createdVia?: boolean
  EmployeeEquipmentLogs?: boolean | Prisma.Equipment$EmployeeEquipmentLogsArgs<ExtArgs>
  createdBy?: boolean | Prisma.Equipment$createdByArgs<ExtArgs>
  EquipmentHauled?: boolean | Prisma.Equipment$EquipmentHauledArgs<ExtArgs>
  equipmentVehicleInfo?: boolean | Prisma.Equipment$equipmentVehicleInfoArgs<ExtArgs>
  Maintenances?: boolean | Prisma.Equipment$MaintenancesArgs<ExtArgs>
  TascoLogs?: boolean | Prisma.Equipment$TascoLogsArgs<ExtArgs>
  HauledInLogs?: boolean | Prisma.Equipment$HauledInLogsArgs<ExtArgs>
  UsedAsTruck?: boolean | Prisma.Equipment$UsedAsTruckArgs<ExtArgs>
  UsedAsTrailer?: boolean | Prisma.Equipment$UsedAsTrailerArgs<ExtArgs>
  DocumentTags?: boolean | Prisma.Equipment$DocumentTagsArgs<ExtArgs>
  _count?: boolean | Prisma.EquipmentCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["equipment"]>

export type EquipmentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  qrId?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  equipmentTag?: boolean
  state?: boolean
  isDisabledByAdmin?: boolean
  approvalStatus?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  overWeight?: boolean
  currentWeight?: boolean
  createdById?: boolean
  createdVia?: boolean
  createdBy?: boolean | Prisma.Equipment$createdByArgs<ExtArgs>
}, ExtArgs["result"]["equipment"]>

export type EquipmentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  qrId?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  equipmentTag?: boolean
  state?: boolean
  isDisabledByAdmin?: boolean
  approvalStatus?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  overWeight?: boolean
  currentWeight?: boolean
  createdById?: boolean
  createdVia?: boolean
  createdBy?: boolean | Prisma.Equipment$createdByArgs<ExtArgs>
}, ExtArgs["result"]["equipment"]>

export type EquipmentSelectScalar = {
  id?: boolean
  qrId?: boolean
  name?: boolean
  description?: boolean
  creationReason?: boolean
  equipmentTag?: boolean
  state?: boolean
  isDisabledByAdmin?: boolean
  approvalStatus?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  overWeight?: boolean
  currentWeight?: boolean
  createdById?: boolean
  createdVia?: boolean
}

export type EquipmentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "qrId" | "name" | "description" | "creationReason" | "equipmentTag" | "state" | "isDisabledByAdmin" | "approvalStatus" | "createdAt" | "updatedAt" | "overWeight" | "currentWeight" | "createdById" | "createdVia", ExtArgs["result"]["equipment"]>
export type EquipmentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EmployeeEquipmentLogs?: boolean | Prisma.Equipment$EmployeeEquipmentLogsArgs<ExtArgs>
  createdBy?: boolean | Prisma.Equipment$createdByArgs<ExtArgs>
  EquipmentHauled?: boolean | Prisma.Equipment$EquipmentHauledArgs<ExtArgs>
  equipmentVehicleInfo?: boolean | Prisma.Equipment$equipmentVehicleInfoArgs<ExtArgs>
  Maintenances?: boolean | Prisma.Equipment$MaintenancesArgs<ExtArgs>
  TascoLogs?: boolean | Prisma.Equipment$TascoLogsArgs<ExtArgs>
  HauledInLogs?: boolean | Prisma.Equipment$HauledInLogsArgs<ExtArgs>
  UsedAsTruck?: boolean | Prisma.Equipment$UsedAsTruckArgs<ExtArgs>
  UsedAsTrailer?: boolean | Prisma.Equipment$UsedAsTrailerArgs<ExtArgs>
  DocumentTags?: boolean | Prisma.Equipment$DocumentTagsArgs<ExtArgs>
  _count?: boolean | Prisma.EquipmentCountOutputTypeDefaultArgs<ExtArgs>
}
export type EquipmentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  createdBy?: boolean | Prisma.Equipment$createdByArgs<ExtArgs>
}
export type EquipmentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  createdBy?: boolean | Prisma.Equipment$createdByArgs<ExtArgs>
}

export type $EquipmentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Equipment"
  objects: {
    EmployeeEquipmentLogs: Prisma.$EmployeeEquipmentLogPayload<ExtArgs>[]
    createdBy: Prisma.$UserPayload<ExtArgs> | null
    EquipmentHauled: Prisma.$EquipmentHauledPayload<ExtArgs>[]
    equipmentVehicleInfo: Prisma.$EquipmentVehicleInfoPayload<ExtArgs> | null
    Maintenances: Prisma.$MaintenancePayload<ExtArgs>[]
    TascoLogs: Prisma.$TascoLogPayload<ExtArgs>[]
    HauledInLogs: Prisma.$TruckingLogPayload<ExtArgs>[]
    UsedAsTruck: Prisma.$TruckingLogPayload<ExtArgs>[]
    UsedAsTrailer: Prisma.$TruckingLogPayload<ExtArgs>[]
    DocumentTags: Prisma.$DocumentTagPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    qrId: string
    name: string
    description: string
    creationReason: string | null
    equipmentTag: $Enums.EquipmentTags
    state: $Enums.EquipmentState
    isDisabledByAdmin: boolean
    approvalStatus: $Enums.ApprovalStatus
    createdAt: Date
    updatedAt: Date
    overWeight: boolean | null
    currentWeight: number | null
    createdById: string | null
    createdVia: $Enums.CreatedVia
  }, ExtArgs["result"]["equipment"]>
  composites: {}
}

export type EquipmentGetPayload<S extends boolean | null | undefined | EquipmentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$EquipmentPayload, S>

export type EquipmentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<EquipmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: EquipmentCountAggregateInputType | true
  }

export interface EquipmentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Equipment'], meta: { name: 'Equipment' } }
  /**
   * Find zero or one Equipment that matches the filter.
   * @param {EquipmentFindUniqueArgs} args - Arguments to find a Equipment
   * @example
   * // Get one Equipment
   * const equipment = await prisma.equipment.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EquipmentFindUniqueArgs>(args: Prisma.SelectSubset<T, EquipmentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Equipment that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EquipmentFindUniqueOrThrowArgs} args - Arguments to find a Equipment
   * @example
   * // Get one Equipment
   * const equipment = await prisma.equipment.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EquipmentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, EquipmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Equipment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentFindFirstArgs} args - Arguments to find a Equipment
   * @example
   * // Get one Equipment
   * const equipment = await prisma.equipment.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EquipmentFindFirstArgs>(args?: Prisma.SelectSubset<T, EquipmentFindFirstArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Equipment that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentFindFirstOrThrowArgs} args - Arguments to find a Equipment
   * @example
   * // Get one Equipment
   * const equipment = await prisma.equipment.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EquipmentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, EquipmentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Equipment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Equipment
   * const equipment = await prisma.equipment.findMany()
   * 
   * // Get first 10 Equipment
   * const equipment = await prisma.equipment.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const equipmentWithIdOnly = await prisma.equipment.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends EquipmentFindManyArgs>(args?: Prisma.SelectSubset<T, EquipmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Equipment.
   * @param {EquipmentCreateArgs} args - Arguments to create a Equipment.
   * @example
   * // Create one Equipment
   * const Equipment = await prisma.equipment.create({
   *   data: {
   *     // ... data to create a Equipment
   *   }
   * })
   * 
   */
  create<T extends EquipmentCreateArgs>(args: Prisma.SelectSubset<T, EquipmentCreateArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Equipment.
   * @param {EquipmentCreateManyArgs} args - Arguments to create many Equipment.
   * @example
   * // Create many Equipment
   * const equipment = await prisma.equipment.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends EquipmentCreateManyArgs>(args?: Prisma.SelectSubset<T, EquipmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Equipment and returns the data saved in the database.
   * @param {EquipmentCreateManyAndReturnArgs} args - Arguments to create many Equipment.
   * @example
   * // Create many Equipment
   * const equipment = await prisma.equipment.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Equipment and only return the `id`
   * const equipmentWithIdOnly = await prisma.equipment.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends EquipmentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, EquipmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Equipment.
   * @param {EquipmentDeleteArgs} args - Arguments to delete one Equipment.
   * @example
   * // Delete one Equipment
   * const Equipment = await prisma.equipment.delete({
   *   where: {
   *     // ... filter to delete one Equipment
   *   }
   * })
   * 
   */
  delete<T extends EquipmentDeleteArgs>(args: Prisma.SelectSubset<T, EquipmentDeleteArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Equipment.
   * @param {EquipmentUpdateArgs} args - Arguments to update one Equipment.
   * @example
   * // Update one Equipment
   * const equipment = await prisma.equipment.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends EquipmentUpdateArgs>(args: Prisma.SelectSubset<T, EquipmentUpdateArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Equipment.
   * @param {EquipmentDeleteManyArgs} args - Arguments to filter Equipment to delete.
   * @example
   * // Delete a few Equipment
   * const { count } = await prisma.equipment.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends EquipmentDeleteManyArgs>(args?: Prisma.SelectSubset<T, EquipmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Equipment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Equipment
   * const equipment = await prisma.equipment.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends EquipmentUpdateManyArgs>(args: Prisma.SelectSubset<T, EquipmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Equipment and returns the data updated in the database.
   * @param {EquipmentUpdateManyAndReturnArgs} args - Arguments to update many Equipment.
   * @example
   * // Update many Equipment
   * const equipment = await prisma.equipment.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Equipment and only return the `id`
   * const equipmentWithIdOnly = await prisma.equipment.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends EquipmentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, EquipmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Equipment.
   * @param {EquipmentUpsertArgs} args - Arguments to update or create a Equipment.
   * @example
   * // Update or create a Equipment
   * const equipment = await prisma.equipment.upsert({
   *   create: {
   *     // ... data to create a Equipment
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Equipment we want to update
   *   }
   * })
   */
  upsert<T extends EquipmentUpsertArgs>(args: Prisma.SelectSubset<T, EquipmentUpsertArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Equipment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentCountArgs} args - Arguments to filter Equipment to count.
   * @example
   * // Count the number of Equipment
   * const count = await prisma.equipment.count({
   *   where: {
   *     // ... the filter for the Equipment we want to count
   *   }
   * })
  **/
  count<T extends EquipmentCountArgs>(
    args?: Prisma.Subset<T, EquipmentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EquipmentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Equipment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends EquipmentAggregateArgs>(args: Prisma.Subset<T, EquipmentAggregateArgs>): Prisma.PrismaPromise<GetEquipmentAggregateType<T>>

  /**
   * Group by Equipment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipmentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends EquipmentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EquipmentGroupByArgs['orderBy'] }
      : { orderBy?: EquipmentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, EquipmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Equipment model
 */
readonly fields: EquipmentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Equipment.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EquipmentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  EmployeeEquipmentLogs<T extends Prisma.Equipment$EmployeeEquipmentLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$EmployeeEquipmentLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EmployeeEquipmentLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  createdBy<T extends Prisma.Equipment$createdByArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$createdByArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  EquipmentHauled<T extends Prisma.Equipment$EquipmentHauledArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$EquipmentHauledArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  equipmentVehicleInfo<T extends Prisma.Equipment$equipmentVehicleInfoArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$equipmentVehicleInfoArgs<ExtArgs>>): Prisma.Prisma__EquipmentVehicleInfoClient<runtime.Types.Result.GetResult<Prisma.$EquipmentVehicleInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Maintenances<T extends Prisma.Equipment$MaintenancesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$MaintenancesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  TascoLogs<T extends Prisma.Equipment$TascoLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$TascoLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TascoLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  HauledInLogs<T extends Prisma.Equipment$HauledInLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$HauledInLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  UsedAsTruck<T extends Prisma.Equipment$UsedAsTruckArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$UsedAsTruckArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  UsedAsTrailer<T extends Prisma.Equipment$UsedAsTrailerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$UsedAsTrailerArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  DocumentTags<T extends Prisma.Equipment$DocumentTagsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipment$DocumentTagsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DocumentTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Equipment model
 */
export interface EquipmentFieldRefs {
  readonly id: Prisma.FieldRef<"Equipment", 'String'>
  readonly qrId: Prisma.FieldRef<"Equipment", 'String'>
  readonly name: Prisma.FieldRef<"Equipment", 'String'>
  readonly description: Prisma.FieldRef<"Equipment", 'String'>
  readonly creationReason: Prisma.FieldRef<"Equipment", 'String'>
  readonly equipmentTag: Prisma.FieldRef<"Equipment", 'EquipmentTags'>
  readonly state: Prisma.FieldRef<"Equipment", 'EquipmentState'>
  readonly isDisabledByAdmin: Prisma.FieldRef<"Equipment", 'Boolean'>
  readonly approvalStatus: Prisma.FieldRef<"Equipment", 'ApprovalStatus'>
  readonly createdAt: Prisma.FieldRef<"Equipment", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Equipment", 'DateTime'>
  readonly overWeight: Prisma.FieldRef<"Equipment", 'Boolean'>
  readonly currentWeight: Prisma.FieldRef<"Equipment", 'Float'>
  readonly createdById: Prisma.FieldRef<"Equipment", 'String'>
  readonly createdVia: Prisma.FieldRef<"Equipment", 'CreatedVia'>
}
    

// Custom InputTypes
/**
 * Equipment findUnique
 */
export type EquipmentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * Filter, which Equipment to fetch.
   */
  where: Prisma.EquipmentWhereUniqueInput
}

/**
 * Equipment findUniqueOrThrow
 */
export type EquipmentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * Filter, which Equipment to fetch.
   */
  where: Prisma.EquipmentWhereUniqueInput
}

/**
 * Equipment findFirst
 */
export type EquipmentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * Filter, which Equipment to fetch.
   */
  where?: Prisma.EquipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipment to fetch.
   */
  orderBy?: Prisma.EquipmentOrderByWithRelationInput | Prisma.EquipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Equipment.
   */
  cursor?: Prisma.EquipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipment from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipment.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Equipment.
   */
  distinct?: Prisma.EquipmentScalarFieldEnum | Prisma.EquipmentScalarFieldEnum[]
}

/**
 * Equipment findFirstOrThrow
 */
export type EquipmentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * Filter, which Equipment to fetch.
   */
  where?: Prisma.EquipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipment to fetch.
   */
  orderBy?: Prisma.EquipmentOrderByWithRelationInput | Prisma.EquipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Equipment.
   */
  cursor?: Prisma.EquipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipment from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipment.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Equipment.
   */
  distinct?: Prisma.EquipmentScalarFieldEnum | Prisma.EquipmentScalarFieldEnum[]
}

/**
 * Equipment findMany
 */
export type EquipmentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * Filter, which Equipment to fetch.
   */
  where?: Prisma.EquipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipment to fetch.
   */
  orderBy?: Prisma.EquipmentOrderByWithRelationInput | Prisma.EquipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Equipment.
   */
  cursor?: Prisma.EquipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipment from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipment.
   */
  skip?: number
  distinct?: Prisma.EquipmentScalarFieldEnum | Prisma.EquipmentScalarFieldEnum[]
}

/**
 * Equipment create
 */
export type EquipmentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * The data needed to create a Equipment.
   */
  data: Prisma.XOR<Prisma.EquipmentCreateInput, Prisma.EquipmentUncheckedCreateInput>
}

/**
 * Equipment createMany
 */
export type EquipmentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Equipment.
   */
  data: Prisma.EquipmentCreateManyInput | Prisma.EquipmentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Equipment createManyAndReturn
 */
export type EquipmentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * The data used to create many Equipment.
   */
  data: Prisma.EquipmentCreateManyInput | Prisma.EquipmentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Equipment update
 */
export type EquipmentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * The data needed to update a Equipment.
   */
  data: Prisma.XOR<Prisma.EquipmentUpdateInput, Prisma.EquipmentUncheckedUpdateInput>
  /**
   * Choose, which Equipment to update.
   */
  where: Prisma.EquipmentWhereUniqueInput
}

/**
 * Equipment updateMany
 */
export type EquipmentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Equipment.
   */
  data: Prisma.XOR<Prisma.EquipmentUpdateManyMutationInput, Prisma.EquipmentUncheckedUpdateManyInput>
  /**
   * Filter which Equipment to update
   */
  where?: Prisma.EquipmentWhereInput
  /**
   * Limit how many Equipment to update.
   */
  limit?: number
}

/**
 * Equipment updateManyAndReturn
 */
export type EquipmentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * The data used to update Equipment.
   */
  data: Prisma.XOR<Prisma.EquipmentUpdateManyMutationInput, Prisma.EquipmentUncheckedUpdateManyInput>
  /**
   * Filter which Equipment to update
   */
  where?: Prisma.EquipmentWhereInput
  /**
   * Limit how many Equipment to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Equipment upsert
 */
export type EquipmentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * The filter to search for the Equipment to update in case it exists.
   */
  where: Prisma.EquipmentWhereUniqueInput
  /**
   * In case the Equipment found by the `where` argument doesn't exist, create a new Equipment with this data.
   */
  create: Prisma.XOR<Prisma.EquipmentCreateInput, Prisma.EquipmentUncheckedCreateInput>
  /**
   * In case the Equipment was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EquipmentUpdateInput, Prisma.EquipmentUncheckedUpdateInput>
}

/**
 * Equipment delete
 */
export type EquipmentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  /**
   * Filter which Equipment to delete.
   */
  where: Prisma.EquipmentWhereUniqueInput
}

/**
 * Equipment deleteMany
 */
export type EquipmentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Equipment to delete
   */
  where?: Prisma.EquipmentWhereInput
  /**
   * Limit how many Equipment to delete.
   */
  limit?: number
}

/**
 * Equipment.EmployeeEquipmentLogs
 */
export type Equipment$EmployeeEquipmentLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EmployeeEquipmentLog
   */
  select?: Prisma.EmployeeEquipmentLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EmployeeEquipmentLog
   */
  omit?: Prisma.EmployeeEquipmentLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmployeeEquipmentLogInclude<ExtArgs> | null
  where?: Prisma.EmployeeEquipmentLogWhereInput
  orderBy?: Prisma.EmployeeEquipmentLogOrderByWithRelationInput | Prisma.EmployeeEquipmentLogOrderByWithRelationInput[]
  cursor?: Prisma.EmployeeEquipmentLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EmployeeEquipmentLogScalarFieldEnum | Prisma.EmployeeEquipmentLogScalarFieldEnum[]
}

/**
 * Equipment.createdBy
 */
export type Equipment$createdByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * Equipment.EquipmentHauled
 */
export type Equipment$EquipmentHauledArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  where?: Prisma.EquipmentHauledWhereInput
  orderBy?: Prisma.EquipmentHauledOrderByWithRelationInput | Prisma.EquipmentHauledOrderByWithRelationInput[]
  cursor?: Prisma.EquipmentHauledWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EquipmentHauledScalarFieldEnum | Prisma.EquipmentHauledScalarFieldEnum[]
}

/**
 * Equipment.equipmentVehicleInfo
 */
export type Equipment$equipmentVehicleInfoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentVehicleInfo
   */
  select?: Prisma.EquipmentVehicleInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentVehicleInfo
   */
  omit?: Prisma.EquipmentVehicleInfoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentVehicleInfoInclude<ExtArgs> | null
  where?: Prisma.EquipmentVehicleInfoWhereInput
}

/**
 * Equipment.Maintenances
 */
export type Equipment$MaintenancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  where?: Prisma.MaintenanceWhereInput
  orderBy?: Prisma.MaintenanceOrderByWithRelationInput | Prisma.MaintenanceOrderByWithRelationInput[]
  cursor?: Prisma.MaintenanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MaintenanceScalarFieldEnum | Prisma.MaintenanceScalarFieldEnum[]
}

/**
 * Equipment.TascoLogs
 */
export type Equipment$TascoLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TascoLog
   */
  select?: Prisma.TascoLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TascoLog
   */
  omit?: Prisma.TascoLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TascoLogInclude<ExtArgs> | null
  where?: Prisma.TascoLogWhereInput
  orderBy?: Prisma.TascoLogOrderByWithRelationInput | Prisma.TascoLogOrderByWithRelationInput[]
  cursor?: Prisma.TascoLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TascoLogScalarFieldEnum | Prisma.TascoLogScalarFieldEnum[]
}

/**
 * Equipment.HauledInLogs
 */
export type Equipment$HauledInLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  where?: Prisma.TruckingLogWhereInput
  orderBy?: Prisma.TruckingLogOrderByWithRelationInput | Prisma.TruckingLogOrderByWithRelationInput[]
  cursor?: Prisma.TruckingLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TruckingLogScalarFieldEnum | Prisma.TruckingLogScalarFieldEnum[]
}

/**
 * Equipment.UsedAsTruck
 */
export type Equipment$UsedAsTruckArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  where?: Prisma.TruckingLogWhereInput
  orderBy?: Prisma.TruckingLogOrderByWithRelationInput | Prisma.TruckingLogOrderByWithRelationInput[]
  cursor?: Prisma.TruckingLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TruckingLogScalarFieldEnum | Prisma.TruckingLogScalarFieldEnum[]
}

/**
 * Equipment.UsedAsTrailer
 */
export type Equipment$UsedAsTrailerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  where?: Prisma.TruckingLogWhereInput
  orderBy?: Prisma.TruckingLogOrderByWithRelationInput | Prisma.TruckingLogOrderByWithRelationInput[]
  cursor?: Prisma.TruckingLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TruckingLogScalarFieldEnum | Prisma.TruckingLogScalarFieldEnum[]
}

/**
 * Equipment.DocumentTags
 */
export type Equipment$DocumentTagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DocumentTag
   */
  select?: Prisma.DocumentTagSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DocumentTag
   */
  omit?: Prisma.DocumentTagOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DocumentTagInclude<ExtArgs> | null
  where?: Prisma.DocumentTagWhereInput
  orderBy?: Prisma.DocumentTagOrderByWithRelationInput | Prisma.DocumentTagOrderByWithRelationInput[]
  cursor?: Prisma.DocumentTagWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DocumentTagScalarFieldEnum | Prisma.DocumentTagScalarFieldEnum[]
}

/**
 * Equipment without action
 */
export type EquipmentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
}
