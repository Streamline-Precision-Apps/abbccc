
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `TruckingLog` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TruckingLog
 * 
 */
export type TruckingLogModel = runtime.Types.Result.DefaultSelection<Prisma.$TruckingLogPayload>

export type AggregateTruckingLog = {
  _count: TruckingLogCountAggregateOutputType | null
  _avg: TruckingLogAvgAggregateOutputType | null
  _sum: TruckingLogSumAggregateOutputType | null
  _min: TruckingLogMinAggregateOutputType | null
  _max: TruckingLogMaxAggregateOutputType | null
}

export type TruckingLogAvgAggregateOutputType = {
  startingMileage: number | null
  endingMileage: number | null
}

export type TruckingLogSumAggregateOutputType = {
  startingMileage: number | null
  endingMileage: number | null
}

export type TruckingLogMinAggregateOutputType = {
  id: string | null
  timeSheetId: string | null
  laborType: string | null
  taskName: string | null
  equipmentId: string | null
  trailerNumber: string | null
  truckNumber: string | null
  startingMileage: number | null
  endingMileage: number | null
  truckLaborLogId: string | null
}

export type TruckingLogMaxAggregateOutputType = {
  id: string | null
  timeSheetId: string | null
  laborType: string | null
  taskName: string | null
  equipmentId: string | null
  trailerNumber: string | null
  truckNumber: string | null
  startingMileage: number | null
  endingMileage: number | null
  truckLaborLogId: string | null
}

export type TruckingLogCountAggregateOutputType = {
  id: number
  timeSheetId: number
  laborType: number
  taskName: number
  equipmentId: number
  trailerNumber: number
  truckNumber: number
  startingMileage: number
  endingMileage: number
  truckLaborLogId: number
  _all: number
}


export type TruckingLogAvgAggregateInputType = {
  startingMileage?: true
  endingMileage?: true
}

export type TruckingLogSumAggregateInputType = {
  startingMileage?: true
  endingMileage?: true
}

export type TruckingLogMinAggregateInputType = {
  id?: true
  timeSheetId?: true
  laborType?: true
  taskName?: true
  equipmentId?: true
  trailerNumber?: true
  truckNumber?: true
  startingMileage?: true
  endingMileage?: true
  truckLaborLogId?: true
}

export type TruckingLogMaxAggregateInputType = {
  id?: true
  timeSheetId?: true
  laborType?: true
  taskName?: true
  equipmentId?: true
  trailerNumber?: true
  truckNumber?: true
  startingMileage?: true
  endingMileage?: true
  truckLaborLogId?: true
}

export type TruckingLogCountAggregateInputType = {
  id?: true
  timeSheetId?: true
  laborType?: true
  taskName?: true
  equipmentId?: true
  trailerNumber?: true
  truckNumber?: true
  startingMileage?: true
  endingMileage?: true
  truckLaborLogId?: true
  _all?: true
}

export type TruckingLogAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TruckingLog to aggregate.
   */
  where?: Prisma.TruckingLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckingLogs to fetch.
   */
  orderBy?: Prisma.TruckingLogOrderByWithRelationInput | Prisma.TruckingLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TruckingLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckingLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckingLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TruckingLogs
  **/
  _count?: true | TruckingLogCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TruckingLogAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TruckingLogSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TruckingLogMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TruckingLogMaxAggregateInputType
}

export type GetTruckingLogAggregateType<T extends TruckingLogAggregateArgs> = {
      [P in keyof T & keyof AggregateTruckingLog]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTruckingLog[P]>
    : Prisma.GetScalarType<T[P], AggregateTruckingLog[P]>
}




export type TruckingLogGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TruckingLogWhereInput
  orderBy?: Prisma.TruckingLogOrderByWithAggregationInput | Prisma.TruckingLogOrderByWithAggregationInput[]
  by: Prisma.TruckingLogScalarFieldEnum[] | Prisma.TruckingLogScalarFieldEnum
  having?: Prisma.TruckingLogScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TruckingLogCountAggregateInputType | true
  _avg?: TruckingLogAvgAggregateInputType
  _sum?: TruckingLogSumAggregateInputType
  _min?: TruckingLogMinAggregateInputType
  _max?: TruckingLogMaxAggregateInputType
}

export type TruckingLogGroupByOutputType = {
  id: string
  timeSheetId: string
  laborType: string
  taskName: string | null
  equipmentId: string | null
  trailerNumber: string | null
  truckNumber: string | null
  startingMileage: number | null
  endingMileage: number | null
  truckLaborLogId: string | null
  _count: TruckingLogCountAggregateOutputType | null
  _avg: TruckingLogAvgAggregateOutputType | null
  _sum: TruckingLogSumAggregateOutputType | null
  _min: TruckingLogMinAggregateOutputType | null
  _max: TruckingLogMaxAggregateOutputType | null
}

type GetTruckingLogGroupByPayload<T extends TruckingLogGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TruckingLogGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TruckingLogGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TruckingLogGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TruckingLogGroupByOutputType[P]>
      }
    >
  >



export type TruckingLogWhereInput = {
  AND?: Prisma.TruckingLogWhereInput | Prisma.TruckingLogWhereInput[]
  OR?: Prisma.TruckingLogWhereInput[]
  NOT?: Prisma.TruckingLogWhereInput | Prisma.TruckingLogWhereInput[]
  id?: Prisma.StringFilter<"TruckingLog"> | string
  timeSheetId?: Prisma.StringFilter<"TruckingLog"> | string
  laborType?: Prisma.StringFilter<"TruckingLog"> | string
  taskName?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  equipmentId?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  trailerNumber?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  truckNumber?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  startingMileage?: Prisma.IntNullableFilter<"TruckingLog"> | number | null
  endingMileage?: Prisma.IntNullableFilter<"TruckingLog"> | number | null
  truckLaborLogId?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  EquipmentHauled?: Prisma.EquipmentHauledListRelationFilter
  Materials?: Prisma.MaterialListRelationFilter
  RefuelLogs?: Prisma.RefuelLogListRelationFilter
  StateMileages?: Prisma.StateMileageListRelationFilter
  TruckingLaborLogs?: Prisma.TruckLaborLogsListRelationFilter
  Equipment?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  Truck?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  Trailer?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  TimeSheet?: Prisma.XOR<Prisma.TimeSheetScalarRelationFilter, Prisma.TimeSheetWhereInput>
}

export type TruckingLogOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  timeSheetId?: Prisma.SortOrder
  laborType?: Prisma.SortOrder
  taskName?: Prisma.SortOrderInput | Prisma.SortOrder
  equipmentId?: Prisma.SortOrderInput | Prisma.SortOrder
  trailerNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  truckNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  startingMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  endingMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  truckLaborLogId?: Prisma.SortOrderInput | Prisma.SortOrder
  EquipmentHauled?: Prisma.EquipmentHauledOrderByRelationAggregateInput
  Materials?: Prisma.MaterialOrderByRelationAggregateInput
  RefuelLogs?: Prisma.RefuelLogOrderByRelationAggregateInput
  StateMileages?: Prisma.StateMileageOrderByRelationAggregateInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsOrderByRelationAggregateInput
  Equipment?: Prisma.EquipmentOrderByWithRelationInput
  Truck?: Prisma.EquipmentOrderByWithRelationInput
  Trailer?: Prisma.EquipmentOrderByWithRelationInput
  TimeSheet?: Prisma.TimeSheetOrderByWithRelationInput
}

export type TruckingLogWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.TruckingLogWhereInput | Prisma.TruckingLogWhereInput[]
  OR?: Prisma.TruckingLogWhereInput[]
  NOT?: Prisma.TruckingLogWhereInput | Prisma.TruckingLogWhereInput[]
  timeSheetId?: Prisma.StringFilter<"TruckingLog"> | string
  laborType?: Prisma.StringFilter<"TruckingLog"> | string
  taskName?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  equipmentId?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  trailerNumber?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  truckNumber?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  startingMileage?: Prisma.IntNullableFilter<"TruckingLog"> | number | null
  endingMileage?: Prisma.IntNullableFilter<"TruckingLog"> | number | null
  truckLaborLogId?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  EquipmentHauled?: Prisma.EquipmentHauledListRelationFilter
  Materials?: Prisma.MaterialListRelationFilter
  RefuelLogs?: Prisma.RefuelLogListRelationFilter
  StateMileages?: Prisma.StateMileageListRelationFilter
  TruckingLaborLogs?: Prisma.TruckLaborLogsListRelationFilter
  Equipment?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  Truck?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  Trailer?: Prisma.XOR<Prisma.EquipmentNullableScalarRelationFilter, Prisma.EquipmentWhereInput> | null
  TimeSheet?: Prisma.XOR<Prisma.TimeSheetScalarRelationFilter, Prisma.TimeSheetWhereInput>
}, "id">

export type TruckingLogOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  timeSheetId?: Prisma.SortOrder
  laborType?: Prisma.SortOrder
  taskName?: Prisma.SortOrderInput | Prisma.SortOrder
  equipmentId?: Prisma.SortOrderInput | Prisma.SortOrder
  trailerNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  truckNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  startingMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  endingMileage?: Prisma.SortOrderInput | Prisma.SortOrder
  truckLaborLogId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.TruckingLogCountOrderByAggregateInput
  _avg?: Prisma.TruckingLogAvgOrderByAggregateInput
  _max?: Prisma.TruckingLogMaxOrderByAggregateInput
  _min?: Prisma.TruckingLogMinOrderByAggregateInput
  _sum?: Prisma.TruckingLogSumOrderByAggregateInput
}

export type TruckingLogScalarWhereWithAggregatesInput = {
  AND?: Prisma.TruckingLogScalarWhereWithAggregatesInput | Prisma.TruckingLogScalarWhereWithAggregatesInput[]
  OR?: Prisma.TruckingLogScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TruckingLogScalarWhereWithAggregatesInput | Prisma.TruckingLogScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"TruckingLog"> | string
  timeSheetId?: Prisma.StringWithAggregatesFilter<"TruckingLog"> | string
  laborType?: Prisma.StringWithAggregatesFilter<"TruckingLog"> | string
  taskName?: Prisma.StringNullableWithAggregatesFilter<"TruckingLog"> | string | null
  equipmentId?: Prisma.StringNullableWithAggregatesFilter<"TruckingLog"> | string | null
  trailerNumber?: Prisma.StringNullableWithAggregatesFilter<"TruckingLog"> | string | null
  truckNumber?: Prisma.StringNullableWithAggregatesFilter<"TruckingLog"> | string | null
  startingMileage?: Prisma.IntNullableWithAggregatesFilter<"TruckingLog"> | number | null
  endingMileage?: Prisma.IntNullableWithAggregatesFilter<"TruckingLog"> | number | null
  truckLaborLogId?: Prisma.StringNullableWithAggregatesFilter<"TruckingLog"> | string | null
}

export type TruckingLogCreateInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogCreateManyInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
}

export type TruckingLogUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TruckingLogUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TruckingLogListRelationFilter = {
  every?: Prisma.TruckingLogWhereInput
  some?: Prisma.TruckingLogWhereInput
  none?: Prisma.TruckingLogWhereInput
}

export type TruckingLogOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TruckingLogCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  timeSheetId?: Prisma.SortOrder
  laborType?: Prisma.SortOrder
  taskName?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  trailerNumber?: Prisma.SortOrder
  truckNumber?: Prisma.SortOrder
  startingMileage?: Prisma.SortOrder
  endingMileage?: Prisma.SortOrder
  truckLaborLogId?: Prisma.SortOrder
}

export type TruckingLogAvgOrderByAggregateInput = {
  startingMileage?: Prisma.SortOrder
  endingMileage?: Prisma.SortOrder
}

export type TruckingLogMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  timeSheetId?: Prisma.SortOrder
  laborType?: Prisma.SortOrder
  taskName?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  trailerNumber?: Prisma.SortOrder
  truckNumber?: Prisma.SortOrder
  startingMileage?: Prisma.SortOrder
  endingMileage?: Prisma.SortOrder
  truckLaborLogId?: Prisma.SortOrder
}

export type TruckingLogMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  timeSheetId?: Prisma.SortOrder
  laborType?: Prisma.SortOrder
  taskName?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  trailerNumber?: Prisma.SortOrder
  truckNumber?: Prisma.SortOrder
  startingMileage?: Prisma.SortOrder
  endingMileage?: Prisma.SortOrder
  truckLaborLogId?: Prisma.SortOrder
}

export type TruckingLogSumOrderByAggregateInput = {
  startingMileage?: Prisma.SortOrder
  endingMileage?: Prisma.SortOrder
}

export type TruckingLogNullableScalarRelationFilter = {
  is?: Prisma.TruckingLogWhereInput | null
  isNot?: Prisma.TruckingLogWhereInput | null
}

export type TruckingLogScalarRelationFilter = {
  is?: Prisma.TruckingLogWhereInput
  isNot?: Prisma.TruckingLogWhereInput
}

export type TruckingLogCreateNestedManyWithoutEquipmentInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput> | Prisma.TruckingLogCreateWithoutEquipmentInput[] | Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput | Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput[]
  createMany?: Prisma.TruckingLogCreateManyEquipmentInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogCreateNestedManyWithoutTruckInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckInput, Prisma.TruckingLogUncheckedCreateWithoutTruckInput> | Prisma.TruckingLogCreateWithoutTruckInput[] | Prisma.TruckingLogUncheckedCreateWithoutTruckInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTruckInput | Prisma.TruckingLogCreateOrConnectWithoutTruckInput[]
  createMany?: Prisma.TruckingLogCreateManyTruckInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogCreateNestedManyWithoutTrailerInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTrailerInput, Prisma.TruckingLogUncheckedCreateWithoutTrailerInput> | Prisma.TruckingLogCreateWithoutTrailerInput[] | Prisma.TruckingLogUncheckedCreateWithoutTrailerInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTrailerInput | Prisma.TruckingLogCreateOrConnectWithoutTrailerInput[]
  createMany?: Prisma.TruckingLogCreateManyTrailerInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogUncheckedCreateNestedManyWithoutEquipmentInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput> | Prisma.TruckingLogCreateWithoutEquipmentInput[] | Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput | Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput[]
  createMany?: Prisma.TruckingLogCreateManyEquipmentInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogUncheckedCreateNestedManyWithoutTruckInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckInput, Prisma.TruckingLogUncheckedCreateWithoutTruckInput> | Prisma.TruckingLogCreateWithoutTruckInput[] | Prisma.TruckingLogUncheckedCreateWithoutTruckInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTruckInput | Prisma.TruckingLogCreateOrConnectWithoutTruckInput[]
  createMany?: Prisma.TruckingLogCreateManyTruckInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogUncheckedCreateNestedManyWithoutTrailerInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTrailerInput, Prisma.TruckingLogUncheckedCreateWithoutTrailerInput> | Prisma.TruckingLogCreateWithoutTrailerInput[] | Prisma.TruckingLogUncheckedCreateWithoutTrailerInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTrailerInput | Prisma.TruckingLogCreateOrConnectWithoutTrailerInput[]
  createMany?: Prisma.TruckingLogCreateManyTrailerInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogUpdateManyWithoutEquipmentNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput> | Prisma.TruckingLogCreateWithoutEquipmentInput[] | Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput | Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutEquipmentInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutEquipmentInput[]
  createMany?: Prisma.TruckingLogCreateManyEquipmentInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutEquipmentInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutEquipmentInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutEquipmentInput | Prisma.TruckingLogUpdateManyWithWhereWithoutEquipmentInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogUpdateManyWithoutTruckNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckInput, Prisma.TruckingLogUncheckedCreateWithoutTruckInput> | Prisma.TruckingLogCreateWithoutTruckInput[] | Prisma.TruckingLogUncheckedCreateWithoutTruckInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTruckInput | Prisma.TruckingLogCreateOrConnectWithoutTruckInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutTruckInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutTruckInput[]
  createMany?: Prisma.TruckingLogCreateManyTruckInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutTruckInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutTruckInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutTruckInput | Prisma.TruckingLogUpdateManyWithWhereWithoutTruckInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogUpdateManyWithoutTrailerNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTrailerInput, Prisma.TruckingLogUncheckedCreateWithoutTrailerInput> | Prisma.TruckingLogCreateWithoutTrailerInput[] | Prisma.TruckingLogUncheckedCreateWithoutTrailerInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTrailerInput | Prisma.TruckingLogCreateOrConnectWithoutTrailerInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutTrailerInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutTrailerInput[]
  createMany?: Prisma.TruckingLogCreateManyTrailerInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutTrailerInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutTrailerInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutTrailerInput | Prisma.TruckingLogUpdateManyWithWhereWithoutTrailerInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogUncheckedUpdateManyWithoutEquipmentNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput> | Prisma.TruckingLogCreateWithoutEquipmentInput[] | Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput | Prisma.TruckingLogCreateOrConnectWithoutEquipmentInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutEquipmentInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutEquipmentInput[]
  createMany?: Prisma.TruckingLogCreateManyEquipmentInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutEquipmentInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutEquipmentInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutEquipmentInput | Prisma.TruckingLogUpdateManyWithWhereWithoutEquipmentInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogUncheckedUpdateManyWithoutTruckNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckInput, Prisma.TruckingLogUncheckedCreateWithoutTruckInput> | Prisma.TruckingLogCreateWithoutTruckInput[] | Prisma.TruckingLogUncheckedCreateWithoutTruckInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTruckInput | Prisma.TruckingLogCreateOrConnectWithoutTruckInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutTruckInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutTruckInput[]
  createMany?: Prisma.TruckingLogCreateManyTruckInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutTruckInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutTruckInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutTruckInput | Prisma.TruckingLogUpdateManyWithWhereWithoutTruckInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogUncheckedUpdateManyWithoutTrailerNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTrailerInput, Prisma.TruckingLogUncheckedCreateWithoutTrailerInput> | Prisma.TruckingLogCreateWithoutTrailerInput[] | Prisma.TruckingLogUncheckedCreateWithoutTrailerInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTrailerInput | Prisma.TruckingLogCreateOrConnectWithoutTrailerInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutTrailerInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutTrailerInput[]
  createMany?: Prisma.TruckingLogCreateManyTrailerInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutTrailerInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutTrailerInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutTrailerInput | Prisma.TruckingLogUpdateManyWithWhereWithoutTrailerInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogCreateNestedManyWithoutTimeSheetInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput> | Prisma.TruckingLogCreateWithoutTimeSheetInput[] | Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput | Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput[]
  createMany?: Prisma.TruckingLogCreateManyTimeSheetInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogUncheckedCreateNestedManyWithoutTimeSheetInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput> | Prisma.TruckingLogCreateWithoutTimeSheetInput[] | Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput | Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput[]
  createMany?: Prisma.TruckingLogCreateManyTimeSheetInputEnvelope
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
}

export type TruckingLogUpdateManyWithoutTimeSheetNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput> | Prisma.TruckingLogCreateWithoutTimeSheetInput[] | Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput | Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutTimeSheetInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutTimeSheetInput[]
  createMany?: Prisma.TruckingLogCreateManyTimeSheetInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutTimeSheetInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutTimeSheetInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutTimeSheetInput | Prisma.TruckingLogUpdateManyWithWhereWithoutTimeSheetInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogUncheckedUpdateManyWithoutTimeSheetNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput> | Prisma.TruckingLogCreateWithoutTimeSheetInput[] | Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput[]
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput | Prisma.TruckingLogCreateOrConnectWithoutTimeSheetInput[]
  upsert?: Prisma.TruckingLogUpsertWithWhereUniqueWithoutTimeSheetInput | Prisma.TruckingLogUpsertWithWhereUniqueWithoutTimeSheetInput[]
  createMany?: Prisma.TruckingLogCreateManyTimeSheetInputEnvelope
  set?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  disconnect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  delete?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  connect?: Prisma.TruckingLogWhereUniqueInput | Prisma.TruckingLogWhereUniqueInput[]
  update?: Prisma.TruckingLogUpdateWithWhereUniqueWithoutTimeSheetInput | Prisma.TruckingLogUpdateWithWhereUniqueWithoutTimeSheetInput[]
  updateMany?: Prisma.TruckingLogUpdateManyWithWhereWithoutTimeSheetInput | Prisma.TruckingLogUpdateManyWithWhereWithoutTimeSheetInput[]
  deleteMany?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
}

export type TruckingLogCreateNestedOneWithoutTruckingLaborLogsInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckingLaborLogsInput, Prisma.TruckingLogUncheckedCreateWithoutTruckingLaborLogsInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTruckingLaborLogsInput
  connect?: Prisma.TruckingLogWhereUniqueInput
}

export type TruckingLogUpdateOneWithoutTruckingLaborLogsNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckingLaborLogsInput, Prisma.TruckingLogUncheckedCreateWithoutTruckingLaborLogsInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutTruckingLaborLogsInput
  upsert?: Prisma.TruckingLogUpsertWithoutTruckingLaborLogsInput
  disconnect?: Prisma.TruckingLogWhereInput | boolean
  delete?: Prisma.TruckingLogWhereInput | boolean
  connect?: Prisma.TruckingLogWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TruckingLogUpdateToOneWithWhereWithoutTruckingLaborLogsInput, Prisma.TruckingLogUpdateWithoutTruckingLaborLogsInput>, Prisma.TruckingLogUncheckedUpdateWithoutTruckingLaborLogsInput>
}

export type TruckingLogCreateNestedOneWithoutStateMileagesInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutStateMileagesInput, Prisma.TruckingLogUncheckedCreateWithoutStateMileagesInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutStateMileagesInput
  connect?: Prisma.TruckingLogWhereUniqueInput
}

export type TruckingLogUpdateOneRequiredWithoutStateMileagesNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutStateMileagesInput, Prisma.TruckingLogUncheckedCreateWithoutStateMileagesInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutStateMileagesInput
  upsert?: Prisma.TruckingLogUpsertWithoutStateMileagesInput
  connect?: Prisma.TruckingLogWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TruckingLogUpdateToOneWithWhereWithoutStateMileagesInput, Prisma.TruckingLogUpdateWithoutStateMileagesInput>, Prisma.TruckingLogUncheckedUpdateWithoutStateMileagesInput>
}

export type TruckingLogCreateNestedOneWithoutMaterialsInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutMaterialsInput, Prisma.TruckingLogUncheckedCreateWithoutMaterialsInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutMaterialsInput
  connect?: Prisma.TruckingLogWhereUniqueInput
}

export type TruckingLogUpdateOneRequiredWithoutMaterialsNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutMaterialsInput, Prisma.TruckingLogUncheckedCreateWithoutMaterialsInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutMaterialsInput
  upsert?: Prisma.TruckingLogUpsertWithoutMaterialsInput
  connect?: Prisma.TruckingLogWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TruckingLogUpdateToOneWithWhereWithoutMaterialsInput, Prisma.TruckingLogUpdateWithoutMaterialsInput>, Prisma.TruckingLogUncheckedUpdateWithoutMaterialsInput>
}

export type TruckingLogCreateNestedOneWithoutRefuelLogsInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutRefuelLogsInput, Prisma.TruckingLogUncheckedCreateWithoutRefuelLogsInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutRefuelLogsInput
  connect?: Prisma.TruckingLogWhereUniqueInput
}

export type TruckingLogUpdateOneWithoutRefuelLogsNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutRefuelLogsInput, Prisma.TruckingLogUncheckedCreateWithoutRefuelLogsInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutRefuelLogsInput
  upsert?: Prisma.TruckingLogUpsertWithoutRefuelLogsInput
  disconnect?: Prisma.TruckingLogWhereInput | boolean
  delete?: Prisma.TruckingLogWhereInput | boolean
  connect?: Prisma.TruckingLogWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TruckingLogUpdateToOneWithWhereWithoutRefuelLogsInput, Prisma.TruckingLogUpdateWithoutRefuelLogsInput>, Prisma.TruckingLogUncheckedUpdateWithoutRefuelLogsInput>
}

export type TruckingLogCreateNestedOneWithoutEquipmentHauledInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentHauledInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentHauledInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutEquipmentHauledInput
  connect?: Prisma.TruckingLogWhereUniqueInput
}

export type TruckingLogUpdateOneRequiredWithoutEquipmentHauledNestedInput = {
  create?: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentHauledInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentHauledInput>
  connectOrCreate?: Prisma.TruckingLogCreateOrConnectWithoutEquipmentHauledInput
  upsert?: Prisma.TruckingLogUpsertWithoutEquipmentHauledInput
  connect?: Prisma.TruckingLogWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TruckingLogUpdateToOneWithWhereWithoutEquipmentHauledInput, Prisma.TruckingLogUpdateWithoutEquipmentHauledInput>, Prisma.TruckingLogUncheckedUpdateWithoutEquipmentHauledInput>
}

export type TruckingLogCreateWithoutEquipmentInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutEquipmentInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutEquipmentInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput>
}

export type TruckingLogCreateManyEquipmentInputEnvelope = {
  data: Prisma.TruckingLogCreateManyEquipmentInput | Prisma.TruckingLogCreateManyEquipmentInput[]
  skipDuplicates?: boolean
}

export type TruckingLogCreateWithoutTruckInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutTruckInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutTruckInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckInput, Prisma.TruckingLogUncheckedCreateWithoutTruckInput>
}

export type TruckingLogCreateManyTruckInputEnvelope = {
  data: Prisma.TruckingLogCreateManyTruckInput | Prisma.TruckingLogCreateManyTruckInput[]
  skipDuplicates?: boolean
}

export type TruckingLogCreateWithoutTrailerInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutTrailerInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutTrailerInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTrailerInput, Prisma.TruckingLogUncheckedCreateWithoutTrailerInput>
}

export type TruckingLogCreateManyTrailerInputEnvelope = {
  data: Prisma.TruckingLogCreateManyTrailerInput | Prisma.TruckingLogCreateManyTrailerInput[]
  skipDuplicates?: boolean
}

export type TruckingLogUpsertWithWhereUniqueWithoutEquipmentInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutEquipmentInput, Prisma.TruckingLogUncheckedUpdateWithoutEquipmentInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentInput>
}

export type TruckingLogUpdateWithWhereUniqueWithoutEquipmentInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutEquipmentInput, Prisma.TruckingLogUncheckedUpdateWithoutEquipmentInput>
}

export type TruckingLogUpdateManyWithWhereWithoutEquipmentInput = {
  where: Prisma.TruckingLogScalarWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateManyMutationInput, Prisma.TruckingLogUncheckedUpdateManyWithoutEquipmentInput>
}

export type TruckingLogScalarWhereInput = {
  AND?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
  OR?: Prisma.TruckingLogScalarWhereInput[]
  NOT?: Prisma.TruckingLogScalarWhereInput | Prisma.TruckingLogScalarWhereInput[]
  id?: Prisma.StringFilter<"TruckingLog"> | string
  timeSheetId?: Prisma.StringFilter<"TruckingLog"> | string
  laborType?: Prisma.StringFilter<"TruckingLog"> | string
  taskName?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  equipmentId?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  trailerNumber?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  truckNumber?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
  startingMileage?: Prisma.IntNullableFilter<"TruckingLog"> | number | null
  endingMileage?: Prisma.IntNullableFilter<"TruckingLog"> | number | null
  truckLaborLogId?: Prisma.StringNullableFilter<"TruckingLog"> | string | null
}

export type TruckingLogUpsertWithWhereUniqueWithoutTruckInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTruckInput, Prisma.TruckingLogUncheckedUpdateWithoutTruckInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckInput, Prisma.TruckingLogUncheckedCreateWithoutTruckInput>
}

export type TruckingLogUpdateWithWhereUniqueWithoutTruckInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTruckInput, Prisma.TruckingLogUncheckedUpdateWithoutTruckInput>
}

export type TruckingLogUpdateManyWithWhereWithoutTruckInput = {
  where: Prisma.TruckingLogScalarWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateManyMutationInput, Prisma.TruckingLogUncheckedUpdateManyWithoutTruckInput>
}

export type TruckingLogUpsertWithWhereUniqueWithoutTrailerInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTrailerInput, Prisma.TruckingLogUncheckedUpdateWithoutTrailerInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTrailerInput, Prisma.TruckingLogUncheckedCreateWithoutTrailerInput>
}

export type TruckingLogUpdateWithWhereUniqueWithoutTrailerInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTrailerInput, Prisma.TruckingLogUncheckedUpdateWithoutTrailerInput>
}

export type TruckingLogUpdateManyWithWhereWithoutTrailerInput = {
  where: Prisma.TruckingLogScalarWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateManyMutationInput, Prisma.TruckingLogUncheckedUpdateManyWithoutTrailerInput>
}

export type TruckingLogCreateWithoutTimeSheetInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
}

export type TruckingLogUncheckedCreateWithoutTimeSheetInput = {
  id?: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutTimeSheetInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput>
}

export type TruckingLogCreateManyTimeSheetInputEnvelope = {
  data: Prisma.TruckingLogCreateManyTimeSheetInput | Prisma.TruckingLogCreateManyTimeSheetInput[]
  skipDuplicates?: boolean
}

export type TruckingLogUpsertWithWhereUniqueWithoutTimeSheetInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedUpdateWithoutTimeSheetInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedCreateWithoutTimeSheetInput>
}

export type TruckingLogUpdateWithWhereUniqueWithoutTimeSheetInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTimeSheetInput, Prisma.TruckingLogUncheckedUpdateWithoutTimeSheetInput>
}

export type TruckingLogUpdateManyWithWhereWithoutTimeSheetInput = {
  where: Prisma.TruckingLogScalarWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateManyMutationInput, Prisma.TruckingLogUncheckedUpdateManyWithoutTimeSheetInput>
}

export type TruckingLogCreateWithoutTruckingLaborLogsInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutTruckingLaborLogsInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutTruckingLaborLogsInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckingLaborLogsInput, Prisma.TruckingLogUncheckedCreateWithoutTruckingLaborLogsInput>
}

export type TruckingLogUpsertWithoutTruckingLaborLogsInput = {
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTruckingLaborLogsInput, Prisma.TruckingLogUncheckedUpdateWithoutTruckingLaborLogsInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutTruckingLaborLogsInput, Prisma.TruckingLogUncheckedCreateWithoutTruckingLaborLogsInput>
  where?: Prisma.TruckingLogWhereInput
}

export type TruckingLogUpdateToOneWithWhereWithoutTruckingLaborLogsInput = {
  where?: Prisma.TruckingLogWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutTruckingLaborLogsInput, Prisma.TruckingLogUncheckedUpdateWithoutTruckingLaborLogsInput>
}

export type TruckingLogUpdateWithoutTruckingLaborLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutTruckingLaborLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogCreateWithoutStateMileagesInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutStateMileagesInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutStateMileagesInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutStateMileagesInput, Prisma.TruckingLogUncheckedCreateWithoutStateMileagesInput>
}

export type TruckingLogUpsertWithoutStateMileagesInput = {
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutStateMileagesInput, Prisma.TruckingLogUncheckedUpdateWithoutStateMileagesInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutStateMileagesInput, Prisma.TruckingLogUncheckedCreateWithoutStateMileagesInput>
  where?: Prisma.TruckingLogWhereInput
}

export type TruckingLogUpdateToOneWithWhereWithoutStateMileagesInput = {
  where?: Prisma.TruckingLogWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutStateMileagesInput, Prisma.TruckingLogUncheckedUpdateWithoutStateMileagesInput>
}

export type TruckingLogUpdateWithoutStateMileagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutStateMileagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogCreateWithoutMaterialsInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutMaterialsInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutMaterialsInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutMaterialsInput, Prisma.TruckingLogUncheckedCreateWithoutMaterialsInput>
}

export type TruckingLogUpsertWithoutMaterialsInput = {
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutMaterialsInput, Prisma.TruckingLogUncheckedUpdateWithoutMaterialsInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutMaterialsInput, Prisma.TruckingLogUncheckedCreateWithoutMaterialsInput>
  where?: Prisma.TruckingLogWhereInput
}

export type TruckingLogUpdateToOneWithWhereWithoutMaterialsInput = {
  where?: Prisma.TruckingLogWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutMaterialsInput, Prisma.TruckingLogUncheckedUpdateWithoutMaterialsInput>
}

export type TruckingLogUpdateWithoutMaterialsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutMaterialsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogCreateWithoutRefuelLogsInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutRefuelLogsInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedCreateNestedManyWithoutTruckingLogInput
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutRefuelLogsInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutRefuelLogsInput, Prisma.TruckingLogUncheckedCreateWithoutRefuelLogsInput>
}

export type TruckingLogUpsertWithoutRefuelLogsInput = {
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutRefuelLogsInput, Prisma.TruckingLogUncheckedUpdateWithoutRefuelLogsInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutRefuelLogsInput, Prisma.TruckingLogUncheckedCreateWithoutRefuelLogsInput>
  where?: Prisma.TruckingLogWhereInput
}

export type TruckingLogUpdateToOneWithWhereWithoutRefuelLogsInput = {
  where?: Prisma.TruckingLogWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutRefuelLogsInput, Prisma.TruckingLogUncheckedUpdateWithoutRefuelLogsInput>
}

export type TruckingLogUpdateWithoutRefuelLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutRefuelLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogCreateWithoutEquipmentHauledInput = {
  id?: string
  laborType: string
  taskName?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  Materials?: Prisma.MaterialCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsCreateNestedManyWithoutTruckingLogInput
  Equipment?: Prisma.EquipmentCreateNestedOneWithoutHauledInLogsInput
  Truck?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTruckInput
  Trailer?: Prisma.EquipmentCreateNestedOneWithoutUsedAsTrailerInput
  TimeSheet: Prisma.TimeSheetCreateNestedOneWithoutTruckingLogsInput
}

export type TruckingLogUncheckedCreateWithoutEquipmentHauledInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
  Materials?: Prisma.MaterialUncheckedCreateNestedManyWithoutTruckingLogInput
  RefuelLogs?: Prisma.RefuelLogUncheckedCreateNestedManyWithoutTruckingLogInput
  StateMileages?: Prisma.StateMileageUncheckedCreateNestedManyWithoutTruckingLogInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput
}

export type TruckingLogCreateOrConnectWithoutEquipmentHauledInput = {
  where: Prisma.TruckingLogWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentHauledInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentHauledInput>
}

export type TruckingLogUpsertWithoutEquipmentHauledInput = {
  update: Prisma.XOR<Prisma.TruckingLogUpdateWithoutEquipmentHauledInput, Prisma.TruckingLogUncheckedUpdateWithoutEquipmentHauledInput>
  create: Prisma.XOR<Prisma.TruckingLogCreateWithoutEquipmentHauledInput, Prisma.TruckingLogUncheckedCreateWithoutEquipmentHauledInput>
  where?: Prisma.TruckingLogWhereInput
}

export type TruckingLogUpdateToOneWithWhereWithoutEquipmentHauledInput = {
  where?: Prisma.TruckingLogWhereInput
  data: Prisma.XOR<Prisma.TruckingLogUpdateWithoutEquipmentHauledInput, Prisma.TruckingLogUncheckedUpdateWithoutEquipmentHauledInput>
}

export type TruckingLogUpdateWithoutEquipmentHauledInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutEquipmentHauledInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogCreateManyEquipmentInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
}

export type TruckingLogCreateManyTruckInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
}

export type TruckingLogCreateManyTrailerInput = {
  id?: string
  timeSheetId: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
}

export type TruckingLogUpdateWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogUncheckedUpdateManyWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TruckingLogUpdateWithoutTruckInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutTruckInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogUncheckedUpdateManyWithoutTruckInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TruckingLogUpdateWithoutTrailerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  TimeSheet?: Prisma.TimeSheetUpdateOneRequiredWithoutTruckingLogsNestedInput
}

export type TruckingLogUncheckedUpdateWithoutTrailerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogUncheckedUpdateManyWithoutTrailerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  timeSheetId?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TruckingLogCreateManyTimeSheetInput = {
  id?: string
  laborType: string
  taskName?: string | null
  equipmentId?: string | null
  trailerNumber?: string | null
  truckNumber?: string | null
  startingMileage?: number | null
  endingMileage?: number | null
  truckLaborLogId?: string | null
}

export type TruckingLogUpdateWithoutTimeSheetInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput
  Equipment?: Prisma.EquipmentUpdateOneWithoutHauledInLogsNestedInput
  Truck?: Prisma.EquipmentUpdateOneWithoutUsedAsTruckNestedInput
  Trailer?: Prisma.EquipmentUpdateOneWithoutUsedAsTrailerNestedInput
}

export type TruckingLogUncheckedUpdateWithoutTimeSheetInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EquipmentHauled?: Prisma.EquipmentHauledUncheckedUpdateManyWithoutTruckingLogNestedInput
  Materials?: Prisma.MaterialUncheckedUpdateManyWithoutTruckingLogNestedInput
  RefuelLogs?: Prisma.RefuelLogUncheckedUpdateManyWithoutTruckingLogNestedInput
  StateMileages?: Prisma.StateMileageUncheckedUpdateManyWithoutTruckingLogNestedInput
  TruckingLaborLogs?: Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput
}

export type TruckingLogUncheckedUpdateManyWithoutTimeSheetInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  laborType?: Prisma.StringFieldUpdateOperationsInput | string
  taskName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipmentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  trailerNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  truckNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  endingMileage?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  truckLaborLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type TruckingLogCountOutputType
 */

export type TruckingLogCountOutputType = {
  EquipmentHauled: number
  Materials: number
  RefuelLogs: number
  StateMileages: number
  TruckingLaborLogs: number
}

export type TruckingLogCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EquipmentHauled?: boolean | TruckingLogCountOutputTypeCountEquipmentHauledArgs
  Materials?: boolean | TruckingLogCountOutputTypeCountMaterialsArgs
  RefuelLogs?: boolean | TruckingLogCountOutputTypeCountRefuelLogsArgs
  StateMileages?: boolean | TruckingLogCountOutputTypeCountStateMileagesArgs
  TruckingLaborLogs?: boolean | TruckingLogCountOutputTypeCountTruckingLaborLogsArgs
}

/**
 * TruckingLogCountOutputType without action
 */
export type TruckingLogCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLogCountOutputType
   */
  select?: Prisma.TruckingLogCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TruckingLogCountOutputType without action
 */
export type TruckingLogCountOutputTypeCountEquipmentHauledArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EquipmentHauledWhereInput
}

/**
 * TruckingLogCountOutputType without action
 */
export type TruckingLogCountOutputTypeCountMaterialsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MaterialWhereInput
}

/**
 * TruckingLogCountOutputType without action
 */
export type TruckingLogCountOutputTypeCountRefuelLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RefuelLogWhereInput
}

/**
 * TruckingLogCountOutputType without action
 */
export type TruckingLogCountOutputTypeCountStateMileagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StateMileageWhereInput
}

/**
 * TruckingLogCountOutputType without action
 */
export type TruckingLogCountOutputTypeCountTruckingLaborLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TruckLaborLogsWhereInput
}


export type TruckingLogSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  timeSheetId?: boolean
  laborType?: boolean
  taskName?: boolean
  equipmentId?: boolean
  trailerNumber?: boolean
  truckNumber?: boolean
  startingMileage?: boolean
  endingMileage?: boolean
  truckLaborLogId?: boolean
  EquipmentHauled?: boolean | Prisma.TruckingLog$EquipmentHauledArgs<ExtArgs>
  Materials?: boolean | Prisma.TruckingLog$MaterialsArgs<ExtArgs>
  RefuelLogs?: boolean | Prisma.TruckingLog$RefuelLogsArgs<ExtArgs>
  StateMileages?: boolean | Prisma.TruckingLog$StateMileagesArgs<ExtArgs>
  TruckingLaborLogs?: boolean | Prisma.TruckingLog$TruckingLaborLogsArgs<ExtArgs>
  Equipment?: boolean | Prisma.TruckingLog$EquipmentArgs<ExtArgs>
  Truck?: boolean | Prisma.TruckingLog$TruckArgs<ExtArgs>
  Trailer?: boolean | Prisma.TruckingLog$TrailerArgs<ExtArgs>
  TimeSheet?: boolean | Prisma.TimeSheetDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.TruckingLogCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["truckingLog"]>

export type TruckingLogSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  timeSheetId?: boolean
  laborType?: boolean
  taskName?: boolean
  equipmentId?: boolean
  trailerNumber?: boolean
  truckNumber?: boolean
  startingMileage?: boolean
  endingMileage?: boolean
  truckLaborLogId?: boolean
  Equipment?: boolean | Prisma.TruckingLog$EquipmentArgs<ExtArgs>
  Truck?: boolean | Prisma.TruckingLog$TruckArgs<ExtArgs>
  Trailer?: boolean | Prisma.TruckingLog$TrailerArgs<ExtArgs>
  TimeSheet?: boolean | Prisma.TimeSheetDefaultArgs<ExtArgs>
}, ExtArgs["result"]["truckingLog"]>

export type TruckingLogSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  timeSheetId?: boolean
  laborType?: boolean
  taskName?: boolean
  equipmentId?: boolean
  trailerNumber?: boolean
  truckNumber?: boolean
  startingMileage?: boolean
  endingMileage?: boolean
  truckLaborLogId?: boolean
  Equipment?: boolean | Prisma.TruckingLog$EquipmentArgs<ExtArgs>
  Truck?: boolean | Prisma.TruckingLog$TruckArgs<ExtArgs>
  Trailer?: boolean | Prisma.TruckingLog$TrailerArgs<ExtArgs>
  TimeSheet?: boolean | Prisma.TimeSheetDefaultArgs<ExtArgs>
}, ExtArgs["result"]["truckingLog"]>

export type TruckingLogSelectScalar = {
  id?: boolean
  timeSheetId?: boolean
  laborType?: boolean
  taskName?: boolean
  equipmentId?: boolean
  trailerNumber?: boolean
  truckNumber?: boolean
  startingMileage?: boolean
  endingMileage?: boolean
  truckLaborLogId?: boolean
}

export type TruckingLogOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "timeSheetId" | "laborType" | "taskName" | "equipmentId" | "trailerNumber" | "truckNumber" | "startingMileage" | "endingMileage" | "truckLaborLogId", ExtArgs["result"]["truckingLog"]>
export type TruckingLogInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EquipmentHauled?: boolean | Prisma.TruckingLog$EquipmentHauledArgs<ExtArgs>
  Materials?: boolean | Prisma.TruckingLog$MaterialsArgs<ExtArgs>
  RefuelLogs?: boolean | Prisma.TruckingLog$RefuelLogsArgs<ExtArgs>
  StateMileages?: boolean | Prisma.TruckingLog$StateMileagesArgs<ExtArgs>
  TruckingLaborLogs?: boolean | Prisma.TruckingLog$TruckingLaborLogsArgs<ExtArgs>
  Equipment?: boolean | Prisma.TruckingLog$EquipmentArgs<ExtArgs>
  Truck?: boolean | Prisma.TruckingLog$TruckArgs<ExtArgs>
  Trailer?: boolean | Prisma.TruckingLog$TrailerArgs<ExtArgs>
  TimeSheet?: boolean | Prisma.TimeSheetDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.TruckingLogCountOutputTypeDefaultArgs<ExtArgs>
}
export type TruckingLogIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Equipment?: boolean | Prisma.TruckingLog$EquipmentArgs<ExtArgs>
  Truck?: boolean | Prisma.TruckingLog$TruckArgs<ExtArgs>
  Trailer?: boolean | Prisma.TruckingLog$TrailerArgs<ExtArgs>
  TimeSheet?: boolean | Prisma.TimeSheetDefaultArgs<ExtArgs>
}
export type TruckingLogIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Equipment?: boolean | Prisma.TruckingLog$EquipmentArgs<ExtArgs>
  Truck?: boolean | Prisma.TruckingLog$TruckArgs<ExtArgs>
  Trailer?: boolean | Prisma.TruckingLog$TrailerArgs<ExtArgs>
  TimeSheet?: boolean | Prisma.TimeSheetDefaultArgs<ExtArgs>
}

export type $TruckingLogPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TruckingLog"
  objects: {
    EquipmentHauled: Prisma.$EquipmentHauledPayload<ExtArgs>[]
    Materials: Prisma.$MaterialPayload<ExtArgs>[]
    RefuelLogs: Prisma.$RefuelLogPayload<ExtArgs>[]
    StateMileages: Prisma.$StateMileagePayload<ExtArgs>[]
    TruckingLaborLogs: Prisma.$TruckLaborLogsPayload<ExtArgs>[]
    Equipment: Prisma.$EquipmentPayload<ExtArgs> | null
    Truck: Prisma.$EquipmentPayload<ExtArgs> | null
    Trailer: Prisma.$EquipmentPayload<ExtArgs> | null
    TimeSheet: Prisma.$TimeSheetPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    timeSheetId: string
    laborType: string
    taskName: string | null
    equipmentId: string | null
    trailerNumber: string | null
    truckNumber: string | null
    startingMileage: number | null
    endingMileage: number | null
    truckLaborLogId: string | null
  }, ExtArgs["result"]["truckingLog"]>
  composites: {}
}

export type TruckingLogGetPayload<S extends boolean | null | undefined | TruckingLogDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload, S>

export type TruckingLogCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TruckingLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TruckingLogCountAggregateInputType | true
  }

export interface TruckingLogDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TruckingLog'], meta: { name: 'TruckingLog' } }
  /**
   * Find zero or one TruckingLog that matches the filter.
   * @param {TruckingLogFindUniqueArgs} args - Arguments to find a TruckingLog
   * @example
   * // Get one TruckingLog
   * const truckingLog = await prisma.truckingLog.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TruckingLogFindUniqueArgs>(args: Prisma.SelectSubset<T, TruckingLogFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TruckingLog that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TruckingLogFindUniqueOrThrowArgs} args - Arguments to find a TruckingLog
   * @example
   * // Get one TruckingLog
   * const truckingLog = await prisma.truckingLog.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TruckingLogFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TruckingLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TruckingLog that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckingLogFindFirstArgs} args - Arguments to find a TruckingLog
   * @example
   * // Get one TruckingLog
   * const truckingLog = await prisma.truckingLog.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TruckingLogFindFirstArgs>(args?: Prisma.SelectSubset<T, TruckingLogFindFirstArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TruckingLog that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckingLogFindFirstOrThrowArgs} args - Arguments to find a TruckingLog
   * @example
   * // Get one TruckingLog
   * const truckingLog = await prisma.truckingLog.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TruckingLogFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TruckingLogFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TruckingLogs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckingLogFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TruckingLogs
   * const truckingLogs = await prisma.truckingLog.findMany()
   * 
   * // Get first 10 TruckingLogs
   * const truckingLogs = await prisma.truckingLog.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const truckingLogWithIdOnly = await prisma.truckingLog.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TruckingLogFindManyArgs>(args?: Prisma.SelectSubset<T, TruckingLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TruckingLog.
   * @param {TruckingLogCreateArgs} args - Arguments to create a TruckingLog.
   * @example
   * // Create one TruckingLog
   * const TruckingLog = await prisma.truckingLog.create({
   *   data: {
   *     // ... data to create a TruckingLog
   *   }
   * })
   * 
   */
  create<T extends TruckingLogCreateArgs>(args: Prisma.SelectSubset<T, TruckingLogCreateArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TruckingLogs.
   * @param {TruckingLogCreateManyArgs} args - Arguments to create many TruckingLogs.
   * @example
   * // Create many TruckingLogs
   * const truckingLog = await prisma.truckingLog.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TruckingLogCreateManyArgs>(args?: Prisma.SelectSubset<T, TruckingLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TruckingLogs and returns the data saved in the database.
   * @param {TruckingLogCreateManyAndReturnArgs} args - Arguments to create many TruckingLogs.
   * @example
   * // Create many TruckingLogs
   * const truckingLog = await prisma.truckingLog.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TruckingLogs and only return the `id`
   * const truckingLogWithIdOnly = await prisma.truckingLog.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TruckingLogCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TruckingLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TruckingLog.
   * @param {TruckingLogDeleteArgs} args - Arguments to delete one TruckingLog.
   * @example
   * // Delete one TruckingLog
   * const TruckingLog = await prisma.truckingLog.delete({
   *   where: {
   *     // ... filter to delete one TruckingLog
   *   }
   * })
   * 
   */
  delete<T extends TruckingLogDeleteArgs>(args: Prisma.SelectSubset<T, TruckingLogDeleteArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TruckingLog.
   * @param {TruckingLogUpdateArgs} args - Arguments to update one TruckingLog.
   * @example
   * // Update one TruckingLog
   * const truckingLog = await prisma.truckingLog.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TruckingLogUpdateArgs>(args: Prisma.SelectSubset<T, TruckingLogUpdateArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TruckingLogs.
   * @param {TruckingLogDeleteManyArgs} args - Arguments to filter TruckingLogs to delete.
   * @example
   * // Delete a few TruckingLogs
   * const { count } = await prisma.truckingLog.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TruckingLogDeleteManyArgs>(args?: Prisma.SelectSubset<T, TruckingLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TruckingLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckingLogUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TruckingLogs
   * const truckingLog = await prisma.truckingLog.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TruckingLogUpdateManyArgs>(args: Prisma.SelectSubset<T, TruckingLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TruckingLogs and returns the data updated in the database.
   * @param {TruckingLogUpdateManyAndReturnArgs} args - Arguments to update many TruckingLogs.
   * @example
   * // Update many TruckingLogs
   * const truckingLog = await prisma.truckingLog.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TruckingLogs and only return the `id`
   * const truckingLogWithIdOnly = await prisma.truckingLog.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TruckingLogUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TruckingLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TruckingLog.
   * @param {TruckingLogUpsertArgs} args - Arguments to update or create a TruckingLog.
   * @example
   * // Update or create a TruckingLog
   * const truckingLog = await prisma.truckingLog.upsert({
   *   create: {
   *     // ... data to create a TruckingLog
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TruckingLog we want to update
   *   }
   * })
   */
  upsert<T extends TruckingLogUpsertArgs>(args: Prisma.SelectSubset<T, TruckingLogUpsertArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TruckingLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckingLogCountArgs} args - Arguments to filter TruckingLogs to count.
   * @example
   * // Count the number of TruckingLogs
   * const count = await prisma.truckingLog.count({
   *   where: {
   *     // ... the filter for the TruckingLogs we want to count
   *   }
   * })
  **/
  count<T extends TruckingLogCountArgs>(
    args?: Prisma.Subset<T, TruckingLogCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TruckingLogCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TruckingLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckingLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TruckingLogAggregateArgs>(args: Prisma.Subset<T, TruckingLogAggregateArgs>): Prisma.PrismaPromise<GetTruckingLogAggregateType<T>>

  /**
   * Group by TruckingLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckingLogGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TruckingLogGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TruckingLogGroupByArgs['orderBy'] }
      : { orderBy?: TruckingLogGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TruckingLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTruckingLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TruckingLog model
 */
readonly fields: TruckingLogFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TruckingLog.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TruckingLogClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  EquipmentHauled<T extends Prisma.TruckingLog$EquipmentHauledArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$EquipmentHauledArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipmentHauledPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Materials<T extends Prisma.TruckingLog$MaterialsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$MaterialsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  RefuelLogs<T extends Prisma.TruckingLog$RefuelLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$RefuelLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RefuelLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  StateMileages<T extends Prisma.TruckingLog$StateMileagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$StateMileagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StateMileagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  TruckingLaborLogs<T extends Prisma.TruckingLog$TruckingLaborLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$TruckingLaborLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Equipment<T extends Prisma.TruckingLog$EquipmentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$EquipmentArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Truck<T extends Prisma.TruckingLog$TruckArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$TruckArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Trailer<T extends Prisma.TruckingLog$TrailerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckingLog$TrailerArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  TimeSheet<T extends Prisma.TimeSheetDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TimeSheetDefaultArgs<ExtArgs>>): Prisma.Prisma__TimeSheetClient<runtime.Types.Result.GetResult<Prisma.$TimeSheetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TruckingLog model
 */
export interface TruckingLogFieldRefs {
  readonly id: Prisma.FieldRef<"TruckingLog", 'String'>
  readonly timeSheetId: Prisma.FieldRef<"TruckingLog", 'String'>
  readonly laborType: Prisma.FieldRef<"TruckingLog", 'String'>
  readonly taskName: Prisma.FieldRef<"TruckingLog", 'String'>
  readonly equipmentId: Prisma.FieldRef<"TruckingLog", 'String'>
  readonly trailerNumber: Prisma.FieldRef<"TruckingLog", 'String'>
  readonly truckNumber: Prisma.FieldRef<"TruckingLog", 'String'>
  readonly startingMileage: Prisma.FieldRef<"TruckingLog", 'Int'>
  readonly endingMileage: Prisma.FieldRef<"TruckingLog", 'Int'>
  readonly truckLaborLogId: Prisma.FieldRef<"TruckingLog", 'String'>
}
    

// Custom InputTypes
/**
 * TruckingLog findUnique
 */
export type TruckingLogFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * Filter, which TruckingLog to fetch.
   */
  where: Prisma.TruckingLogWhereUniqueInput
}

/**
 * TruckingLog findUniqueOrThrow
 */
export type TruckingLogFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * Filter, which TruckingLog to fetch.
   */
  where: Prisma.TruckingLogWhereUniqueInput
}

/**
 * TruckingLog findFirst
 */
export type TruckingLogFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * Filter, which TruckingLog to fetch.
   */
  where?: Prisma.TruckingLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckingLogs to fetch.
   */
  orderBy?: Prisma.TruckingLogOrderByWithRelationInput | Prisma.TruckingLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TruckingLogs.
   */
  cursor?: Prisma.TruckingLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckingLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckingLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TruckingLogs.
   */
  distinct?: Prisma.TruckingLogScalarFieldEnum | Prisma.TruckingLogScalarFieldEnum[]
}

/**
 * TruckingLog findFirstOrThrow
 */
export type TruckingLogFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * Filter, which TruckingLog to fetch.
   */
  where?: Prisma.TruckingLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckingLogs to fetch.
   */
  orderBy?: Prisma.TruckingLogOrderByWithRelationInput | Prisma.TruckingLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TruckingLogs.
   */
  cursor?: Prisma.TruckingLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckingLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckingLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TruckingLogs.
   */
  distinct?: Prisma.TruckingLogScalarFieldEnum | Prisma.TruckingLogScalarFieldEnum[]
}

/**
 * TruckingLog findMany
 */
export type TruckingLogFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * Filter, which TruckingLogs to fetch.
   */
  where?: Prisma.TruckingLogWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckingLogs to fetch.
   */
  orderBy?: Prisma.TruckingLogOrderByWithRelationInput | Prisma.TruckingLogOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TruckingLogs.
   */
  cursor?: Prisma.TruckingLogWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckingLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckingLogs.
   */
  skip?: number
  distinct?: Prisma.TruckingLogScalarFieldEnum | Prisma.TruckingLogScalarFieldEnum[]
}

/**
 * TruckingLog create
 */
export type TruckingLogCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * The data needed to create a TruckingLog.
   */
  data: Prisma.XOR<Prisma.TruckingLogCreateInput, Prisma.TruckingLogUncheckedCreateInput>
}

/**
 * TruckingLog createMany
 */
export type TruckingLogCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TruckingLogs.
   */
  data: Prisma.TruckingLogCreateManyInput | Prisma.TruckingLogCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TruckingLog createManyAndReturn
 */
export type TruckingLogCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * The data used to create many TruckingLogs.
   */
  data: Prisma.TruckingLogCreateManyInput | Prisma.TruckingLogCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TruckingLog update
 */
export type TruckingLogUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * The data needed to update a TruckingLog.
   */
  data: Prisma.XOR<Prisma.TruckingLogUpdateInput, Prisma.TruckingLogUncheckedUpdateInput>
  /**
   * Choose, which TruckingLog to update.
   */
  where: Prisma.TruckingLogWhereUniqueInput
}

/**
 * TruckingLog updateMany
 */
export type TruckingLogUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TruckingLogs.
   */
  data: Prisma.XOR<Prisma.TruckingLogUpdateManyMutationInput, Prisma.TruckingLogUncheckedUpdateManyInput>
  /**
   * Filter which TruckingLogs to update
   */
  where?: Prisma.TruckingLogWhereInput
  /**
   * Limit how many TruckingLogs to update.
   */
  limit?: number
}

/**
 * TruckingLog updateManyAndReturn
 */
export type TruckingLogUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * The data used to update TruckingLogs.
   */
  data: Prisma.XOR<Prisma.TruckingLogUpdateManyMutationInput, Prisma.TruckingLogUncheckedUpdateManyInput>
  /**
   * Filter which TruckingLogs to update
   */
  where?: Prisma.TruckingLogWhereInput
  /**
   * Limit how many TruckingLogs to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TruckingLog upsert
 */
export type TruckingLogUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * The filter to search for the TruckingLog to update in case it exists.
   */
  where: Prisma.TruckingLogWhereUniqueInput
  /**
   * In case the TruckingLog found by the `where` argument doesn't exist, create a new TruckingLog with this data.
   */
  create: Prisma.XOR<Prisma.TruckingLogCreateInput, Prisma.TruckingLogUncheckedCreateInput>
  /**
   * In case the TruckingLog was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TruckingLogUpdateInput, Prisma.TruckingLogUncheckedUpdateInput>
}

/**
 * TruckingLog delete
 */
export type TruckingLogDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  /**
   * Filter which TruckingLog to delete.
   */
  where: Prisma.TruckingLogWhereUniqueInput
}

/**
 * TruckingLog deleteMany
 */
export type TruckingLogDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TruckingLogs to delete
   */
  where?: Prisma.TruckingLogWhereInput
  /**
   * Limit how many TruckingLogs to delete.
   */
  limit?: number
}

/**
 * TruckingLog.EquipmentHauled
 */
export type TruckingLog$EquipmentHauledArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EquipmentHauled
   */
  select?: Prisma.EquipmentHauledSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EquipmentHauled
   */
  omit?: Prisma.EquipmentHauledOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentHauledInclude<ExtArgs> | null
  where?: Prisma.EquipmentHauledWhereInput
  orderBy?: Prisma.EquipmentHauledOrderByWithRelationInput | Prisma.EquipmentHauledOrderByWithRelationInput[]
  cursor?: Prisma.EquipmentHauledWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EquipmentHauledScalarFieldEnum | Prisma.EquipmentHauledScalarFieldEnum[]
}

/**
 * TruckingLog.Materials
 */
export type TruckingLog$MaterialsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Material
   */
  select?: Prisma.MaterialSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Material
   */
  omit?: Prisma.MaterialOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaterialInclude<ExtArgs> | null
  where?: Prisma.MaterialWhereInput
  orderBy?: Prisma.MaterialOrderByWithRelationInput | Prisma.MaterialOrderByWithRelationInput[]
  cursor?: Prisma.MaterialWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MaterialScalarFieldEnum | Prisma.MaterialScalarFieldEnum[]
}

/**
 * TruckingLog.RefuelLogs
 */
export type TruckingLog$RefuelLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RefuelLog
   */
  select?: Prisma.RefuelLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RefuelLog
   */
  omit?: Prisma.RefuelLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RefuelLogInclude<ExtArgs> | null
  where?: Prisma.RefuelLogWhereInput
  orderBy?: Prisma.RefuelLogOrderByWithRelationInput | Prisma.RefuelLogOrderByWithRelationInput[]
  cursor?: Prisma.RefuelLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.RefuelLogScalarFieldEnum | Prisma.RefuelLogScalarFieldEnum[]
}

/**
 * TruckingLog.StateMileages
 */
export type TruckingLog$StateMileagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StateMileage
   */
  select?: Prisma.StateMileageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StateMileage
   */
  omit?: Prisma.StateMileageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StateMileageInclude<ExtArgs> | null
  where?: Prisma.StateMileageWhereInput
  orderBy?: Prisma.StateMileageOrderByWithRelationInput | Prisma.StateMileageOrderByWithRelationInput[]
  cursor?: Prisma.StateMileageWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StateMileageScalarFieldEnum | Prisma.StateMileageScalarFieldEnum[]
}

/**
 * TruckingLog.TruckingLaborLogs
 */
export type TruckingLog$TruckingLaborLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  where?: Prisma.TruckLaborLogsWhereInput
  orderBy?: Prisma.TruckLaborLogsOrderByWithRelationInput | Prisma.TruckLaborLogsOrderByWithRelationInput[]
  cursor?: Prisma.TruckLaborLogsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TruckLaborLogsScalarFieldEnum | Prisma.TruckLaborLogsScalarFieldEnum[]
}

/**
 * TruckingLog.Equipment
 */
export type TruckingLog$EquipmentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  where?: Prisma.EquipmentWhereInput
}

/**
 * TruckingLog.Truck
 */
export type TruckingLog$TruckArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  where?: Prisma.EquipmentWhereInput
}

/**
 * TruckingLog.Trailer
 */
export type TruckingLog$TrailerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipment
   */
  select?: Prisma.EquipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipment
   */
  omit?: Prisma.EquipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipmentInclude<ExtArgs> | null
  where?: Prisma.EquipmentWhereInput
}

/**
 * TruckingLog without action
 */
export type TruckingLogDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
}
