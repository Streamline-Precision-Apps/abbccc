
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `TruckLaborLogs` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TruckLaborLogs
 * 
 */
export type TruckLaborLogsModel = runtime.Types.Result.DefaultSelection<Prisma.$TruckLaborLogsPayload>

export type AggregateTruckLaborLogs = {
  _count: TruckLaborLogsCountAggregateOutputType | null
  _min: TruckLaborLogsMinAggregateOutputType | null
  _max: TruckLaborLogsMaxAggregateOutputType | null
}

export type TruckLaborLogsMinAggregateOutputType = {
  id: string | null
  truckingLogId: string | null
  type: string | null
  startTime: Date | null
  endTime: Date | null
}

export type TruckLaborLogsMaxAggregateOutputType = {
  id: string | null
  truckingLogId: string | null
  type: string | null
  startTime: Date | null
  endTime: Date | null
}

export type TruckLaborLogsCountAggregateOutputType = {
  id: number
  truckingLogId: number
  type: number
  startTime: number
  endTime: number
  _all: number
}


export type TruckLaborLogsMinAggregateInputType = {
  id?: true
  truckingLogId?: true
  type?: true
  startTime?: true
  endTime?: true
}

export type TruckLaborLogsMaxAggregateInputType = {
  id?: true
  truckingLogId?: true
  type?: true
  startTime?: true
  endTime?: true
}

export type TruckLaborLogsCountAggregateInputType = {
  id?: true
  truckingLogId?: true
  type?: true
  startTime?: true
  endTime?: true
  _all?: true
}

export type TruckLaborLogsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TruckLaborLogs to aggregate.
   */
  where?: Prisma.TruckLaborLogsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckLaborLogs to fetch.
   */
  orderBy?: Prisma.TruckLaborLogsOrderByWithRelationInput | Prisma.TruckLaborLogsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TruckLaborLogsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckLaborLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckLaborLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TruckLaborLogs
  **/
  _count?: true | TruckLaborLogsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TruckLaborLogsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TruckLaborLogsMaxAggregateInputType
}

export type GetTruckLaborLogsAggregateType<T extends TruckLaborLogsAggregateArgs> = {
      [P in keyof T & keyof AggregateTruckLaborLogs]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTruckLaborLogs[P]>
    : Prisma.GetScalarType<T[P], AggregateTruckLaborLogs[P]>
}




export type TruckLaborLogsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TruckLaborLogsWhereInput
  orderBy?: Prisma.TruckLaborLogsOrderByWithAggregationInput | Prisma.TruckLaborLogsOrderByWithAggregationInput[]
  by: Prisma.TruckLaborLogsScalarFieldEnum[] | Prisma.TruckLaborLogsScalarFieldEnum
  having?: Prisma.TruckLaborLogsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TruckLaborLogsCountAggregateInputType | true
  _min?: TruckLaborLogsMinAggregateInputType
  _max?: TruckLaborLogsMaxAggregateInputType
}

export type TruckLaborLogsGroupByOutputType = {
  id: string
  truckingLogId: string | null
  type: string
  startTime: Date
  endTime: Date | null
  _count: TruckLaborLogsCountAggregateOutputType | null
  _min: TruckLaborLogsMinAggregateOutputType | null
  _max: TruckLaborLogsMaxAggregateOutputType | null
}

type GetTruckLaborLogsGroupByPayload<T extends TruckLaborLogsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TruckLaborLogsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TruckLaborLogsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TruckLaborLogsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TruckLaborLogsGroupByOutputType[P]>
      }
    >
  >



export type TruckLaborLogsWhereInput = {
  AND?: Prisma.TruckLaborLogsWhereInput | Prisma.TruckLaborLogsWhereInput[]
  OR?: Prisma.TruckLaborLogsWhereInput[]
  NOT?: Prisma.TruckLaborLogsWhereInput | Prisma.TruckLaborLogsWhereInput[]
  id?: Prisma.StringFilter<"TruckLaborLogs"> | string
  truckingLogId?: Prisma.StringNullableFilter<"TruckLaborLogs"> | string | null
  type?: Prisma.StringFilter<"TruckLaborLogs"> | string
  startTime?: Prisma.DateTimeFilter<"TruckLaborLogs"> | Date | string
  endTime?: Prisma.DateTimeNullableFilter<"TruckLaborLogs"> | Date | string | null
  TruckingLog?: Prisma.XOR<Prisma.TruckingLogNullableScalarRelationFilter, Prisma.TruckingLogWhereInput> | null
}

export type TruckLaborLogsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  endTime?: Prisma.SortOrderInput | Prisma.SortOrder
  TruckingLog?: Prisma.TruckingLogOrderByWithRelationInput
}

export type TruckLaborLogsWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.TruckLaborLogsWhereInput | Prisma.TruckLaborLogsWhereInput[]
  OR?: Prisma.TruckLaborLogsWhereInput[]
  NOT?: Prisma.TruckLaborLogsWhereInput | Prisma.TruckLaborLogsWhereInput[]
  truckingLogId?: Prisma.StringNullableFilter<"TruckLaborLogs"> | string | null
  type?: Prisma.StringFilter<"TruckLaborLogs"> | string
  startTime?: Prisma.DateTimeFilter<"TruckLaborLogs"> | Date | string
  endTime?: Prisma.DateTimeNullableFilter<"TruckLaborLogs"> | Date | string | null
  TruckingLog?: Prisma.XOR<Prisma.TruckingLogNullableScalarRelationFilter, Prisma.TruckingLogWhereInput> | null
}, "id">

export type TruckLaborLogsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  endTime?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.TruckLaborLogsCountOrderByAggregateInput
  _max?: Prisma.TruckLaborLogsMaxOrderByAggregateInput
  _min?: Prisma.TruckLaborLogsMinOrderByAggregateInput
}

export type TruckLaborLogsScalarWhereWithAggregatesInput = {
  AND?: Prisma.TruckLaborLogsScalarWhereWithAggregatesInput | Prisma.TruckLaborLogsScalarWhereWithAggregatesInput[]
  OR?: Prisma.TruckLaborLogsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TruckLaborLogsScalarWhereWithAggregatesInput | Prisma.TruckLaborLogsScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"TruckLaborLogs"> | string
  truckingLogId?: Prisma.StringNullableWithAggregatesFilter<"TruckLaborLogs"> | string | null
  type?: Prisma.StringWithAggregatesFilter<"TruckLaborLogs"> | string
  startTime?: Prisma.DateTimeWithAggregatesFilter<"TruckLaborLogs"> | Date | string
  endTime?: Prisma.DateTimeNullableWithAggregatesFilter<"TruckLaborLogs"> | Date | string | null
}

export type TruckLaborLogsCreateInput = {
  id?: string
  type: string
  startTime: Date | string
  endTime?: Date | string | null
  TruckingLog?: Prisma.TruckingLogCreateNestedOneWithoutTruckingLaborLogsInput
}

export type TruckLaborLogsUncheckedCreateInput = {
  id?: string
  truckingLogId?: string | null
  type: string
  startTime: Date | string
  endTime?: Date | string | null
}

export type TruckLaborLogsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endTime?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  TruckingLog?: Prisma.TruckingLogUpdateOneWithoutTruckingLaborLogsNestedInput
}

export type TruckLaborLogsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  truckingLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endTime?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TruckLaborLogsCreateManyInput = {
  id?: string
  truckingLogId?: string | null
  type: string
  startTime: Date | string
  endTime?: Date | string | null
}

export type TruckLaborLogsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endTime?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TruckLaborLogsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  truckingLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endTime?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TruckLaborLogsListRelationFilter = {
  every?: Prisma.TruckLaborLogsWhereInput
  some?: Prisma.TruckLaborLogsWhereInput
  none?: Prisma.TruckLaborLogsWhereInput
}

export type TruckLaborLogsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TruckLaborLogsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  type?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  endTime?: Prisma.SortOrder
}

export type TruckLaborLogsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  type?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  endTime?: Prisma.SortOrder
}

export type TruckLaborLogsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  truckingLogId?: Prisma.SortOrder
  type?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  endTime?: Prisma.SortOrder
}

export type TruckLaborLogsCreateNestedManyWithoutTruckingLogInput = {
  create?: Prisma.XOR<Prisma.TruckLaborLogsCreateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput> | Prisma.TruckLaborLogsCreateWithoutTruckingLogInput[] | Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput | Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput[]
  createMany?: Prisma.TruckLaborLogsCreateManyTruckingLogInputEnvelope
  connect?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
}

export type TruckLaborLogsUncheckedCreateNestedManyWithoutTruckingLogInput = {
  create?: Prisma.XOR<Prisma.TruckLaborLogsCreateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput> | Prisma.TruckLaborLogsCreateWithoutTruckingLogInput[] | Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput | Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput[]
  createMany?: Prisma.TruckLaborLogsCreateManyTruckingLogInputEnvelope
  connect?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
}

export type TruckLaborLogsUpdateManyWithoutTruckingLogNestedInput = {
  create?: Prisma.XOR<Prisma.TruckLaborLogsCreateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput> | Prisma.TruckLaborLogsCreateWithoutTruckingLogInput[] | Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput | Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput[]
  upsert?: Prisma.TruckLaborLogsUpsertWithWhereUniqueWithoutTruckingLogInput | Prisma.TruckLaborLogsUpsertWithWhereUniqueWithoutTruckingLogInput[]
  createMany?: Prisma.TruckLaborLogsCreateManyTruckingLogInputEnvelope
  set?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  disconnect?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  delete?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  connect?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  update?: Prisma.TruckLaborLogsUpdateWithWhereUniqueWithoutTruckingLogInput | Prisma.TruckLaborLogsUpdateWithWhereUniqueWithoutTruckingLogInput[]
  updateMany?: Prisma.TruckLaborLogsUpdateManyWithWhereWithoutTruckingLogInput | Prisma.TruckLaborLogsUpdateManyWithWhereWithoutTruckingLogInput[]
  deleteMany?: Prisma.TruckLaborLogsScalarWhereInput | Prisma.TruckLaborLogsScalarWhereInput[]
}

export type TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogNestedInput = {
  create?: Prisma.XOR<Prisma.TruckLaborLogsCreateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput> | Prisma.TruckLaborLogsCreateWithoutTruckingLogInput[] | Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput[]
  connectOrCreate?: Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput | Prisma.TruckLaborLogsCreateOrConnectWithoutTruckingLogInput[]
  upsert?: Prisma.TruckLaborLogsUpsertWithWhereUniqueWithoutTruckingLogInput | Prisma.TruckLaborLogsUpsertWithWhereUniqueWithoutTruckingLogInput[]
  createMany?: Prisma.TruckLaborLogsCreateManyTruckingLogInputEnvelope
  set?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  disconnect?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  delete?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  connect?: Prisma.TruckLaborLogsWhereUniqueInput | Prisma.TruckLaborLogsWhereUniqueInput[]
  update?: Prisma.TruckLaborLogsUpdateWithWhereUniqueWithoutTruckingLogInput | Prisma.TruckLaborLogsUpdateWithWhereUniqueWithoutTruckingLogInput[]
  updateMany?: Prisma.TruckLaborLogsUpdateManyWithWhereWithoutTruckingLogInput | Prisma.TruckLaborLogsUpdateManyWithWhereWithoutTruckingLogInput[]
  deleteMany?: Prisma.TruckLaborLogsScalarWhereInput | Prisma.TruckLaborLogsScalarWhereInput[]
}

export type TruckLaborLogsCreateWithoutTruckingLogInput = {
  id?: string
  type: string
  startTime: Date | string
  endTime?: Date | string | null
}

export type TruckLaborLogsUncheckedCreateWithoutTruckingLogInput = {
  id?: string
  type: string
  startTime: Date | string
  endTime?: Date | string | null
}

export type TruckLaborLogsCreateOrConnectWithoutTruckingLogInput = {
  where: Prisma.TruckLaborLogsWhereUniqueInput
  create: Prisma.XOR<Prisma.TruckLaborLogsCreateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput>
}

export type TruckLaborLogsCreateManyTruckingLogInputEnvelope = {
  data: Prisma.TruckLaborLogsCreateManyTruckingLogInput | Prisma.TruckLaborLogsCreateManyTruckingLogInput[]
  skipDuplicates?: boolean
}

export type TruckLaborLogsUpsertWithWhereUniqueWithoutTruckingLogInput = {
  where: Prisma.TruckLaborLogsWhereUniqueInput
  update: Prisma.XOR<Prisma.TruckLaborLogsUpdateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedUpdateWithoutTruckingLogInput>
  create: Prisma.XOR<Prisma.TruckLaborLogsCreateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedCreateWithoutTruckingLogInput>
}

export type TruckLaborLogsUpdateWithWhereUniqueWithoutTruckingLogInput = {
  where: Prisma.TruckLaborLogsWhereUniqueInput
  data: Prisma.XOR<Prisma.TruckLaborLogsUpdateWithoutTruckingLogInput, Prisma.TruckLaborLogsUncheckedUpdateWithoutTruckingLogInput>
}

export type TruckLaborLogsUpdateManyWithWhereWithoutTruckingLogInput = {
  where: Prisma.TruckLaborLogsScalarWhereInput
  data: Prisma.XOR<Prisma.TruckLaborLogsUpdateManyMutationInput, Prisma.TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogInput>
}

export type TruckLaborLogsScalarWhereInput = {
  AND?: Prisma.TruckLaborLogsScalarWhereInput | Prisma.TruckLaborLogsScalarWhereInput[]
  OR?: Prisma.TruckLaborLogsScalarWhereInput[]
  NOT?: Prisma.TruckLaborLogsScalarWhereInput | Prisma.TruckLaborLogsScalarWhereInput[]
  id?: Prisma.StringFilter<"TruckLaborLogs"> | string
  truckingLogId?: Prisma.StringNullableFilter<"TruckLaborLogs"> | string | null
  type?: Prisma.StringFilter<"TruckLaborLogs"> | string
  startTime?: Prisma.DateTimeFilter<"TruckLaborLogs"> | Date | string
  endTime?: Prisma.DateTimeNullableFilter<"TruckLaborLogs"> | Date | string | null
}

export type TruckLaborLogsCreateManyTruckingLogInput = {
  id?: string
  type: string
  startTime: Date | string
  endTime?: Date | string | null
}

export type TruckLaborLogsUpdateWithoutTruckingLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endTime?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TruckLaborLogsUncheckedUpdateWithoutTruckingLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endTime?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TruckLaborLogsUncheckedUpdateManyWithoutTruckingLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endTime?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type TruckLaborLogsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  truckingLogId?: boolean
  type?: boolean
  startTime?: boolean
  endTime?: boolean
  TruckingLog?: boolean | Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs>
}, ExtArgs["result"]["truckLaborLogs"]>

export type TruckLaborLogsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  truckingLogId?: boolean
  type?: boolean
  startTime?: boolean
  endTime?: boolean
  TruckingLog?: boolean | Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs>
}, ExtArgs["result"]["truckLaborLogs"]>

export type TruckLaborLogsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  truckingLogId?: boolean
  type?: boolean
  startTime?: boolean
  endTime?: boolean
  TruckingLog?: boolean | Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs>
}, ExtArgs["result"]["truckLaborLogs"]>

export type TruckLaborLogsSelectScalar = {
  id?: boolean
  truckingLogId?: boolean
  type?: boolean
  startTime?: boolean
  endTime?: boolean
}

export type TruckLaborLogsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "truckingLogId" | "type" | "startTime" | "endTime", ExtArgs["result"]["truckLaborLogs"]>
export type TruckLaborLogsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  TruckingLog?: boolean | Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs>
}
export type TruckLaborLogsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  TruckingLog?: boolean | Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs>
}
export type TruckLaborLogsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  TruckingLog?: boolean | Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs>
}

export type $TruckLaborLogsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TruckLaborLogs"
  objects: {
    TruckingLog: Prisma.$TruckingLogPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    truckingLogId: string | null
    type: string
    startTime: Date
    endTime: Date | null
  }, ExtArgs["result"]["truckLaborLogs"]>
  composites: {}
}

export type TruckLaborLogsGetPayload<S extends boolean | null | undefined | TruckLaborLogsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload, S>

export type TruckLaborLogsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TruckLaborLogsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TruckLaborLogsCountAggregateInputType | true
  }

export interface TruckLaborLogsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TruckLaborLogs'], meta: { name: 'TruckLaborLogs' } }
  /**
   * Find zero or one TruckLaborLogs that matches the filter.
   * @param {TruckLaborLogsFindUniqueArgs} args - Arguments to find a TruckLaborLogs
   * @example
   * // Get one TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TruckLaborLogsFindUniqueArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TruckLaborLogs that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TruckLaborLogsFindUniqueOrThrowArgs} args - Arguments to find a TruckLaborLogs
   * @example
   * // Get one TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TruckLaborLogsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TruckLaborLogs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckLaborLogsFindFirstArgs} args - Arguments to find a TruckLaborLogs
   * @example
   * // Get one TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TruckLaborLogsFindFirstArgs>(args?: Prisma.SelectSubset<T, TruckLaborLogsFindFirstArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TruckLaborLogs that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckLaborLogsFindFirstOrThrowArgs} args - Arguments to find a TruckLaborLogs
   * @example
   * // Get one TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TruckLaborLogsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TruckLaborLogsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TruckLaborLogs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckLaborLogsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.findMany()
   * 
   * // Get first 10 TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const truckLaborLogsWithIdOnly = await prisma.truckLaborLogs.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TruckLaborLogsFindManyArgs>(args?: Prisma.SelectSubset<T, TruckLaborLogsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TruckLaborLogs.
   * @param {TruckLaborLogsCreateArgs} args - Arguments to create a TruckLaborLogs.
   * @example
   * // Create one TruckLaborLogs
   * const TruckLaborLogs = await prisma.truckLaborLogs.create({
   *   data: {
   *     // ... data to create a TruckLaborLogs
   *   }
   * })
   * 
   */
  create<T extends TruckLaborLogsCreateArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsCreateArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TruckLaborLogs.
   * @param {TruckLaborLogsCreateManyArgs} args - Arguments to create many TruckLaborLogs.
   * @example
   * // Create many TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TruckLaborLogsCreateManyArgs>(args?: Prisma.SelectSubset<T, TruckLaborLogsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TruckLaborLogs and returns the data saved in the database.
   * @param {TruckLaborLogsCreateManyAndReturnArgs} args - Arguments to create many TruckLaborLogs.
   * @example
   * // Create many TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TruckLaborLogs and only return the `id`
   * const truckLaborLogsWithIdOnly = await prisma.truckLaborLogs.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TruckLaborLogsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TruckLaborLogsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TruckLaborLogs.
   * @param {TruckLaborLogsDeleteArgs} args - Arguments to delete one TruckLaborLogs.
   * @example
   * // Delete one TruckLaborLogs
   * const TruckLaborLogs = await prisma.truckLaborLogs.delete({
   *   where: {
   *     // ... filter to delete one TruckLaborLogs
   *   }
   * })
   * 
   */
  delete<T extends TruckLaborLogsDeleteArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsDeleteArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TruckLaborLogs.
   * @param {TruckLaborLogsUpdateArgs} args - Arguments to update one TruckLaborLogs.
   * @example
   * // Update one TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TruckLaborLogsUpdateArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsUpdateArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TruckLaborLogs.
   * @param {TruckLaborLogsDeleteManyArgs} args - Arguments to filter TruckLaborLogs to delete.
   * @example
   * // Delete a few TruckLaborLogs
   * const { count } = await prisma.truckLaborLogs.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TruckLaborLogsDeleteManyArgs>(args?: Prisma.SelectSubset<T, TruckLaborLogsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TruckLaborLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckLaborLogsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TruckLaborLogsUpdateManyArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TruckLaborLogs and returns the data updated in the database.
   * @param {TruckLaborLogsUpdateManyAndReturnArgs} args - Arguments to update many TruckLaborLogs.
   * @example
   * // Update many TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TruckLaborLogs and only return the `id`
   * const truckLaborLogsWithIdOnly = await prisma.truckLaborLogs.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TruckLaborLogsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TruckLaborLogs.
   * @param {TruckLaborLogsUpsertArgs} args - Arguments to update or create a TruckLaborLogs.
   * @example
   * // Update or create a TruckLaborLogs
   * const truckLaborLogs = await prisma.truckLaborLogs.upsert({
   *   create: {
   *     // ... data to create a TruckLaborLogs
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TruckLaborLogs we want to update
   *   }
   * })
   */
  upsert<T extends TruckLaborLogsUpsertArgs>(args: Prisma.SelectSubset<T, TruckLaborLogsUpsertArgs<ExtArgs>>): Prisma.Prisma__TruckLaborLogsClient<runtime.Types.Result.GetResult<Prisma.$TruckLaborLogsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TruckLaborLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckLaborLogsCountArgs} args - Arguments to filter TruckLaborLogs to count.
   * @example
   * // Count the number of TruckLaborLogs
   * const count = await prisma.truckLaborLogs.count({
   *   where: {
   *     // ... the filter for the TruckLaborLogs we want to count
   *   }
   * })
  **/
  count<T extends TruckLaborLogsCountArgs>(
    args?: Prisma.Subset<T, TruckLaborLogsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TruckLaborLogsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TruckLaborLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckLaborLogsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TruckLaborLogsAggregateArgs>(args: Prisma.Subset<T, TruckLaborLogsAggregateArgs>): Prisma.PrismaPromise<GetTruckLaborLogsAggregateType<T>>

  /**
   * Group by TruckLaborLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TruckLaborLogsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TruckLaborLogsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TruckLaborLogsGroupByArgs['orderBy'] }
      : { orderBy?: TruckLaborLogsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TruckLaborLogsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTruckLaborLogsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TruckLaborLogs model
 */
readonly fields: TruckLaborLogsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TruckLaborLogs.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TruckLaborLogsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  TruckingLog<T extends Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TruckLaborLogs$TruckingLogArgs<ExtArgs>>): Prisma.Prisma__TruckingLogClient<runtime.Types.Result.GetResult<Prisma.$TruckingLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TruckLaborLogs model
 */
export interface TruckLaborLogsFieldRefs {
  readonly id: Prisma.FieldRef<"TruckLaborLogs", 'String'>
  readonly truckingLogId: Prisma.FieldRef<"TruckLaborLogs", 'String'>
  readonly type: Prisma.FieldRef<"TruckLaborLogs", 'String'>
  readonly startTime: Prisma.FieldRef<"TruckLaborLogs", 'DateTime'>
  readonly endTime: Prisma.FieldRef<"TruckLaborLogs", 'DateTime'>
}
    

// Custom InputTypes
/**
 * TruckLaborLogs findUnique
 */
export type TruckLaborLogsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * Filter, which TruckLaborLogs to fetch.
   */
  where: Prisma.TruckLaborLogsWhereUniqueInput
}

/**
 * TruckLaborLogs findUniqueOrThrow
 */
export type TruckLaborLogsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * Filter, which TruckLaborLogs to fetch.
   */
  where: Prisma.TruckLaborLogsWhereUniqueInput
}

/**
 * TruckLaborLogs findFirst
 */
export type TruckLaborLogsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * Filter, which TruckLaborLogs to fetch.
   */
  where?: Prisma.TruckLaborLogsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckLaborLogs to fetch.
   */
  orderBy?: Prisma.TruckLaborLogsOrderByWithRelationInput | Prisma.TruckLaborLogsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TruckLaborLogs.
   */
  cursor?: Prisma.TruckLaborLogsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckLaborLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckLaborLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TruckLaborLogs.
   */
  distinct?: Prisma.TruckLaborLogsScalarFieldEnum | Prisma.TruckLaborLogsScalarFieldEnum[]
}

/**
 * TruckLaborLogs findFirstOrThrow
 */
export type TruckLaborLogsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * Filter, which TruckLaborLogs to fetch.
   */
  where?: Prisma.TruckLaborLogsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckLaborLogs to fetch.
   */
  orderBy?: Prisma.TruckLaborLogsOrderByWithRelationInput | Prisma.TruckLaborLogsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TruckLaborLogs.
   */
  cursor?: Prisma.TruckLaborLogsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckLaborLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckLaborLogs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TruckLaborLogs.
   */
  distinct?: Prisma.TruckLaborLogsScalarFieldEnum | Prisma.TruckLaborLogsScalarFieldEnum[]
}

/**
 * TruckLaborLogs findMany
 */
export type TruckLaborLogsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * Filter, which TruckLaborLogs to fetch.
   */
  where?: Prisma.TruckLaborLogsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TruckLaborLogs to fetch.
   */
  orderBy?: Prisma.TruckLaborLogsOrderByWithRelationInput | Prisma.TruckLaborLogsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TruckLaborLogs.
   */
  cursor?: Prisma.TruckLaborLogsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TruckLaborLogs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TruckLaborLogs.
   */
  skip?: number
  distinct?: Prisma.TruckLaborLogsScalarFieldEnum | Prisma.TruckLaborLogsScalarFieldEnum[]
}

/**
 * TruckLaborLogs create
 */
export type TruckLaborLogsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * The data needed to create a TruckLaborLogs.
   */
  data: Prisma.XOR<Prisma.TruckLaborLogsCreateInput, Prisma.TruckLaborLogsUncheckedCreateInput>
}

/**
 * TruckLaborLogs createMany
 */
export type TruckLaborLogsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TruckLaborLogs.
   */
  data: Prisma.TruckLaborLogsCreateManyInput | Prisma.TruckLaborLogsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TruckLaborLogs createManyAndReturn
 */
export type TruckLaborLogsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * The data used to create many TruckLaborLogs.
   */
  data: Prisma.TruckLaborLogsCreateManyInput | Prisma.TruckLaborLogsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TruckLaborLogs update
 */
export type TruckLaborLogsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * The data needed to update a TruckLaborLogs.
   */
  data: Prisma.XOR<Prisma.TruckLaborLogsUpdateInput, Prisma.TruckLaborLogsUncheckedUpdateInput>
  /**
   * Choose, which TruckLaborLogs to update.
   */
  where: Prisma.TruckLaborLogsWhereUniqueInput
}

/**
 * TruckLaborLogs updateMany
 */
export type TruckLaborLogsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TruckLaborLogs.
   */
  data: Prisma.XOR<Prisma.TruckLaborLogsUpdateManyMutationInput, Prisma.TruckLaborLogsUncheckedUpdateManyInput>
  /**
   * Filter which TruckLaborLogs to update
   */
  where?: Prisma.TruckLaborLogsWhereInput
  /**
   * Limit how many TruckLaborLogs to update.
   */
  limit?: number
}

/**
 * TruckLaborLogs updateManyAndReturn
 */
export type TruckLaborLogsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * The data used to update TruckLaborLogs.
   */
  data: Prisma.XOR<Prisma.TruckLaborLogsUpdateManyMutationInput, Prisma.TruckLaborLogsUncheckedUpdateManyInput>
  /**
   * Filter which TruckLaborLogs to update
   */
  where?: Prisma.TruckLaborLogsWhereInput
  /**
   * Limit how many TruckLaborLogs to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TruckLaborLogs upsert
 */
export type TruckLaborLogsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * The filter to search for the TruckLaborLogs to update in case it exists.
   */
  where: Prisma.TruckLaborLogsWhereUniqueInput
  /**
   * In case the TruckLaborLogs found by the `where` argument doesn't exist, create a new TruckLaborLogs with this data.
   */
  create: Prisma.XOR<Prisma.TruckLaborLogsCreateInput, Prisma.TruckLaborLogsUncheckedCreateInput>
  /**
   * In case the TruckLaborLogs was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TruckLaborLogsUpdateInput, Prisma.TruckLaborLogsUncheckedUpdateInput>
}

/**
 * TruckLaborLogs delete
 */
export type TruckLaborLogsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
  /**
   * Filter which TruckLaborLogs to delete.
   */
  where: Prisma.TruckLaborLogsWhereUniqueInput
}

/**
 * TruckLaborLogs deleteMany
 */
export type TruckLaborLogsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TruckLaborLogs to delete
   */
  where?: Prisma.TruckLaborLogsWhereInput
  /**
   * Limit how many TruckLaborLogs to delete.
   */
  limit?: number
}

/**
 * TruckLaborLogs.TruckingLog
 */
export type TruckLaborLogs$TruckingLogArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckingLog
   */
  select?: Prisma.TruckingLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckingLog
   */
  omit?: Prisma.TruckingLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckingLogInclude<ExtArgs> | null
  where?: Prisma.TruckingLogWhereInput
}

/**
 * TruckLaborLogs without action
 */
export type TruckLaborLogsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TruckLaborLogs
   */
  select?: Prisma.TruckLaborLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TruckLaborLogs
   */
  omit?: Prisma.TruckLaborLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TruckLaborLogsInclude<ExtArgs> | null
}
