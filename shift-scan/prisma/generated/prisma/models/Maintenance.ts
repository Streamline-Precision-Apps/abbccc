
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Maintenance` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Maintenance
 * 
 */
export type MaintenanceModel = runtime.Types.Result.DefaultSelection<Prisma.$MaintenancePayload>

export type AggregateMaintenance = {
  _count: MaintenanceCountAggregateOutputType | null
  _avg: MaintenanceAvgAggregateOutputType | null
  _sum: MaintenanceSumAggregateOutputType | null
  _min: MaintenanceMinAggregateOutputType | null
  _max: MaintenanceMaxAggregateOutputType | null
}

export type MaintenanceAvgAggregateOutputType = {
  totalHoursLaboured: number | null
}

export type MaintenanceSumAggregateOutputType = {
  totalHoursLaboured: number | null
}

export type MaintenanceMinAggregateOutputType = {
  id: string | null
  equipmentId: string | null
  equipmentIssue: string | null
  employeeEquipmentLogId: string | null
  additionalInfo: string | null
  location: string | null
  problemDiagnosis: string | null
  solution: string | null
  totalHoursLaboured: number | null
  createdAt: Date | null
  priority: $Enums.Priority | null
  delay: Date | null
  delayReasoning: string | null
  repaired: boolean | null
  selected: boolean | null
  hasBeenDelayed: boolean | null
  createdBy: string | null
}

export type MaintenanceMaxAggregateOutputType = {
  id: string | null
  equipmentId: string | null
  equipmentIssue: string | null
  employeeEquipmentLogId: string | null
  additionalInfo: string | null
  location: string | null
  problemDiagnosis: string | null
  solution: string | null
  totalHoursLaboured: number | null
  createdAt: Date | null
  priority: $Enums.Priority | null
  delay: Date | null
  delayReasoning: string | null
  repaired: boolean | null
  selected: boolean | null
  hasBeenDelayed: boolean | null
  createdBy: string | null
}

export type MaintenanceCountAggregateOutputType = {
  id: number
  equipmentId: number
  equipmentIssue: number
  employeeEquipmentLogId: number
  additionalInfo: number
  location: number
  problemDiagnosis: number
  solution: number
  totalHoursLaboured: number
  createdAt: number
  priority: number
  delay: number
  delayReasoning: number
  repaired: number
  selected: number
  hasBeenDelayed: number
  createdBy: number
  _all: number
}


export type MaintenanceAvgAggregateInputType = {
  totalHoursLaboured?: true
}

export type MaintenanceSumAggregateInputType = {
  totalHoursLaboured?: true
}

export type MaintenanceMinAggregateInputType = {
  id?: true
  equipmentId?: true
  equipmentIssue?: true
  employeeEquipmentLogId?: true
  additionalInfo?: true
  location?: true
  problemDiagnosis?: true
  solution?: true
  totalHoursLaboured?: true
  createdAt?: true
  priority?: true
  delay?: true
  delayReasoning?: true
  repaired?: true
  selected?: true
  hasBeenDelayed?: true
  createdBy?: true
}

export type MaintenanceMaxAggregateInputType = {
  id?: true
  equipmentId?: true
  equipmentIssue?: true
  employeeEquipmentLogId?: true
  additionalInfo?: true
  location?: true
  problemDiagnosis?: true
  solution?: true
  totalHoursLaboured?: true
  createdAt?: true
  priority?: true
  delay?: true
  delayReasoning?: true
  repaired?: true
  selected?: true
  hasBeenDelayed?: true
  createdBy?: true
}

export type MaintenanceCountAggregateInputType = {
  id?: true
  equipmentId?: true
  equipmentIssue?: true
  employeeEquipmentLogId?: true
  additionalInfo?: true
  location?: true
  problemDiagnosis?: true
  solution?: true
  totalHoursLaboured?: true
  createdAt?: true
  priority?: true
  delay?: true
  delayReasoning?: true
  repaired?: true
  selected?: true
  hasBeenDelayed?: true
  createdBy?: true
  _all?: true
}

export type MaintenanceAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Maintenance to aggregate.
   */
  where?: Prisma.MaintenanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Maintenances to fetch.
   */
  orderBy?: Prisma.MaintenanceOrderByWithRelationInput | Prisma.MaintenanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MaintenanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Maintenances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Maintenances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Maintenances
  **/
  _count?: true | MaintenanceCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MaintenanceAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MaintenanceSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MaintenanceMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MaintenanceMaxAggregateInputType
}

export type GetMaintenanceAggregateType<T extends MaintenanceAggregateArgs> = {
      [P in keyof T & keyof AggregateMaintenance]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMaintenance[P]>
    : Prisma.GetScalarType<T[P], AggregateMaintenance[P]>
}




export type MaintenanceGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MaintenanceWhereInput
  orderBy?: Prisma.MaintenanceOrderByWithAggregationInput | Prisma.MaintenanceOrderByWithAggregationInput[]
  by: Prisma.MaintenanceScalarFieldEnum[] | Prisma.MaintenanceScalarFieldEnum
  having?: Prisma.MaintenanceScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MaintenanceCountAggregateInputType | true
  _avg?: MaintenanceAvgAggregateInputType
  _sum?: MaintenanceSumAggregateInputType
  _min?: MaintenanceMinAggregateInputType
  _max?: MaintenanceMaxAggregateInputType
}

export type MaintenanceGroupByOutputType = {
  id: string
  equipmentId: string
  equipmentIssue: string | null
  employeeEquipmentLogId: string | null
  additionalInfo: string | null
  location: string | null
  problemDiagnosis: string | null
  solution: string | null
  totalHoursLaboured: number | null
  createdAt: Date
  priority: $Enums.Priority
  delay: Date | null
  delayReasoning: string | null
  repaired: boolean
  selected: boolean
  hasBeenDelayed: boolean
  createdBy: string | null
  _count: MaintenanceCountAggregateOutputType | null
  _avg: MaintenanceAvgAggregateOutputType | null
  _sum: MaintenanceSumAggregateOutputType | null
  _min: MaintenanceMinAggregateOutputType | null
  _max: MaintenanceMaxAggregateOutputType | null
}

type GetMaintenanceGroupByPayload<T extends MaintenanceGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MaintenanceGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MaintenanceGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MaintenanceGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MaintenanceGroupByOutputType[P]>
      }
    >
  >



export type MaintenanceWhereInput = {
  AND?: Prisma.MaintenanceWhereInput | Prisma.MaintenanceWhereInput[]
  OR?: Prisma.MaintenanceWhereInput[]
  NOT?: Prisma.MaintenanceWhereInput | Prisma.MaintenanceWhereInput[]
  id?: Prisma.StringFilter<"Maintenance"> | string
  equipmentId?: Prisma.StringFilter<"Maintenance"> | string
  equipmentIssue?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  employeeEquipmentLogId?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  additionalInfo?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  location?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  problemDiagnosis?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  solution?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  totalHoursLaboured?: Prisma.FloatNullableFilter<"Maintenance"> | number | null
  createdAt?: Prisma.DateTimeFilter<"Maintenance"> | Date | string
  priority?: Prisma.EnumPriorityFilter<"Maintenance"> | $Enums.Priority
  delay?: Prisma.DateTimeNullableFilter<"Maintenance"> | Date | string | null
  delayReasoning?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  repaired?: Prisma.BoolFilter<"Maintenance"> | boolean
  selected?: Prisma.BoolFilter<"Maintenance"> | boolean
  hasBeenDelayed?: Prisma.BoolFilter<"Maintenance"> | boolean
  createdBy?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogListRelationFilter
  Equipment?: Prisma.XOR<Prisma.EquipmentScalarRelationFilter, Prisma.EquipmentWhereInput>
  MaintenanceLogs?: Prisma.MaintenanceLogListRelationFilter
}

export type MaintenanceOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  equipmentIssue?: Prisma.SortOrderInput | Prisma.SortOrder
  employeeEquipmentLogId?: Prisma.SortOrderInput | Prisma.SortOrder
  additionalInfo?: Prisma.SortOrderInput | Prisma.SortOrder
  location?: Prisma.SortOrderInput | Prisma.SortOrder
  problemDiagnosis?: Prisma.SortOrderInput | Prisma.SortOrder
  solution?: Prisma.SortOrderInput | Prisma.SortOrder
  totalHoursLaboured?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  delay?: Prisma.SortOrderInput | Prisma.SortOrder
  delayReasoning?: Prisma.SortOrderInput | Prisma.SortOrder
  repaired?: Prisma.SortOrder
  selected?: Prisma.SortOrder
  hasBeenDelayed?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogOrderByRelationAggregateInput
  Equipment?: Prisma.EquipmentOrderByWithRelationInput
  MaintenanceLogs?: Prisma.MaintenanceLogOrderByRelationAggregateInput
}

export type MaintenanceWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  employeeEquipmentLogId?: string
  AND?: Prisma.MaintenanceWhereInput | Prisma.MaintenanceWhereInput[]
  OR?: Prisma.MaintenanceWhereInput[]
  NOT?: Prisma.MaintenanceWhereInput | Prisma.MaintenanceWhereInput[]
  equipmentId?: Prisma.StringFilter<"Maintenance"> | string
  equipmentIssue?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  additionalInfo?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  location?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  problemDiagnosis?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  solution?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  totalHoursLaboured?: Prisma.FloatNullableFilter<"Maintenance"> | number | null
  createdAt?: Prisma.DateTimeFilter<"Maintenance"> | Date | string
  priority?: Prisma.EnumPriorityFilter<"Maintenance"> | $Enums.Priority
  delay?: Prisma.DateTimeNullableFilter<"Maintenance"> | Date | string | null
  delayReasoning?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  repaired?: Prisma.BoolFilter<"Maintenance"> | boolean
  selected?: Prisma.BoolFilter<"Maintenance"> | boolean
  hasBeenDelayed?: Prisma.BoolFilter<"Maintenance"> | boolean
  createdBy?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogListRelationFilter
  Equipment?: Prisma.XOR<Prisma.EquipmentScalarRelationFilter, Prisma.EquipmentWhereInput>
  MaintenanceLogs?: Prisma.MaintenanceLogListRelationFilter
}, "id" | "employeeEquipmentLogId">

export type MaintenanceOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  equipmentIssue?: Prisma.SortOrderInput | Prisma.SortOrder
  employeeEquipmentLogId?: Prisma.SortOrderInput | Prisma.SortOrder
  additionalInfo?: Prisma.SortOrderInput | Prisma.SortOrder
  location?: Prisma.SortOrderInput | Prisma.SortOrder
  problemDiagnosis?: Prisma.SortOrderInput | Prisma.SortOrder
  solution?: Prisma.SortOrderInput | Prisma.SortOrder
  totalHoursLaboured?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  delay?: Prisma.SortOrderInput | Prisma.SortOrder
  delayReasoning?: Prisma.SortOrderInput | Prisma.SortOrder
  repaired?: Prisma.SortOrder
  selected?: Prisma.SortOrder
  hasBeenDelayed?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.MaintenanceCountOrderByAggregateInput
  _avg?: Prisma.MaintenanceAvgOrderByAggregateInput
  _max?: Prisma.MaintenanceMaxOrderByAggregateInput
  _min?: Prisma.MaintenanceMinOrderByAggregateInput
  _sum?: Prisma.MaintenanceSumOrderByAggregateInput
}

export type MaintenanceScalarWhereWithAggregatesInput = {
  AND?: Prisma.MaintenanceScalarWhereWithAggregatesInput | Prisma.MaintenanceScalarWhereWithAggregatesInput[]
  OR?: Prisma.MaintenanceScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MaintenanceScalarWhereWithAggregatesInput | Prisma.MaintenanceScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Maintenance"> | string
  equipmentId?: Prisma.StringWithAggregatesFilter<"Maintenance"> | string
  equipmentIssue?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  employeeEquipmentLogId?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  additionalInfo?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  location?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  problemDiagnosis?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  solution?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  totalHoursLaboured?: Prisma.FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Maintenance"> | Date | string
  priority?: Prisma.EnumPriorityWithAggregatesFilter<"Maintenance"> | $Enums.Priority
  delay?: Prisma.DateTimeNullableWithAggregatesFilter<"Maintenance"> | Date | string | null
  delayReasoning?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  repaired?: Prisma.BoolWithAggregatesFilter<"Maintenance"> | boolean
  selected?: Prisma.BoolWithAggregatesFilter<"Maintenance"> | boolean
  hasBeenDelayed?: Prisma.BoolWithAggregatesFilter<"Maintenance"> | boolean
  createdBy?: Prisma.StringNullableWithAggregatesFilter<"Maintenance"> | string | null
}

export type MaintenanceCreateInput = {
  id?: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutMaintenanceInput
  Equipment: Prisma.EquipmentCreateNestedOneWithoutMaintenancesInput
  MaintenanceLogs?: Prisma.MaintenanceLogCreateNestedManyWithoutMaintenanceInput
}

export type MaintenanceUncheckedCreateInput = {
  id?: string
  equipmentId: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutMaintenanceInput
  MaintenanceLogs?: Prisma.MaintenanceLogUncheckedCreateNestedManyWithoutMaintenanceInput
}

export type MaintenanceUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUpdateManyWithoutMaintenanceNestedInput
  Equipment?: Prisma.EquipmentUpdateOneRequiredWithoutMaintenancesNestedInput
  MaintenanceLogs?: Prisma.MaintenanceLogUpdateManyWithoutMaintenanceNestedInput
}

export type MaintenanceUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutMaintenanceNestedInput
  MaintenanceLogs?: Prisma.MaintenanceLogUncheckedUpdateManyWithoutMaintenanceNestedInput
}

export type MaintenanceCreateManyInput = {
  id?: string
  equipmentId: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
}

export type MaintenanceUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type MaintenanceUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type MaintenanceListRelationFilter = {
  every?: Prisma.MaintenanceWhereInput
  some?: Prisma.MaintenanceWhereInput
  none?: Prisma.MaintenanceWhereInput
}

export type MaintenanceOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MaintenanceNullableScalarRelationFilter = {
  is?: Prisma.MaintenanceWhereInput | null
  isNot?: Prisma.MaintenanceWhereInput | null
}

export type MaintenanceScalarRelationFilter = {
  is?: Prisma.MaintenanceWhereInput
  isNot?: Prisma.MaintenanceWhereInput
}

export type MaintenanceCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  equipmentIssue?: Prisma.SortOrder
  employeeEquipmentLogId?: Prisma.SortOrder
  additionalInfo?: Prisma.SortOrder
  location?: Prisma.SortOrder
  problemDiagnosis?: Prisma.SortOrder
  solution?: Prisma.SortOrder
  totalHoursLaboured?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  delay?: Prisma.SortOrder
  delayReasoning?: Prisma.SortOrder
  repaired?: Prisma.SortOrder
  selected?: Prisma.SortOrder
  hasBeenDelayed?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
}

export type MaintenanceAvgOrderByAggregateInput = {
  totalHoursLaboured?: Prisma.SortOrder
}

export type MaintenanceMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  equipmentIssue?: Prisma.SortOrder
  employeeEquipmentLogId?: Prisma.SortOrder
  additionalInfo?: Prisma.SortOrder
  location?: Prisma.SortOrder
  problemDiagnosis?: Prisma.SortOrder
  solution?: Prisma.SortOrder
  totalHoursLaboured?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  delay?: Prisma.SortOrder
  delayReasoning?: Prisma.SortOrder
  repaired?: Prisma.SortOrder
  selected?: Prisma.SortOrder
  hasBeenDelayed?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
}

export type MaintenanceMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  equipmentId?: Prisma.SortOrder
  equipmentIssue?: Prisma.SortOrder
  employeeEquipmentLogId?: Prisma.SortOrder
  additionalInfo?: Prisma.SortOrder
  location?: Prisma.SortOrder
  problemDiagnosis?: Prisma.SortOrder
  solution?: Prisma.SortOrder
  totalHoursLaboured?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  delay?: Prisma.SortOrder
  delayReasoning?: Prisma.SortOrder
  repaired?: Prisma.SortOrder
  selected?: Prisma.SortOrder
  hasBeenDelayed?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
}

export type MaintenanceSumOrderByAggregateInput = {
  totalHoursLaboured?: Prisma.SortOrder
}

export type MaintenanceCreateNestedManyWithoutEquipmentInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutEquipmentInput, Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput> | Prisma.MaintenanceCreateWithoutEquipmentInput[] | Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput | Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput[]
  createMany?: Prisma.MaintenanceCreateManyEquipmentInputEnvelope
  connect?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
}

export type MaintenanceUncheckedCreateNestedManyWithoutEquipmentInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutEquipmentInput, Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput> | Prisma.MaintenanceCreateWithoutEquipmentInput[] | Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput | Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput[]
  createMany?: Prisma.MaintenanceCreateManyEquipmentInputEnvelope
  connect?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
}

export type MaintenanceUpdateManyWithoutEquipmentNestedInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutEquipmentInput, Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput> | Prisma.MaintenanceCreateWithoutEquipmentInput[] | Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput | Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput[]
  upsert?: Prisma.MaintenanceUpsertWithWhereUniqueWithoutEquipmentInput | Prisma.MaintenanceUpsertWithWhereUniqueWithoutEquipmentInput[]
  createMany?: Prisma.MaintenanceCreateManyEquipmentInputEnvelope
  set?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  disconnect?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  delete?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  connect?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  update?: Prisma.MaintenanceUpdateWithWhereUniqueWithoutEquipmentInput | Prisma.MaintenanceUpdateWithWhereUniqueWithoutEquipmentInput[]
  updateMany?: Prisma.MaintenanceUpdateManyWithWhereWithoutEquipmentInput | Prisma.MaintenanceUpdateManyWithWhereWithoutEquipmentInput[]
  deleteMany?: Prisma.MaintenanceScalarWhereInput | Prisma.MaintenanceScalarWhereInput[]
}

export type MaintenanceUncheckedUpdateManyWithoutEquipmentNestedInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutEquipmentInput, Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput> | Prisma.MaintenanceCreateWithoutEquipmentInput[] | Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput[]
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput | Prisma.MaintenanceCreateOrConnectWithoutEquipmentInput[]
  upsert?: Prisma.MaintenanceUpsertWithWhereUniqueWithoutEquipmentInput | Prisma.MaintenanceUpsertWithWhereUniqueWithoutEquipmentInput[]
  createMany?: Prisma.MaintenanceCreateManyEquipmentInputEnvelope
  set?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  disconnect?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  delete?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  connect?: Prisma.MaintenanceWhereUniqueInput | Prisma.MaintenanceWhereUniqueInput[]
  update?: Prisma.MaintenanceUpdateWithWhereUniqueWithoutEquipmentInput | Prisma.MaintenanceUpdateWithWhereUniqueWithoutEquipmentInput[]
  updateMany?: Prisma.MaintenanceUpdateManyWithWhereWithoutEquipmentInput | Prisma.MaintenanceUpdateManyWithWhereWithoutEquipmentInput[]
  deleteMany?: Prisma.MaintenanceScalarWhereInput | Prisma.MaintenanceScalarWhereInput[]
}

export type MaintenanceCreateNestedOneWithoutEmployeeEquipmentLogInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutEmployeeEquipmentLogInput, Prisma.MaintenanceUncheckedCreateWithoutEmployeeEquipmentLogInput>
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutEmployeeEquipmentLogInput
  connect?: Prisma.MaintenanceWhereUniqueInput
}

export type MaintenanceUpdateOneWithoutEmployeeEquipmentLogNestedInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutEmployeeEquipmentLogInput, Prisma.MaintenanceUncheckedCreateWithoutEmployeeEquipmentLogInput>
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutEmployeeEquipmentLogInput
  upsert?: Prisma.MaintenanceUpsertWithoutEmployeeEquipmentLogInput
  disconnect?: Prisma.MaintenanceWhereInput | boolean
  delete?: Prisma.MaintenanceWhereInput | boolean
  connect?: Prisma.MaintenanceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MaintenanceUpdateToOneWithWhereWithoutEmployeeEquipmentLogInput, Prisma.MaintenanceUpdateWithoutEmployeeEquipmentLogInput>, Prisma.MaintenanceUncheckedUpdateWithoutEmployeeEquipmentLogInput>
}

export type MaintenanceCreateNestedOneWithoutMaintenanceLogsInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutMaintenanceLogsInput, Prisma.MaintenanceUncheckedCreateWithoutMaintenanceLogsInput>
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutMaintenanceLogsInput
  connect?: Prisma.MaintenanceWhereUniqueInput
}

export type MaintenanceUpdateOneRequiredWithoutMaintenanceLogsNestedInput = {
  create?: Prisma.XOR<Prisma.MaintenanceCreateWithoutMaintenanceLogsInput, Prisma.MaintenanceUncheckedCreateWithoutMaintenanceLogsInput>
  connectOrCreate?: Prisma.MaintenanceCreateOrConnectWithoutMaintenanceLogsInput
  upsert?: Prisma.MaintenanceUpsertWithoutMaintenanceLogsInput
  connect?: Prisma.MaintenanceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MaintenanceUpdateToOneWithWhereWithoutMaintenanceLogsInput, Prisma.MaintenanceUpdateWithoutMaintenanceLogsInput>, Prisma.MaintenanceUncheckedUpdateWithoutMaintenanceLogsInput>
}

export type EnumPriorityFieldUpdateOperationsInput = {
  set?: $Enums.Priority
}

export type MaintenanceCreateWithoutEquipmentInput = {
  id?: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutMaintenanceInput
  MaintenanceLogs?: Prisma.MaintenanceLogCreateNestedManyWithoutMaintenanceInput
}

export type MaintenanceUncheckedCreateWithoutEquipmentInput = {
  id?: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutMaintenanceInput
  MaintenanceLogs?: Prisma.MaintenanceLogUncheckedCreateNestedManyWithoutMaintenanceInput
}

export type MaintenanceCreateOrConnectWithoutEquipmentInput = {
  where: Prisma.MaintenanceWhereUniqueInput
  create: Prisma.XOR<Prisma.MaintenanceCreateWithoutEquipmentInput, Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput>
}

export type MaintenanceCreateManyEquipmentInputEnvelope = {
  data: Prisma.MaintenanceCreateManyEquipmentInput | Prisma.MaintenanceCreateManyEquipmentInput[]
  skipDuplicates?: boolean
}

export type MaintenanceUpsertWithWhereUniqueWithoutEquipmentInput = {
  where: Prisma.MaintenanceWhereUniqueInput
  update: Prisma.XOR<Prisma.MaintenanceUpdateWithoutEquipmentInput, Prisma.MaintenanceUncheckedUpdateWithoutEquipmentInput>
  create: Prisma.XOR<Prisma.MaintenanceCreateWithoutEquipmentInput, Prisma.MaintenanceUncheckedCreateWithoutEquipmentInput>
}

export type MaintenanceUpdateWithWhereUniqueWithoutEquipmentInput = {
  where: Prisma.MaintenanceWhereUniqueInput
  data: Prisma.XOR<Prisma.MaintenanceUpdateWithoutEquipmentInput, Prisma.MaintenanceUncheckedUpdateWithoutEquipmentInput>
}

export type MaintenanceUpdateManyWithWhereWithoutEquipmentInput = {
  where: Prisma.MaintenanceScalarWhereInput
  data: Prisma.XOR<Prisma.MaintenanceUpdateManyMutationInput, Prisma.MaintenanceUncheckedUpdateManyWithoutEquipmentInput>
}

export type MaintenanceScalarWhereInput = {
  AND?: Prisma.MaintenanceScalarWhereInput | Prisma.MaintenanceScalarWhereInput[]
  OR?: Prisma.MaintenanceScalarWhereInput[]
  NOT?: Prisma.MaintenanceScalarWhereInput | Prisma.MaintenanceScalarWhereInput[]
  id?: Prisma.StringFilter<"Maintenance"> | string
  equipmentId?: Prisma.StringFilter<"Maintenance"> | string
  equipmentIssue?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  employeeEquipmentLogId?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  additionalInfo?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  location?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  problemDiagnosis?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  solution?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  totalHoursLaboured?: Prisma.FloatNullableFilter<"Maintenance"> | number | null
  createdAt?: Prisma.DateTimeFilter<"Maintenance"> | Date | string
  priority?: Prisma.EnumPriorityFilter<"Maintenance"> | $Enums.Priority
  delay?: Prisma.DateTimeNullableFilter<"Maintenance"> | Date | string | null
  delayReasoning?: Prisma.StringNullableFilter<"Maintenance"> | string | null
  repaired?: Prisma.BoolFilter<"Maintenance"> | boolean
  selected?: Prisma.BoolFilter<"Maintenance"> | boolean
  hasBeenDelayed?: Prisma.BoolFilter<"Maintenance"> | boolean
  createdBy?: Prisma.StringNullableFilter<"Maintenance"> | string | null
}

export type MaintenanceCreateWithoutEmployeeEquipmentLogInput = {
  id?: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  Equipment: Prisma.EquipmentCreateNestedOneWithoutMaintenancesInput
  MaintenanceLogs?: Prisma.MaintenanceLogCreateNestedManyWithoutMaintenanceInput
}

export type MaintenanceUncheckedCreateWithoutEmployeeEquipmentLogInput = {
  id?: string
  equipmentId: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  MaintenanceLogs?: Prisma.MaintenanceLogUncheckedCreateNestedManyWithoutMaintenanceInput
}

export type MaintenanceCreateOrConnectWithoutEmployeeEquipmentLogInput = {
  where: Prisma.MaintenanceWhereUniqueInput
  create: Prisma.XOR<Prisma.MaintenanceCreateWithoutEmployeeEquipmentLogInput, Prisma.MaintenanceUncheckedCreateWithoutEmployeeEquipmentLogInput>
}

export type MaintenanceUpsertWithoutEmployeeEquipmentLogInput = {
  update: Prisma.XOR<Prisma.MaintenanceUpdateWithoutEmployeeEquipmentLogInput, Prisma.MaintenanceUncheckedUpdateWithoutEmployeeEquipmentLogInput>
  create: Prisma.XOR<Prisma.MaintenanceCreateWithoutEmployeeEquipmentLogInput, Prisma.MaintenanceUncheckedCreateWithoutEmployeeEquipmentLogInput>
  where?: Prisma.MaintenanceWhereInput
}

export type MaintenanceUpdateToOneWithWhereWithoutEmployeeEquipmentLogInput = {
  where?: Prisma.MaintenanceWhereInput
  data: Prisma.XOR<Prisma.MaintenanceUpdateWithoutEmployeeEquipmentLogInput, Prisma.MaintenanceUncheckedUpdateWithoutEmployeeEquipmentLogInput>
}

export type MaintenanceUpdateWithoutEmployeeEquipmentLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Equipment?: Prisma.EquipmentUpdateOneRequiredWithoutMaintenancesNestedInput
  MaintenanceLogs?: Prisma.MaintenanceLogUpdateManyWithoutMaintenanceNestedInput
}

export type MaintenanceUncheckedUpdateWithoutEmployeeEquipmentLogInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  MaintenanceLogs?: Prisma.MaintenanceLogUncheckedUpdateManyWithoutMaintenanceNestedInput
}

export type MaintenanceCreateWithoutMaintenanceLogsInput = {
  id?: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogCreateNestedManyWithoutMaintenanceInput
  Equipment: Prisma.EquipmentCreateNestedOneWithoutMaintenancesInput
}

export type MaintenanceUncheckedCreateWithoutMaintenanceLogsInput = {
  id?: string
  equipmentId: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUncheckedCreateNestedManyWithoutMaintenanceInput
}

export type MaintenanceCreateOrConnectWithoutMaintenanceLogsInput = {
  where: Prisma.MaintenanceWhereUniqueInput
  create: Prisma.XOR<Prisma.MaintenanceCreateWithoutMaintenanceLogsInput, Prisma.MaintenanceUncheckedCreateWithoutMaintenanceLogsInput>
}

export type MaintenanceUpsertWithoutMaintenanceLogsInput = {
  update: Prisma.XOR<Prisma.MaintenanceUpdateWithoutMaintenanceLogsInput, Prisma.MaintenanceUncheckedUpdateWithoutMaintenanceLogsInput>
  create: Prisma.XOR<Prisma.MaintenanceCreateWithoutMaintenanceLogsInput, Prisma.MaintenanceUncheckedCreateWithoutMaintenanceLogsInput>
  where?: Prisma.MaintenanceWhereInput
}

export type MaintenanceUpdateToOneWithWhereWithoutMaintenanceLogsInput = {
  where?: Prisma.MaintenanceWhereInput
  data: Prisma.XOR<Prisma.MaintenanceUpdateWithoutMaintenanceLogsInput, Prisma.MaintenanceUncheckedUpdateWithoutMaintenanceLogsInput>
}

export type MaintenanceUpdateWithoutMaintenanceLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUpdateManyWithoutMaintenanceNestedInput
  Equipment?: Prisma.EquipmentUpdateOneRequiredWithoutMaintenancesNestedInput
}

export type MaintenanceUncheckedUpdateWithoutMaintenanceLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentId?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutMaintenanceNestedInput
}

export type MaintenanceCreateManyEquipmentInput = {
  id?: string
  equipmentIssue?: string | null
  employeeEquipmentLogId?: string | null
  additionalInfo?: string | null
  location?: string | null
  problemDiagnosis?: string | null
  solution?: string | null
  totalHoursLaboured?: number | null
  createdAt?: Date | string
  priority: $Enums.Priority
  delay?: Date | string | null
  delayReasoning?: string | null
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: string | null
}

export type MaintenanceUpdateWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUpdateManyWithoutMaintenanceNestedInput
  MaintenanceLogs?: Prisma.MaintenanceLogUpdateManyWithoutMaintenanceNestedInput
}

export type MaintenanceUncheckedUpdateWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  EmployeeEquipmentLog?: Prisma.EmployeeEquipmentLogUncheckedUpdateManyWithoutMaintenanceNestedInput
  MaintenanceLogs?: Prisma.MaintenanceLogUncheckedUpdateManyWithoutMaintenanceNestedInput
}

export type MaintenanceUncheckedUpdateManyWithoutEquipmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  equipmentIssue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeEquipmentLogId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  additionalInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  problemDiagnosis?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  solution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  totalHoursLaboured?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  priority?: Prisma.EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
  delay?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  delayReasoning?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  repaired?: Prisma.BoolFieldUpdateOperationsInput | boolean
  selected?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hasBeenDelayed?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type MaintenanceCountOutputType
 */

export type MaintenanceCountOutputType = {
  EmployeeEquipmentLog: number
  MaintenanceLogs: number
}

export type MaintenanceCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EmployeeEquipmentLog?: boolean | MaintenanceCountOutputTypeCountEmployeeEquipmentLogArgs
  MaintenanceLogs?: boolean | MaintenanceCountOutputTypeCountMaintenanceLogsArgs
}

/**
 * MaintenanceCountOutputType without action
 */
export type MaintenanceCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MaintenanceCountOutputType
   */
  select?: Prisma.MaintenanceCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MaintenanceCountOutputType without action
 */
export type MaintenanceCountOutputTypeCountEmployeeEquipmentLogArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EmployeeEquipmentLogWhereInput
}

/**
 * MaintenanceCountOutputType without action
 */
export type MaintenanceCountOutputTypeCountMaintenanceLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MaintenanceLogWhereInput
}


export type MaintenanceSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  equipmentId?: boolean
  equipmentIssue?: boolean
  employeeEquipmentLogId?: boolean
  additionalInfo?: boolean
  location?: boolean
  problemDiagnosis?: boolean
  solution?: boolean
  totalHoursLaboured?: boolean
  createdAt?: boolean
  priority?: boolean
  delay?: boolean
  delayReasoning?: boolean
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: boolean
  EmployeeEquipmentLog?: boolean | Prisma.Maintenance$EmployeeEquipmentLogArgs<ExtArgs>
  Equipment?: boolean | Prisma.EquipmentDefaultArgs<ExtArgs>
  MaintenanceLogs?: boolean | Prisma.Maintenance$MaintenanceLogsArgs<ExtArgs>
  _count?: boolean | Prisma.MaintenanceCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["maintenance"]>

export type MaintenanceSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  equipmentId?: boolean
  equipmentIssue?: boolean
  employeeEquipmentLogId?: boolean
  additionalInfo?: boolean
  location?: boolean
  problemDiagnosis?: boolean
  solution?: boolean
  totalHoursLaboured?: boolean
  createdAt?: boolean
  priority?: boolean
  delay?: boolean
  delayReasoning?: boolean
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: boolean
  Equipment?: boolean | Prisma.EquipmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["maintenance"]>

export type MaintenanceSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  equipmentId?: boolean
  equipmentIssue?: boolean
  employeeEquipmentLogId?: boolean
  additionalInfo?: boolean
  location?: boolean
  problemDiagnosis?: boolean
  solution?: boolean
  totalHoursLaboured?: boolean
  createdAt?: boolean
  priority?: boolean
  delay?: boolean
  delayReasoning?: boolean
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: boolean
  Equipment?: boolean | Prisma.EquipmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["maintenance"]>

export type MaintenanceSelectScalar = {
  id?: boolean
  equipmentId?: boolean
  equipmentIssue?: boolean
  employeeEquipmentLogId?: boolean
  additionalInfo?: boolean
  location?: boolean
  problemDiagnosis?: boolean
  solution?: boolean
  totalHoursLaboured?: boolean
  createdAt?: boolean
  priority?: boolean
  delay?: boolean
  delayReasoning?: boolean
  repaired?: boolean
  selected?: boolean
  hasBeenDelayed?: boolean
  createdBy?: boolean
}

export type MaintenanceOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "equipmentId" | "equipmentIssue" | "employeeEquipmentLogId" | "additionalInfo" | "location" | "problemDiagnosis" | "solution" | "totalHoursLaboured" | "createdAt" | "priority" | "delay" | "delayReasoning" | "repaired" | "selected" | "hasBeenDelayed" | "createdBy", ExtArgs["result"]["maintenance"]>
export type MaintenanceInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EmployeeEquipmentLog?: boolean | Prisma.Maintenance$EmployeeEquipmentLogArgs<ExtArgs>
  Equipment?: boolean | Prisma.EquipmentDefaultArgs<ExtArgs>
  MaintenanceLogs?: boolean | Prisma.Maintenance$MaintenanceLogsArgs<ExtArgs>
  _count?: boolean | Prisma.MaintenanceCountOutputTypeDefaultArgs<ExtArgs>
}
export type MaintenanceIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Equipment?: boolean | Prisma.EquipmentDefaultArgs<ExtArgs>
}
export type MaintenanceIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Equipment?: boolean | Prisma.EquipmentDefaultArgs<ExtArgs>
}

export type $MaintenancePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Maintenance"
  objects: {
    EmployeeEquipmentLog: Prisma.$EmployeeEquipmentLogPayload<ExtArgs>[]
    Equipment: Prisma.$EquipmentPayload<ExtArgs>
    MaintenanceLogs: Prisma.$MaintenanceLogPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    equipmentId: string
    equipmentIssue: string | null
    employeeEquipmentLogId: string | null
    additionalInfo: string | null
    location: string | null
    problemDiagnosis: string | null
    solution: string | null
    totalHoursLaboured: number | null
    createdAt: Date
    priority: $Enums.Priority
    delay: Date | null
    delayReasoning: string | null
    repaired: boolean
    selected: boolean
    hasBeenDelayed: boolean
    createdBy: string | null
  }, ExtArgs["result"]["maintenance"]>
  composites: {}
}

export type MaintenanceGetPayload<S extends boolean | null | undefined | MaintenanceDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MaintenancePayload, S>

export type MaintenanceCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MaintenanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MaintenanceCountAggregateInputType | true
  }

export interface MaintenanceDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Maintenance'], meta: { name: 'Maintenance' } }
  /**
   * Find zero or one Maintenance that matches the filter.
   * @param {MaintenanceFindUniqueArgs} args - Arguments to find a Maintenance
   * @example
   * // Get one Maintenance
   * const maintenance = await prisma.maintenance.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MaintenanceFindUniqueArgs>(args: Prisma.SelectSubset<T, MaintenanceFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Maintenance that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MaintenanceFindUniqueOrThrowArgs} args - Arguments to find a Maintenance
   * @example
   * // Get one Maintenance
   * const maintenance = await prisma.maintenance.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MaintenanceFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MaintenanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Maintenance that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MaintenanceFindFirstArgs} args - Arguments to find a Maintenance
   * @example
   * // Get one Maintenance
   * const maintenance = await prisma.maintenance.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MaintenanceFindFirstArgs>(args?: Prisma.SelectSubset<T, MaintenanceFindFirstArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Maintenance that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MaintenanceFindFirstOrThrowArgs} args - Arguments to find a Maintenance
   * @example
   * // Get one Maintenance
   * const maintenance = await prisma.maintenance.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MaintenanceFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MaintenanceFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Maintenances that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MaintenanceFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Maintenances
   * const maintenances = await prisma.maintenance.findMany()
   * 
   * // Get first 10 Maintenances
   * const maintenances = await prisma.maintenance.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const maintenanceWithIdOnly = await prisma.maintenance.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MaintenanceFindManyArgs>(args?: Prisma.SelectSubset<T, MaintenanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Maintenance.
   * @param {MaintenanceCreateArgs} args - Arguments to create a Maintenance.
   * @example
   * // Create one Maintenance
   * const Maintenance = await prisma.maintenance.create({
   *   data: {
   *     // ... data to create a Maintenance
   *   }
   * })
   * 
   */
  create<T extends MaintenanceCreateArgs>(args: Prisma.SelectSubset<T, MaintenanceCreateArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Maintenances.
   * @param {MaintenanceCreateManyArgs} args - Arguments to create many Maintenances.
   * @example
   * // Create many Maintenances
   * const maintenance = await prisma.maintenance.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MaintenanceCreateManyArgs>(args?: Prisma.SelectSubset<T, MaintenanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Maintenances and returns the data saved in the database.
   * @param {MaintenanceCreateManyAndReturnArgs} args - Arguments to create many Maintenances.
   * @example
   * // Create many Maintenances
   * const maintenance = await prisma.maintenance.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Maintenances and only return the `id`
   * const maintenanceWithIdOnly = await prisma.maintenance.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MaintenanceCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MaintenanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Maintenance.
   * @param {MaintenanceDeleteArgs} args - Arguments to delete one Maintenance.
   * @example
   * // Delete one Maintenance
   * const Maintenance = await prisma.maintenance.delete({
   *   where: {
   *     // ... filter to delete one Maintenance
   *   }
   * })
   * 
   */
  delete<T extends MaintenanceDeleteArgs>(args: Prisma.SelectSubset<T, MaintenanceDeleteArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Maintenance.
   * @param {MaintenanceUpdateArgs} args - Arguments to update one Maintenance.
   * @example
   * // Update one Maintenance
   * const maintenance = await prisma.maintenance.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MaintenanceUpdateArgs>(args: Prisma.SelectSubset<T, MaintenanceUpdateArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Maintenances.
   * @param {MaintenanceDeleteManyArgs} args - Arguments to filter Maintenances to delete.
   * @example
   * // Delete a few Maintenances
   * const { count } = await prisma.maintenance.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MaintenanceDeleteManyArgs>(args?: Prisma.SelectSubset<T, MaintenanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Maintenances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MaintenanceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Maintenances
   * const maintenance = await prisma.maintenance.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MaintenanceUpdateManyArgs>(args: Prisma.SelectSubset<T, MaintenanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Maintenances and returns the data updated in the database.
   * @param {MaintenanceUpdateManyAndReturnArgs} args - Arguments to update many Maintenances.
   * @example
   * // Update many Maintenances
   * const maintenance = await prisma.maintenance.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Maintenances and only return the `id`
   * const maintenanceWithIdOnly = await prisma.maintenance.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MaintenanceUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MaintenanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Maintenance.
   * @param {MaintenanceUpsertArgs} args - Arguments to update or create a Maintenance.
   * @example
   * // Update or create a Maintenance
   * const maintenance = await prisma.maintenance.upsert({
   *   create: {
   *     // ... data to create a Maintenance
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Maintenance we want to update
   *   }
   * })
   */
  upsert<T extends MaintenanceUpsertArgs>(args: Prisma.SelectSubset<T, MaintenanceUpsertArgs<ExtArgs>>): Prisma.Prisma__MaintenanceClient<runtime.Types.Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Maintenances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MaintenanceCountArgs} args - Arguments to filter Maintenances to count.
   * @example
   * // Count the number of Maintenances
   * const count = await prisma.maintenance.count({
   *   where: {
   *     // ... the filter for the Maintenances we want to count
   *   }
   * })
  **/
  count<T extends MaintenanceCountArgs>(
    args?: Prisma.Subset<T, MaintenanceCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MaintenanceCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Maintenance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MaintenanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MaintenanceAggregateArgs>(args: Prisma.Subset<T, MaintenanceAggregateArgs>): Prisma.PrismaPromise<GetMaintenanceAggregateType<T>>

  /**
   * Group by Maintenance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MaintenanceGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MaintenanceGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MaintenanceGroupByArgs['orderBy'] }
      : { orderBy?: MaintenanceGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MaintenanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaintenanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Maintenance model
 */
readonly fields: MaintenanceFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Maintenance.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MaintenanceClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  EmployeeEquipmentLog<T extends Prisma.Maintenance$EmployeeEquipmentLogArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Maintenance$EmployeeEquipmentLogArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EmployeeEquipmentLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Equipment<T extends Prisma.EquipmentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EquipmentDefaultArgs<ExtArgs>>): Prisma.Prisma__EquipmentClient<runtime.Types.Result.GetResult<Prisma.$EquipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  MaintenanceLogs<T extends Prisma.Maintenance$MaintenanceLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Maintenance$MaintenanceLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MaintenanceLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Maintenance model
 */
export interface MaintenanceFieldRefs {
  readonly id: Prisma.FieldRef<"Maintenance", 'String'>
  readonly equipmentId: Prisma.FieldRef<"Maintenance", 'String'>
  readonly equipmentIssue: Prisma.FieldRef<"Maintenance", 'String'>
  readonly employeeEquipmentLogId: Prisma.FieldRef<"Maintenance", 'String'>
  readonly additionalInfo: Prisma.FieldRef<"Maintenance", 'String'>
  readonly location: Prisma.FieldRef<"Maintenance", 'String'>
  readonly problemDiagnosis: Prisma.FieldRef<"Maintenance", 'String'>
  readonly solution: Prisma.FieldRef<"Maintenance", 'String'>
  readonly totalHoursLaboured: Prisma.FieldRef<"Maintenance", 'Float'>
  readonly createdAt: Prisma.FieldRef<"Maintenance", 'DateTime'>
  readonly priority: Prisma.FieldRef<"Maintenance", 'Priority'>
  readonly delay: Prisma.FieldRef<"Maintenance", 'DateTime'>
  readonly delayReasoning: Prisma.FieldRef<"Maintenance", 'String'>
  readonly repaired: Prisma.FieldRef<"Maintenance", 'Boolean'>
  readonly selected: Prisma.FieldRef<"Maintenance", 'Boolean'>
  readonly hasBeenDelayed: Prisma.FieldRef<"Maintenance", 'Boolean'>
  readonly createdBy: Prisma.FieldRef<"Maintenance", 'String'>
}
    

// Custom InputTypes
/**
 * Maintenance findUnique
 */
export type MaintenanceFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * Filter, which Maintenance to fetch.
   */
  where: Prisma.MaintenanceWhereUniqueInput
}

/**
 * Maintenance findUniqueOrThrow
 */
export type MaintenanceFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * Filter, which Maintenance to fetch.
   */
  where: Prisma.MaintenanceWhereUniqueInput
}

/**
 * Maintenance findFirst
 */
export type MaintenanceFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * Filter, which Maintenance to fetch.
   */
  where?: Prisma.MaintenanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Maintenances to fetch.
   */
  orderBy?: Prisma.MaintenanceOrderByWithRelationInput | Prisma.MaintenanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Maintenances.
   */
  cursor?: Prisma.MaintenanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Maintenances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Maintenances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Maintenances.
   */
  distinct?: Prisma.MaintenanceScalarFieldEnum | Prisma.MaintenanceScalarFieldEnum[]
}

/**
 * Maintenance findFirstOrThrow
 */
export type MaintenanceFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * Filter, which Maintenance to fetch.
   */
  where?: Prisma.MaintenanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Maintenances to fetch.
   */
  orderBy?: Prisma.MaintenanceOrderByWithRelationInput | Prisma.MaintenanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Maintenances.
   */
  cursor?: Prisma.MaintenanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Maintenances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Maintenances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Maintenances.
   */
  distinct?: Prisma.MaintenanceScalarFieldEnum | Prisma.MaintenanceScalarFieldEnum[]
}

/**
 * Maintenance findMany
 */
export type MaintenanceFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * Filter, which Maintenances to fetch.
   */
  where?: Prisma.MaintenanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Maintenances to fetch.
   */
  orderBy?: Prisma.MaintenanceOrderByWithRelationInput | Prisma.MaintenanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Maintenances.
   */
  cursor?: Prisma.MaintenanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Maintenances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Maintenances.
   */
  skip?: number
  distinct?: Prisma.MaintenanceScalarFieldEnum | Prisma.MaintenanceScalarFieldEnum[]
}

/**
 * Maintenance create
 */
export type MaintenanceCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * The data needed to create a Maintenance.
   */
  data: Prisma.XOR<Prisma.MaintenanceCreateInput, Prisma.MaintenanceUncheckedCreateInput>
}

/**
 * Maintenance createMany
 */
export type MaintenanceCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Maintenances.
   */
  data: Prisma.MaintenanceCreateManyInput | Prisma.MaintenanceCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Maintenance createManyAndReturn
 */
export type MaintenanceCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * The data used to create many Maintenances.
   */
  data: Prisma.MaintenanceCreateManyInput | Prisma.MaintenanceCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Maintenance update
 */
export type MaintenanceUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * The data needed to update a Maintenance.
   */
  data: Prisma.XOR<Prisma.MaintenanceUpdateInput, Prisma.MaintenanceUncheckedUpdateInput>
  /**
   * Choose, which Maintenance to update.
   */
  where: Prisma.MaintenanceWhereUniqueInput
}

/**
 * Maintenance updateMany
 */
export type MaintenanceUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Maintenances.
   */
  data: Prisma.XOR<Prisma.MaintenanceUpdateManyMutationInput, Prisma.MaintenanceUncheckedUpdateManyInput>
  /**
   * Filter which Maintenances to update
   */
  where?: Prisma.MaintenanceWhereInput
  /**
   * Limit how many Maintenances to update.
   */
  limit?: number
}

/**
 * Maintenance updateManyAndReturn
 */
export type MaintenanceUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * The data used to update Maintenances.
   */
  data: Prisma.XOR<Prisma.MaintenanceUpdateManyMutationInput, Prisma.MaintenanceUncheckedUpdateManyInput>
  /**
   * Filter which Maintenances to update
   */
  where?: Prisma.MaintenanceWhereInput
  /**
   * Limit how many Maintenances to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Maintenance upsert
 */
export type MaintenanceUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * The filter to search for the Maintenance to update in case it exists.
   */
  where: Prisma.MaintenanceWhereUniqueInput
  /**
   * In case the Maintenance found by the `where` argument doesn't exist, create a new Maintenance with this data.
   */
  create: Prisma.XOR<Prisma.MaintenanceCreateInput, Prisma.MaintenanceUncheckedCreateInput>
  /**
   * In case the Maintenance was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MaintenanceUpdateInput, Prisma.MaintenanceUncheckedUpdateInput>
}

/**
 * Maintenance delete
 */
export type MaintenanceDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
  /**
   * Filter which Maintenance to delete.
   */
  where: Prisma.MaintenanceWhereUniqueInput
}

/**
 * Maintenance deleteMany
 */
export type MaintenanceDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Maintenances to delete
   */
  where?: Prisma.MaintenanceWhereInput
  /**
   * Limit how many Maintenances to delete.
   */
  limit?: number
}

/**
 * Maintenance.EmployeeEquipmentLog
 */
export type Maintenance$EmployeeEquipmentLogArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EmployeeEquipmentLog
   */
  select?: Prisma.EmployeeEquipmentLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EmployeeEquipmentLog
   */
  omit?: Prisma.EmployeeEquipmentLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmployeeEquipmentLogInclude<ExtArgs> | null
  where?: Prisma.EmployeeEquipmentLogWhereInput
  orderBy?: Prisma.EmployeeEquipmentLogOrderByWithRelationInput | Prisma.EmployeeEquipmentLogOrderByWithRelationInput[]
  cursor?: Prisma.EmployeeEquipmentLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EmployeeEquipmentLogScalarFieldEnum | Prisma.EmployeeEquipmentLogScalarFieldEnum[]
}

/**
 * Maintenance.MaintenanceLogs
 */
export type Maintenance$MaintenanceLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MaintenanceLog
   */
  select?: Prisma.MaintenanceLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MaintenanceLog
   */
  omit?: Prisma.MaintenanceLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceLogInclude<ExtArgs> | null
  where?: Prisma.MaintenanceLogWhereInput
  orderBy?: Prisma.MaintenanceLogOrderByWithRelationInput | Prisma.MaintenanceLogOrderByWithRelationInput[]
  cursor?: Prisma.MaintenanceLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MaintenanceLogScalarFieldEnum | Prisma.MaintenanceLogScalarFieldEnum[]
}

/**
 * Maintenance without action
 */
export type MaintenanceDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Maintenance
   */
  select?: Prisma.MaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Maintenance
   */
  omit?: Prisma.MaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MaintenanceInclude<ExtArgs> | null
}
