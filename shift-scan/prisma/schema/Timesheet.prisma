model TimeSheet {
  submitDate            DateTime               @default(now())
  date                  DateTime               @db.Date
  id                    String                 @id @default(uuid())
  userId                String
  jobsiteId             String
  costcode              String
  nu                    String                 @default("nu")
  Fp                    String                 @default("fp")
  startTime             DateTime
  endTime               DateTime?
  comment               String?
  statusComment         String?
  location              String?
  status                FormStatus             @default(PENDING)
  workType              WorkType
  editedByUserId        String?
  newTimeSheetId        String?
  createdByAdmin        Boolean                @default(false)
  employeeEquipmentLogs EmployeeEquipmentLog[]
  maintenanceLogs       MaintenanceLog[]
  tascoLogs             TascoLog[]
  costCode              CostCode               @relation(fields: [costcode], references: [name])
  jobsite               Jobsite                @relation(fields: [jobsiteId], references: [qrId])
  user                  User                   @relation(fields: [userId], references: [id], onDelete: Cascade)
  truckingLogs          TruckingLog[]
}

model MaintenanceLog {
  id            String      @id @default(uuid())
  timeSheetId   String
  userId        String
  maintenanceId String
  startTime     DateTime
  endTime       DateTime?
  comment       String?
  maintenance   Maintenance @relation(fields: [maintenanceId], references: [id])
  timeSheet     TimeSheet   @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)
  user          User        @relation(fields: [userId], references: [id])
}

model Maintenance {
  id                 String           @id @default(uuid())
  equipmentId        String
  equipmentIssue     String?
  additionalInfo     String?
  location           String?
  problemDiagnosis   String?
  solution           String?
  totalHoursLaboured Float?
  createdAt          DateTime         @default(now())
  priority           Priority
  delay              DateTime?
  delayReasoning     String?
  repaired           Boolean          @default(false)
  selected           Boolean          @default(false)
  hasBeenDelayed     Boolean          @default(false)
  createdBy          String?
  equipment          Equipment        @relation(fields: [equipmentId], references: [id])
  maintenanceLogs    MaintenanceLog[]
}

model TascoLog {
  id                 String              @id @default(uuid())
  timeSheetId        String
  shiftType          String
  equipmentId        String?
  laborType          String?
  materialType       String?
  LoadQuantity       Int                 @default(0)
  comment            String?
  createdAt          DateTime            @default(now())
  refueled           Refueled[]
  equipment          Equipment?          @relation(fields: [equipmentId], references: [qrId])
  tascoMaterialTypes TascoMaterialTypes? @relation(fields: [materialType], references: [name], onDelete: Cascade)
  timeSheet          TimeSheet           @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)
}

model TascoMaterialTypes {
  id       String     @id @default(uuid())
  name     String     @unique
  TascoLog TascoLog[]
}

model TruckingLog {
  id              String            @id @default(uuid())
  timeSheetId     String
  laborType       String
  taskName        String?
  equipmentId     String?
  startingMileage Int?
  endingMileage   Int?
  comment         String?
  createdAt       DateTime          @default(now())
  EquipmentHauled EquipmentHauled[]
  Material        Material[]
  Refueled        Refueled[]
  stateMileage    StateMileage[]
  equipment       Equipment?        @relation(fields: [equipmentId], references: [qrId])
  timeSheet       TimeSheet         @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)
}

model StateMileage {
  id               String      @id @default(uuid())
  truckingLogId    String
  state            String?
  stateLineMileage Int?
  createdAt        DateTime    @default(now())
  truckingLog      TruckingLog @relation(fields: [truckingLogId], references: [id])
}

model Material {
  id                 String      @id @default(uuid())
  LocationOfMaterial String?
  truckingLogId      String
  name               String?
  quantity           Int?
  loadType           LoadType?
  LoadWeight         Float?
  createdAt          DateTime    @default(now())
  truckingLog        TruckingLog @relation(fields: [truckingLogId], references: [id])
}

model Refueled {
  id                     String                @id @default(cuid())
  date                   DateTime              @default(now())
  employeeEquipmentLogId String?
  truckingLogId          String?
  tascoLogId             String?
  gallonsRefueled        Float?
  milesAtfueling         Int?
  EmployeeEquipmentLog   EmployeeEquipmentLog? @relation(fields: [employeeEquipmentLogId], references: [id])
  TascoLog               TascoLog?             @relation(fields: [tascoLogId], references: [id])
  TruckingLog            TruckingLog?          @relation(fields: [truckingLogId], references: [id])
}
