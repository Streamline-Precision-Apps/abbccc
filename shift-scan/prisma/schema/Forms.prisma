model FormTemplate {
  id                  String           @id @default(cuid())
  companyId           String
  name                String
  formType            String?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  isActive            Boolean          @default(false)
  isSignatureRequired Boolean          @default(false)
  submissions         FormSubmission[]
  company             Company          @relation(fields: [companyId], references: [id])
  FormGrouping        FormGrouping[]   @relation("FormGroupingToFormTemplate")
}

model FormGrouping {
  id           String         @id @default(cuid())
  title        String?
  order        Int
  fields       FormField[]
  FormTemplate FormTemplate[] @relation("FormGroupingToFormTemplate")
}

model FormField {
  id             String            @id @default(cuid())
  formGroupingId String
  label          String
  name           String
  type           FieldType
  required       Boolean           @default(false)
  order          Int
  defaultValue   String?
  placeholder    String?
  maxLength      Int?
  helperText     String?
  FormGrouping   FormGrouping      @relation(fields: [formGroupingId], references: [id], onDelete: Cascade)
  options        FormFieldOption[]
}

model FormFieldOption {
  id      String    @id @default(cuid())
  fieldId String
  value   String
  field   FormField @relation(fields: [fieldId], references: [id], onDelete: Cascade)
}

model FormSubmission {
  id             String         @id @default(cuid())
  title          String?
  formTemplateId String
  userId         String
  formType       String?
  data           Json?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  submittedAt    DateTime?
  status         FormStatus     @default(DRAFT)
  approvals      FormApproval[]
  formTemplate   FormTemplate   @relation(fields: [formTemplateId], references: [id], onDelete: Cascade)
  user           User           @relation(fields: [userId], references: [id])
}

model FormApproval {
  id               String         @id @default(cuid())
  formSubmissionId String
  signedBy         String?
  submittedAt      DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  signature        String?
  comment          String?
  formSubmission   FormSubmission @relation(fields: [formSubmissionId], references: [id], onDelete: Cascade)
  approver         User?          @relation(fields: [signedBy], references: [id])
}

enum FormStatus {
  PENDING
  APPROVED
  DENIED
  DRAFT
}

enum FieldType {
  TEXT
  TEXTAREA
  NUMBER
  DATE
  FILE
  DROPDOWN
  CHECKBOX
}
