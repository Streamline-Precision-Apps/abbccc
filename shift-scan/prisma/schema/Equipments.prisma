// This collection stores information about all company equipment. It includes a wide range of items such as company vehicles, trailers, handheld equipment, and heavy machinery. The purpose is to keep track of all assets the company owns and maintains.
model Equipment {
    id                     String          @id @default(cuid())
    qrId                   String          @unique // temporary id, generating specific unique qr code
    name                   String
    description            String
    equipmentTag           EquipmentTags   @default(EQUIPMENT)
    lastInspection         DateTime?
    nextInspection         DateTime?
    nextInspectionComment  String?
    lastRepair             DateTime?
    status                 EquipmentStatus @default(OPERATIONAL)
    createdAt              DateTime        @default(now())
    updatedAt              DateTime        @updatedAt
    make                   String?
    model                  String?
    year                   String?
    licensePlate           String?
    registrationExpiration DateTime?
    mileage                Int?
    isActive               Boolean         @default(true)
    inUse                  Boolean         @default(false)
    jobsiteId              String? // show location of equipment
    overWeight             Boolean?        @default(false)
    currentWeight          Float?          @default(0)

    employeeEquipmentLogs EmployeeEquipmentLog[]
    Maintenance           Maintenance[]
    TascoLogs             TascoLog[]
    TruckingLogs          TruckingLog[]
    EquipmentHauled       EquipmentHauled[]
    jobsite               Jobsite?               @relation(fields: [jobsiteId], references: [id], onDelete: Cascade)

    @@index([qrId]) // index for qr code
}

// Used in equipment section, admin assets section, maybe the check in the clockout section.
// tracks notes on the used equipment, who used it, where, the condition its in, and for how long.
model EmployeeEquipmentLog {
    id            String     @id @default(cuid())
    equipmentId   String
    jobsiteId     String
    employeeId    String
    startTime     DateTime?
    endTime       DateTime? // if end time is null it is not completed
    comment       String?
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    isSubmitted   Boolean    @default(false) // marks true when form is submitted at end of day
    status        FormStatus @default(PENDING) // approving of the form
    // connections to other tables
    timeSheetId   String?
    tascoLogId    String? // link to tasco logs IF USED
    laborLogId    String?
    truckingLogId String?
    maintenanceId String?
    refueled      Refueled[]
    employee      User       @relation(fields: [employeeId], references: [id], onDelete: Cascade)
    Job           Jobsite    @relation(fields: [jobsiteId], references: [qrId])
    Equipment     Equipment? @relation(fields: [equipmentId], references: [id])
    TimeSheets    TimeSheet? @relation(fields: [timeSheetId], references: [id])
}

model Refueled {
    id                     String   @id @default(cuid())
    date                   DateTime @default(now())
    employeeEquipmentLogId String?
    truckingLogId          String?
    gallonsRefueled        Float?
    milesAtfueling         Int? // miles at fueling for trucks

    EmployeeEquipmentLog EmployeeEquipmentLog? @relation(fields: [employeeEquipmentLogId], references: [id])
    TruckingLog          TruckingLog?          @relation(fields: [truckingLogId], references: [id])
    TascoLog             TascoLog?             @relation(fields: [tascoLogId], references: [id])
    tascoLogId           String?
}
