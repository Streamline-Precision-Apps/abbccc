// This collection stores information about all company equipment. It includes a wide range of items such as company vehicles, trailers, handheld equipment, and heavy machinery. The purpose is to keep track of all assets the company owns and maintains.
model Equipment {
    id                     String          @id @default(cuid())
    qrId                   String          @unique // temporary id, generating specific unique qr code
    name                   String
    description            String
    equipmentTag           EquipmentTags   @default(EQUIPMENT)
    lastInspection         DateTime?
    nextInspection         DateTime?
    nextInspectionComment  String?
    lastRepair             DateTime?
    status                 EquipmentStatus @default(OPERATIONAL)
    createdAt              DateTime        @default(now())
    updatedAt              DateTime        @updatedAt
    make                   String?
    model                  String?
    year                   String?
    licensePlate           String?
    registrationExpiration DateTime?
    mileage                Int?
    isActive               Boolean         @default(true)
    inUse                  Boolean         @default(false)
    overWeight             Boolean?        @default(false) // Admin 
    currentWeight          Float?          @default(0) // Admin 

    employeeEquipmentLogs EmployeeEquipmentLog[]
    Maintenance           Maintenance[]
    TascoLogs             TascoLog[]
    TruckingLogs          TruckingLog[]
    EquipmentHauled       EquipmentHauled[]

    @@index([qrId]) // index for qr code
}

//--------------------------------------------------------------------------------------------------------------------------------
model EmployeeEquipmentLog {
    id          String     @id @default(cuid())
    equipmentId String
    jobsiteId   String
    employeeId  String
    startTime   DateTime?
    endTime     DateTime? // if end time is null it is not completed
    comment     String?
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    isFinished  Boolean    @default(false) // marks true when form is submitted at end of day
    status      FormStatus @default(PENDING) // approving of the form from manager

    // Optional connections to other tables
    timeSheetId   String?
    tascoLogId    String? // link to tasco logs IF USED
    laborLogId    String?
    truckingLogId String?
    maintenanceId String?

    // Relations
    refueled   Refueled[]
    employee   User       @relation(fields: [employeeId], references: [id], onDelete: Cascade)
    jobsite    Jobsite    @relation(fields: [jobsiteId], references: [qrId])
    equipment  Equipment? @relation(fields: [equipmentId], references: [id])
    timeSheets TimeSheet? @relation(fields: [timeSheetId], references: [id])
}

//--------------------------------------------------------------------------------------------------------------------------------
model EquipmentHauled {
    id            String   @id @default(uuid())
    truckingLogId String
    equipmentId   String?
    recordedAt    DateTime @default(now())
    createdAt     DateTime @default(now())
    jobSiteId     String?

    truckingLog TruckingLog? @relation(fields: [truckingLogId], references: [id])
    equipment   Equipment?   @relation(fields: [equipmentId], references: [id])
    jobSite     Jobsite?     @relation(fields: [jobSiteId], references: [id], onDelete: Cascade)
}

//--------------------------------------------------------------------------------------------------------------------------------
