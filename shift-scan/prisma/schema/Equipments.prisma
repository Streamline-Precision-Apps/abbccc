model Equipment {
  id                    String                 @id @default(cuid())
  qrId                  String                 @unique
  name                  String
  description           String
  equipmentVehicleInfo  EquipmentVehicleInfo? // one to one connection
  equipmentTag          EquipmentTags          @default(EQUIPMENT)
  status                EquipmentStatus        @default(OPERATIONAL)
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  isActive              Boolean                @default(true)
  inUse                 Boolean                @default(false)
  overWeight            Boolean?               @default(false)
  currentWeight         Float?                 @default(0)
  CreationLogs          CreationLogs?
  EmployeeEquipmentLogs EmployeeEquipmentLog[]
  EquipmentHauled       EquipmentHauled[]
  Maintenances          Maintenance[]
  TascoLogs             TascoLog[]
  TruckingLogs          TruckingLog[]
  DocumentTags          DocumentTag[]          @relation("DocumentTagToEquipment")

  @@index([qrId])
}

//We Use Creation Logs as a way to monitor Created 
model CreationLogs {
  id              String     @id @default(cuid())
  createdById     String? // User ID (employee or admin)
  equipmentId     String?    @unique
  jobsiteId       String?    
  // I removed @ unique to fix the qr generator section.
  // jobsiteId       String?    @unique
  comment         String? // creating section
  createdByOffice Boolean    @default(false) // True if created by admin/office
  Equipment       Equipment? @relation(fields: [equipmentId], references: [id])
  Jobsite         Jobsite?   @relation(fields: [jobsiteId], references: [id])
  User            User?      @relation(fields: [createdById], references: [id])
}

model EquipmentVehicleInfo {
  id                     String    @id @default(cuid())
  make                   String?
  model                  String?
  year                   String?
  licensePlate           String?
  registrationExpiration DateTime?
  mileage                Int?
  Equipment              Equipment @relation(fields: [id], references: [id])
}

model EmployeeEquipmentLog {
  id            String       @id @default(cuid())
  equipmentId   String
  jobsiteId     String
  employeeId    String
  startTime     DateTime?
  endTime       DateTime?
  comment       String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  isFinished    Boolean      @default(false)
  status        FormStatus   @default(PENDING)
  timeSheetId   String?
  tascoLogId    String?
  laborLogId    String?
  truckingLogId String?
  MaintenanceId Maintenance? //one to one relationship
  User          User         @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  Equipment     Equipment    @relation(fields: [equipmentId], references: [id])
  Jobsite       Jobsite      @relation(fields: [jobsiteId], references: [qrId])
  TimeSheet     TimeSheet?   @relation(fields: [timeSheetId], references: [id])
  RefuelLogs    RefuelLog[]
}

model EquipmentHauled {
  id            String      @id @default(uuid())
  truckingLogId String
  equipmentId   String?
  createdAt     DateTime    @default(now())
  jobSiteId     String?
  Equipment     Equipment?  @relation(fields: [equipmentId], references: [id])
  JobSite       Jobsite?    @relation(fields: [jobSiteId], references: [id], onDelete: Cascade)
  TruckingLog   TruckingLog @relation(fields: [truckingLogId], references: [id])
}
