model User {
  id                   String                 @id @default(cuid())
  firstName            String
  lastName             String
  username             String                 @unique
  email                String                 @unique
  password             String
  signature            String?
  DOB                  String
  truckView            Boolean
  tascoView            Boolean
  laborView            Boolean
  mechanicView         Boolean
  permission           Permission             @default(USER)
  image                String?
  activeEmployee       Boolean                @default(true) //indicates if the user is an active employee
  startDate            DateTime?              @default(now())
  terminationDate      DateTime?
  accountSetup         Boolean                @default(false)
  clockedIn            Boolean                @default(false)
  companyId            String
  passwordResetTokenId String?
  workTypeId           String?
  Contact              Contacts?
  CreationLogs         CreationLogs[]
  EquipmentLogs        EmployeeEquipmentLog[]
  FormApprovals        FormApproval[]
  FormSubmissions      FormSubmission[]
  MaintenanceLogs      MaintenanceLog[]
  PasswordResetTokens  PasswordResetToken[]
  TimeSheets           TimeSheet[]
  Company              Company                @relation(fields: [companyId], references: [id])
  UserSettings         UserSettings?
  Crews                Crew[]                 @relation("CrewToUser")

  @@unique([firstName, lastName, DOB])
  @@index([email])
}

model UserSettings {
  id                String  @id @default(cuid())
  userId            String  @unique
  language          String  @default("en")
  generalReminders  Boolean @default(false)
  personalReminders Boolean @default(false)
  cameraAccess      Boolean @default(false)
  locationAccess    Boolean @default(false)
  cookiesAccess     Boolean @default(false)
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Contacts {
  id                     String   @id @default(cuid())
  userId                 String   @unique @map("employeeId")
  phoneNumber            String
  emergencyContact       String?
  emergencyContactNumber String?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  User                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  id         String   @id @default(cuid())
  email      String
  token      String   @unique
  expiration DateTime
  User       User     @relation(fields: [email], references: [email])

  @@unique([email, token])
}
